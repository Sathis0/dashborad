Commit SHA,Author,Email,Date,Message
e1fec1562714eb41ae48f97310b254618a26d248,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-09-13 12:46:00+00:00,"Merge pull request #26148 from mshabunin:fix-sift-corruption

features2d: fixed out of bounds access in SIFT"
6308739638ab353da2e0152c35416af92c1ca4af,Maksim Shabunin,maksim.shabunin@gmail.com,2024-09-13 10:09:54+00:00,features2d: fixed out of bounds access in SIFT
bf998429f669518cd224f1134a769b18b61d60dc,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-09-13 10:33:54+00:00,"Merge pull request #26146 from mshabunin:fix-test-overrides

ts: add some missing override markers"
966324545932b0bd45e73eab83b0534e5b4b84bf,Maksim Shabunin,maksim.shabunin@gmail.com,2024-09-13 09:48:05+00:00,ts: add some missing override markers
f143f45fa28aac609d3a5fcd8bd2c20d59e98626,Robert Mitchell,refmitchell@outlook.com,2024-09-13 09:34:01+00:00,"Merge pull request #25785 from refmitchell:issue_25784

Documentation update for minMaxLoc #25785

Fixes #25784

Update documentation for minMaxLoc to be more specific about when multi-channel images are and are not supported.

Testing:
Built documentation locally to check that updates were incorporated correctly.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
c8080aa4155b5e21bcdd291deee2357cfbca84a3,Wanli,wanli.zhong.1999@gmail.com,2024-09-13 07:56:48+00:00,"Merge pull request #26109 from WanliZhong:univ_intrin_operator2warpper

Replace operators with wrapper functions on universal intrinsics backends #26109

This PR aims to replace the operators(logic, arithmetic, bit) with wrapper functions(v_add, v_eq, v_and...)

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
4c81e174bfb28e67251d33ac812ba0cc57a2f3c4,Maksim Shabunin,maksim.shabunin@gmail.com,2024-09-12 15:07:24+00:00,"Merge pull request #25901 from mshabunin:fix-riscv-aarch-baseline

RISC-V/AArch64: disable CPU features detection #25901

This PR is the first step in fixing current issues with NEON/RVV, FP16, BF16 and other CPU features on AArch64 and RISC-V platforms.

On AArch64 and RISC-V platforms we usually have the platform set by default in the toolchain when we compile it or in the cmake toolchain file or in CMAKE_CXX_FLAGS by user. Then, there are two ways to set platform options: a) ""-mcpu=<some_cpu>"" ; b) ""-march=<arch description>"" (e.g. ""rv64gcv""). Furthermore, there are no similar ""levels"" of optimizations as for x86_64, instead we have features (RVV, FP16,...) which can be enabled or disabled. So, for example, if a user has ""rv64gc"" set by the toolchain and we want to enable RVV. Then we need to somehow parse their current feature set and append ""v"" (vector optimizations) to this string. This task is quite hard and the whole procedure is prone to errors.

I propose to use ""CPU_BASELINE=DETECT"" by default on AArch64 and RISC-V platforms. And somehow remove other features or make them read-only/detect-only, so that OpenCV wouldn't add any extra ""-march"" flags to the default configuration. We would rely only on the flags provided by the compiler and cmake toolchain file. We can have some predefined configurations in our cmake toolchain files.

Changes made by this PR:
- `CMakeLists.txt`: 
  - use `CMAKE_CROSSCOMPILING` instead of `CMAKE_TOOLCHAIN_FILE` to detect cross-compilation. This might be useful in cases of native compilation with a toolchain file
  - removed obsolete variables `ENABLE_NEON` and `ENABLE_VFPV3`, the first one have been turned ON by default on AArch64 platform which caused setting `CPU_BASELINE=NEON`
  - raise minimum cmake version allowed to 3.7 to allow using `CMAKE_CXX_FLAGS_INIT` in toolchain files
- added separate files with arch flags for native compilation on AArch64 and RISC-V, these files will be used in our toolchain files and in regular cmake
- use `DETECT` as default value for `CPU_BASELINE` also allow `NATIVE`, warn user if other values were used (only for AArch64 and RISC-V)
- for each feature listed in `CPU_DISPATCH` check if corresponding `CPU_${opt}_FLAGS_ON` has been provided, warn user if it is empty (only for AArch64 and RISC-V)
- use `CPU_BASELINE_DISABLE` variable to actually turn off macros responsible for corresponding features even if they are enabled by compiler
- removed Aarch64 feature merge procedure (it didn't support `-mcpu` and built-in `-march`)
- reworked AArch64 and two RISC-V cmake toolchain files (does not affect Android/OSX/iOS/Win):
  - use `CMAKE_CXX_FLAGS_INIT` to set compiler flags
  - use variables `ENABLE_BF16`, `ENABLE_DOTPROD`, `ENABLE_RVV`, `ENABLE_FP16` to control `-march`
  - AArch64: removed other compiler and linker flags
    - `-fdata-sections`, `-fsigned-char`, `-Wl,--no-undefined`, `-Wl,--gc-sections`   - already set by OpenCV
    - `-Wa,--noexecstack`, `-Wl,-z,noexecstack`, `-Wl,-z,relro`, `-Wl,-z,now` - can be enabled by OpenCV via `ENABLE_HARDENING`
    - `-Wno-psabi` - this option used to disable some warnings on older ARM platforms, shouldn't harm
  - ARM: removed same common flags as for AArch64, but left `-mthumb` and `--fix-cortex-a8`, `-z nocopyreloc`"
85923c8f3054bc52c9c30c2a8e932dbd96cc26fc,FantasqueX,fantasquex@gmail.com,2024-09-12 13:05:24+00:00,"Merge pull request #26113 from FantasqueX:zlib-ng-2-2-1

Update zlib-ng to 2.2.1 #26113

Release: https://github.com/zlib-ng/zlib-ng/releases/tag/2.2.1
ARM diagnostics patch: https://github.com/zlib-ng/zlib-ng/pull/1774

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
7de3a8e960d798f8ebd4637b8aa15d9da4021546,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-09-11 09:18:42+00:00,"Merge pull request #26088 from plctlab:rvp_pt2

3rdparty: NDSRVP - Part 2: Filter"
fcfdd311ab7ad32ebb08dcde65c3adf2ea2ce099,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-09-10 10:20:04+00:00,"Merge pull request #26134 from savuor:rv/mixed_arithm_channels

Mixed arithmetics tests: multichannel support"
976fb3e8d682cc37caa72fcb32885c97e0a10d24,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-09-10 07:28:35+00:00,"Merge pull request #26132 from asmorkalov:as/tlile_leakyRelu

Leaky RELU support for TFLite."
8725a7e21c8eb5e12d77ad9233538c94048ccde7,Rostislav Vasilikhin,rostislav.vasilikhin@opencv.ai,2024-09-09 11:54:00+00:00,Mixed arithmetics tests: multichannel
209802c9f62f4ce72c99415dd59e83d543605c5b,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-09-09 08:33:20+00:00,Leaky RELU support for TFLite.
79faf857d988bcbfc993f0a17cd38835d9d243d9,pasbi,pasbi@users.noreply.github.com,2024-09-09 05:47:26+00:00,"Merge pull request #26042 from pasbi:add-PtrStepSz_size

Add size() to CUDA PtrStepSz #26042

According to [cppreference.com compiler support table](https://en.cppreference.com/w/cpp/compiler_support/17), `nvcc` supports `[[nodiscard]]` from version 11.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake

Related: https://github.com/opencv/opencv/pull/25659"
e5790c02419fd1c03e0e574099e36722ffc3fd12,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-09-09 04:45:55+00:00,"Merge pull request #26116 from savuor:rv/warp_affine_perf_types

Added more data types for warpAffine() perf tests"
a7d942b681c5edd0cc27407d8e4d3dbf36c7a40e,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-09-07 11:20:34+00:00,"Merge pull request #26125 from asmorkalov:as/HAL_fix_nullprt_leak

Excluded nullptr leak to arithmetic HAL got from empty Mat."
307dc2a298e7a53d2e852dc14fd6bac036961f39,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-09-06 12:13:55+00:00,Excluded nullptr leak to arithmetic HAL got from empty Mat.
6cc166985d9e30d78a5a117e54dec68ae0b477ca,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-09-06 05:53:19+00:00,"Merge pull request #26117 from FantasqueX:update-remap-tutorial-1

Update remap tutorial"
7590813b693e94ca608185320bde1493ccc0abfc,Rostislav Vasilikhin,savuor@gmail.com,2024-09-06 05:26:00+00:00,"Merge pull request #26115 from savuor:rv/flip_ocl_dtypes

Added more data types to OCL flip() and rotate() perf tests #26115

Connected PR with updated sanity data: https://github.com/opencv/opencv_extra/pull/1206

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
2a8d4c6025e0a05a1dd377666e7a1871aaa59d7f,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-09-06 05:21:47+00:00,"Merge pull request #26120 from mshabunin:fix-rvv-init-4.x

RISC-V: remove statically initialized global RVV variables (4.x)"
dbd53fe89ad0b92fecdef2c1ee5ac51195cfa929,Maksim Shabunin,maksim.shabunin@gmail.com,2024-09-05 16:49:50+00:00,RISC-V: remove statically initialized global RVV variables
b743edd466dd47878a60a749b608fad5e34632cf,Letu Ren,fantasquex@gmail.com,2024-09-05 08:54:32+00:00,"Update remap tutorial

- Make x a math symbol
- Fix a typo"
06db881ca9a389f46527cfa204239d09c697f471,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-09-05 08:29:29+00:00,"Merge pull request #26114 from savuor:rv/rgb2gray_bit_exact

Added bit-exact tests for RGB2Gray"
c0a0852f053cee5e30c6fd6ba3779d4b7d490716,Rostislav Vasilikhin,rostislav.vasilikhin@opencv.ai,2024-09-05 03:46:17+00:00,added more data types for warpAffine() perf tests
9ef574a213796e24116a8ee5c864ac7f6e562db5,Rostislav Vasilikhin,rostislav.vasilikhin@opencv.ai,2024-09-05 01:34:35+00:00,added bit-exact tests for RGB2Gray
76f495dce9f465f1e1d194f122f20f9142351ead,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-09-04 06:16:28+00:00,"Merge pull request #26105 from mshabunin:fix-cmake-3.30

build: minor changes for cmake 3.30 and some cleanup"
32d3d6fa9745d76a2dba2524151f4beb8e45174e,Maksim Shabunin,maksim.shabunin@gmail.com,2024-09-03 13:30:49+00:00,build: minor changes for cmake 3.30 and some cleanup
8561f45c2a36f6d3cdda41844c389b59445d0b22,Vincent Rabaud,vrabaud@google.com,2024-09-03 12:16:22+00:00,"Merge pull request #26084 from vrabaud:avif_check

Avoid uninitialized value read in resize. #26084

When there is no point falling right, an hypothetical value is computed (but unused) using an uninitialized ofst. This triggers warnings in the sanitizers.

Including those values in the for loops is also possible but messy when SIMD is involved.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch"
88f99edc65b45d69492fa38ae31e3db3f446b3a8,tingboliao,33657473+tingboliao@users.noreply.github.com,2024-09-03 04:56:37+00:00,"Merge pull request #26071 from tingboliao:4.x

Remove the redundant codes of cv::convertMaps and mRGBA2RGBA<uchar> #26071

(1) cv::convertMaps: the branch [else if( m1type == CV_32FC2 && dstm1type == CV_16SC2 ) if( nninterpolate )] is unreachable,
    as the condition is satisfied in lines 1959 to 1961, calculated in advance and return directly.
(2) mRGBA2RGBA<uchar>: dst[0], dst[1], dst[2] and dst[3] is calculated repeatedly. Introduced in https://github.com/opencv/opencv/pull/13440

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [ ] I agree to contribute to the project under Apache 2 License.
- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [ ] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
e9c3e1acb51e9c2ed32397345b6c69b1182c3442,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-09-03 04:50:27+00:00,"Merge pull request #26102 from FantasqueX:make-t-a-math-symbol

Make T a math symbol"
3995ad8458df5a2f4cbc8de355d516eb5ad86e84,Letu Ren,fantasquex@gmail.com,2024-09-03 02:54:10+00:00,Make T a math symbol
e2ba36bf9c071debcd318b9065e46efc73a7b3c1,Suleyman TURKMEN,sturkmen@hotmail.com,2024-09-02 12:26:24+00:00,"Merge pull request #26093 from sturkmen72:related_issue_22090

Update test_tiff.cpp #26093

related #22090

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
960aaa32dba7fd51fa29c13ba5bd498eb4baeba4,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-09-02 06:34:13+00:00,"Merge pull request #26094 from catree:fix_cameramatrix_doc_typo

Fix typo with cameramatrix command for documentation"
b72d7e3b05c421e54f0cd6bbe20f2c0ca7879890,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-09-02 06:02:28+00:00,"Merge pull request #26091 from asmorkalov:as/arm_version_check

Got rid of CAROTENE_NEON_ARCH and use standard __ARM_ARCH check"
165bf25c46cdbb6d098c6f724d770c95072dbb78,catree,catree.catreus@outlook.com,2024-08-31 22:59:17+00:00,"Fix typo with cameramatrix command for documentation.

Fix link for ""RANSAC for Dummies"" tutorial."
4d665419992dda6e40364f741ae4765176b64bb0,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-30 11:01:53+00:00,"Merge pull request #26067 from CNClareChen:4.10

Resolve compilation bug on LoongArch platform"
5b4d1ce6a09747c9bcaeab97f11aa410e9bcd398,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-30 10:10:24+00:00,"Merge pull request #26080 from asmorkalov:as/HAL_minMaxIdx_ND_offset

Added offset for HAL as ofs2idx expects 1-based index #26080

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [ ] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
a905526f71a48dc8fb227a5aba28322d2683c451,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-08-30 09:09:04+00:00,Got rid of CAROTENE_NEON_ARCH and use standard __ARM_ARCH check.
2829a6de853c3c54d2900f54bfc7374f6dffb929,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-30 08:35:08+00:00,"Merge pull request #26030 from CNClareChen:4.x

Workaround for division by zero, issue #25795"
e087cc8fd10d0cabf39c3d8d2980f7b34251232d,llh721113,llh721113@outlook.com,2023-06-26 12:37:34+00:00,feat: NDSRVP Filter
f156236d17f72493fe4ad9393317dfccdbdf9d00,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-28 15:46:53+00:00,"Merge pull request #26081 from mshabunin:fix-v4l-nv12

videoio: fix V4L backend with NV12 input format"
61f6b6d773fe18cb39554bae0b0f4d619bfb20a3,Maksim Shabunin,maksim.shabunin@gmail.com,2024-08-21 15:57:50+00:00,videoio: fix V4L backend with NV12 input format
bacefd3b8dc36ffe9aa8f24b0eaa6ef5d45575b8,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-28 13:15:01+00:00,"Merge pull request #26077 from vrabaud:avif_check

Disable strict mode when reading avif files"
a17fafc3afe1019ebee46c03b149fa8ad8f82a15,Vincent Rabaud,vrabaud@google.com,2024-08-28 09:49:27+00:00,"Disable strict mode when reading avif files

This fixes https://github.com/opencv/opencv/issues/26011"
766bad0035bcd2cc37e3aa24bb747192a2d82e11,alexlyulkov,alex.lyulkov@gmail.com,2024-08-27 14:23:11+00:00,"Merge pull request #26053 from alexlyulkov:al/opencl-conformance-tests

DNN(ONNX): Enabled several OpenCL conformance tests #26053

The tests also work in 5.x

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
18117cf355e2b1bffd36f52ed22b01f2e6a6abf7,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-27 14:12:00+00:00,"Merge pull request #26063 from mshabunin:fix-config-and-doc

build/doc: disabled libdc1394 by default, documented framebuffer options"
ea8c9dc2dee97a70923d33da2243b37459170b4b,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-27 14:04:57+00:00,"Merge pull request #26062 from asmorkalov:as/pow_ocl_duplicate

Removed duplicated code in Pow implementation that triggers wrong assert on Intel iGPU"
3803eeecba7c4028b4a82748f0295c69081f0351,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-27 13:52:36+00:00,"Merge pull request #26069 from hanliutong:fix-medianBlur

Enable `CV_SIMD_SCALABLE` for median blur."
2d5b0caa7712b1f8e2d2dbe67dc0d5c22696d6f7,Liutong HAN,liutong2020@iscas.ac.cn,2024-08-27 02:51:08+00:00,Enable `CV_SIMD_SCALABLE` in medianBlur.
5638c38d530e2f524eeecbba80cf6deae2c0667a,Hao Chen,chenhao@loongson.cn,2024-07-04 07:04:24+00:00,"Resolve compilation bug

Fixed a bug that occurred when compiling with the clang18 compiler.

Signed-off-by: Hao Chen <chenhao@loongson.cn>"
9c19a0cdba3e489b1944392028633ea8430d95eb,Hao Chen,chenhao@loongson.cn,2024-08-14 08:57:44+00:00,"Reinitialize divider matrix in DivRCPerfTest and DivPerfTest Cases.

This patch reinitializes divider matrix without zero values in DivRCPerfTest
and DivPerfTest test cases."
412c97b411cf03e560238c2de0112dfa121933a6,Maksim Shabunin,maksim.shabunin@gmail.com,2024-08-23 15:09:40+00:00,"build/doc: disabled libdc1394 by default, documented framebuffer options"
76bf17a24807601f39a8efc15d1149680c4724d0,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-08-23 14:39:49+00:00,Removed duplicated code in Pow implementation that triggers wrong assert on Intel iGPU.
f4c2e4f8720cbb990d9be11af4fb87a4a4805da7,penghuiho,penghuihe@yeah.net,2024-08-23 14:12:19+00:00,"Merge pull request #26061 from penghuiho:fix-pow-bug

Fixed the simd bugs of iPow8u and iPow16u #26061

Add the following cases in opencv_perf_core:

* OCL_PowFixture_iPow.iPow/0, where GetParam() = (640x480, 8UC1)
* OCL_PowFixture_iPow.iPow/2, where GetParam() = (640x480, 16UC1)

iPow8u and iPow16u failed to call to simd accelerating while executing.

Fix the bug by changing the input type of iPow_SIMD function.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [ ] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
e5b871fa7ea391169d7ca2be0e30f6a25535750c,Abduragim Shtanchaev,44877829+Abdurrahheem@users.noreply.github.com,2024-08-23 12:25:48+00:00,"Merge pull request #26059 from Abdurrahheem:ash/fix-einsum-allocation

Einsum buffer allocation fix #26059

This PR fixed buffer allocation issue in Einsum layer that causes segmentation fault on 32bit platforms. Related issue #26008 

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
a3bdbf555339b28d161e393131f954b0d3d8e16d,Kumataro,Kumataro@users.noreply.github.com,2024-08-23 09:35:13+00:00,"Merge pull request #26022 from Kumataro:fix26016

Imgproc: use double to determine whether the corners points are within src #26022

close #26016
Related https://github.com/opencv/opencv_contrib/pull/3778

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
916724e2a0a07c755d51c400a8b4585bf3937749,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-23 08:58:20+00:00,"Merge pull request #26054 from asmorkalov:as/warping_perf

Extended perf tests for warpPerspective to cover channels too"
6c6d5cd7b2d3aa5de968afbe4b23da84b29bb66f,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-23 07:49:08+00:00,"Merge pull request #25986 from asmorkalov:as/js_for_contrib

Split Javascript white-list to support contrib modules #25986

Single whitelist converted to several per-module json files. They are concatenated automatically and can be overriden by user config.

Related to https://github.com/opencv/opencv/pull/25656

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
697512bb9f8dc038b898b84de32c3ba148f8732c,Maxim Smolskiy,mithridatus@mail.ru,2024-08-22 12:06:02+00:00,"Merge pull request #26014 from MaximSmolskiy:increase-search-radius-for-corners-neighbors-in-ChessBoardDetector-findQuadNeighbors

Increase neighbors search radius for corners in ChessBoardDetector:findQuadNeighbors #26014

I didn't do everything right the way I wanted at #25991. I forgot that `edge_len` is edge **squared** length as well as `thresh_scale` is threshold for **squared** scale. So, I wanted to increase scale by `sqrt(2)` times (idea is to use quad diagonal instead of quad side) and therefore `thresh_scale` should be equal to `sqrt(2)^2 = 2`.

And refactor variables names to explicitly indicate that they are squared, so that no one else falls into this trap

I tested this PR with benchmark
```
python3 objdetect_benchmark.py --configuration=generate_run --board_x=7 --path=res_chessboard --synthetic_object=chessboard
```
PR increases detected chessboards number by `1/2%`:
```
cell_img_size = 100 (default)

before
                                 category  detected chessboard  total detected chessboard  total chessboard  average detected error chessboard
                                      all             0.941667                      13560             14400                           0.596726
Total detected time:  136.68963200000007 sec

after
                                 category  detected chessboard  total detected chessboard  total chessboard  average detected error chessboard
                                      all             0.952083                      13710             14400                           0.595984
Total detected time:  136.55770600000014 sec

----------------------------------------------------------------------------------------------------------------------------------------------

cell_img_size = 10

before
                                 category  detected chessboard  total detected chessboard  total chessboard  average detected error chessboard
                                      all             0.579167                       8340             14400                           4.198448
Total detected time:  2.535998999999999 sec

after
                                 category  detected chessboard  total detected chessboard  total chessboard  average detected error 
                                      all             0.591389                       8516             14400                           4.155250
Total detected time:  2.700832999999997 sec
```

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
55d1bf3da9719526232a47417b33f85434b2513e,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-08-21 14:31:28+00:00,Extended perf tests for warpPerspective to cover channels too.
347d673a876fde6c99d539674ca129322f50f65c,Yuantao Feng,yuantao.feng@opencv.org.cn,2024-08-21 14:03:24+00:00,"Merge pull request #23279 from fengyuentau:add_topk

dnn: add ONNX TopK #23279

Merge with https://github.com/opencv/opencv_extra/pull/1200

Partially fixes #22890 and #20258

To-do:

- [x] TopK forward impl
- [x] add tests
- [x] support Opset 1 & 10 if possible
- [ ] ~Support other backends~ (TopK has two outputs, which is not supported by other backends, such as openvino)


Perf:

M1 (time in millisecond)

| input shape     | axis | dnn  | ort  |
| --------------- | ---- | ---- | ---- |
| (1000, 100)     | 0    | 1.68 | 4.07 |
| (1000, 100) K5  | 0    | 1.13 | 0.12 |
| (1000, 100)     | 1    | 0.96 | 0.77 |
| (100, 100, 100) | 0    | 10.00 | 31.13 |
| (100, 100, 100) | 1    | 7.33 | 9.17 |
| (100, 100, 100) | 2    | 7.52 | 9.48 |

M2 (time in milisecond)

| input shape     | axis | dnn  | ort  |
| --------------- | ---- | ---- | ---- |
| (1000, 100)     | 0    | 0.76 | 2.44 |
| (1000, 100) K5 | 0 | 0.68 | 0.07 |
| (1000, 100)     | 1    | 0.41 | 0.50 |
| (100, 100, 100) | 0    | 4.83 | 17.52|
| (100, 100, 100) | 1    | 3.60 | 5.08 |
| (100, 100, 100) | 2    | 3.73 | 5.10 |

ONNXRuntime performance testing script: https://gist.github.com/fengyuentau/a119f94fd16721ec9974b8c7b0a45d4c

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
7cf075c3924b57420484a59829f47af72274c8dd,FantasqueX,fantasquex@gmail.com,2024-08-21 08:33:07+00:00,"Merge pull request #25968 from FantasqueX:correct-bayer2gray-simd-1

Correct Bayer2Gray u8 SIMD #25968

SIMD version of CV_DESCALE is not correct. It should be implemented using v_dotprod.

What's more, the stop condition of vector operation should be `bayer < bayer_end - 14` because we just need to make sure result is safely stored into `dst`.

Closes: https://github.com/opencv/opencv/issues/25823

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
7e3b69e02befd80c89276aeafa6910cd89f53492,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-21 07:26:34+00:00,"Merge pull request #26052 from savuor:rv/rounding_lock

Fix rounding mode for test"
8715229e49fe05bff6eddc34784479eaf515e75b,alexlyulkov,alex.lyulkov@gmail.com,2024-08-21 06:24:28+00:00,"Merge pull request #26009 from alexlyulkov:al/unify-build-gradle

Unified build.gradle files into one template #26009

Issue #24686

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
7fe36a3cb263aecc718b7e5a338ade5f27275d9e,Rostislav Vasilikhin,rostislav.vasilikhin@opencv.ai,2024-08-21 01:49:47+00:00,lock rounding mode for parallel test run
a087a9c47ad0c45d1f494eb990f27307b1b13e81,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-20 11:19:39+00:00,"Merge pull request #26045 from asmorkalov:as/variant-free

Free Variant variable after usage in DShow back-end"
ec2e2da1fed5208964a39d53d9029534e021f4b5,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-20 11:19:21+00:00,"Merge pull request #26046 from ivafanas:speedup_random_forest_get_votes

speedup random forest getVotes method."
7d3d2101f9ac015439bd914425d9b308cdfa6407,Ivan Afanasyev,iafanasyev@unipro.ru,2024-08-20 08:35:59+00:00,speedup random forest getVotes method.
24fde087121efbce353dd4aacac22318a98eaa83,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-08-19 18:40:52+00:00,Free Variant variable after usage in DShow back-end
ae4a11b0c0986809d2f938f68343c8da99286b29,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-19 16:06:16+00:00,"Merge pull request #26034 from Octopus136:issue-26033

Fix: reduce redundant code by optimizing device name retrieval"
ebe04a57235535006826ca2654335d7e7f34a2f0,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-19 14:44:07+00:00,"Merge pull request #26041 from knmcguire:patch-1

Docfix - Remove notice on using deprecated itemset"
de89aa379d23309e4e9a84a22269553286353f32,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-19 14:40:55+00:00,"Merge pull request #25980 from ericmariasis:eric-mariasis-stitcher-py-markdown

fixing issue 25962"
cb72a2131f04934b22538a25a7d37e809c1d7826,ericmariasis,ericmariasis829@gmail.com,2024-08-01 20:32:27+00:00,Added python branch to stitching tutorial.
aa133cd899309dc7a5e0e7e63eb2fa242b914a34,ShengYu,shengyu7697@gmail.com,2024-08-19 10:00:07+00:00,"Merge pull request #26038 from shengyu7697:fix-typo

Fix typos #26038

Fix typos

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
b5b9b3a279dad006344ae068ce5c8fc1d73745bc,Kimberly N. McGuire,kimberly@bitcraze.io,2024-08-18 13:43:25+00:00,Remove notice on using deprecated itemset
61d719d2aa2c04f56416f9b18808517cd7b4e385,Octopus136,1361227324@qq.com,2024-08-16 07:31:35+00:00,fix: reduce redundant code by optimizing device name retrieval
78630ddc678c7213ef84aa5a12650d3f22c06590,Alexander Alekhin,alexander.a.alekhin@gmail.com,2024-08-16 01:08:34+00:00,Merge pull request #26029 from fengyuentau:dnn/fix_cuda_matmul_crash
0838920371bfa267c103890138553439b4a507e7,Alexander Alekhin,alexander.a.alekhin@gmail.com,2024-08-15 16:53:02+00:00,Merge pull request #26032 from FantasqueX:fix-typo-3
95070e61ce2fd95d1f49fa67c8ff065527e9b96e,Alexander Alekhin,alexander.a.alekhin@gmail.com,2024-08-15 16:52:45+00:00,Merge pull request #26031 from FantasqueX:fix-typo-2
a8a088d28c57990c866d1e961cc5e59a1529c37d,Letu Ren,fantasquex@gmail.com,2024-08-15 10:20:57+00:00,Fix typo in MorphShapes document
c340b3b4660ef4b307ad9996895867981020d651,Letu Ren,fantasquex@gmail.com,2024-08-15 08:37:40+00:00,Fix typo in openvx readme
93e0c7e53f953daadb0e80ed99178fb533995df5,Yuantao Feng,yuantao.feng@outlook.com,2024-08-15 08:10:40+00:00,fix matmul crash
315f85d4f484c1e2fa043c73ac3fdd9fc5997ee7,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-12 10:33:05+00:00,"Merge pull request #26019 from shengyu7697:fix-typo

correct ""enviroment"" to ""environment"""
2fcea41f86bc3055a843e2dd642ec9b4bfdfc13b,Kumataro,Kumataro@users.noreply.github.com,2024-08-12 10:32:52+00:00,"Merge pull request #26018 from Kumataro:fix26017

doc: remove duplicated OpenCV Theory at ToC in Basic Drawing #26018

Close #26017

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
37c1acbf19d3676aa575925782f69950e8fe376a,shengyu,shengyu7697@gmail.com,2024-08-11 14:25:04+00:00,"correct ""enviroment"" to ""environment"""
da3debda6d233af90e421e95700c63fc08b83b75,Kumataro,Kumataro@users.noreply.github.com,2024-08-09 11:22:02+00:00,"Merge pull request #25981 from Kumataro:fix25971

imgproc: add specific error code when cvtColor is used on an image with an invalid number of channels #25981

close #25971

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
6cd730a02c2f629f03941e00e9e6951cad411d78,Nishanth,nishanthdass@gmail.com,2024-08-09 07:34:44+00:00,"Merge pull request #26002 from nishanthdass:doc/missing-fields-python-tutorials

Remove empty Additional Resources and Exercises fields from tutorials #26002

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake

This PR is in response to issue [26001](https://github.com/opencv/opencv/issues/26001)

This pull request addresses the issue of empty ""Additional Resources"" and ""Exercises"" fields in several OpenCV-Python tutorials. The empty sections have been removed to improve the clarity and consistency of the documentation."
c9df6799438e137a0ce042541773b5131521f4f1,Arvind Iyer,arvindi.me@gmail.com,2024-08-07 12:17:26+00:00,"Merge pull request #25959 from arvind-iyer:4.x

Improved samples/python/tracker.py docstring #25959

This PR removed unused arguments and updated existing argument placeholders to be more descriptive of what they are.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [ ] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
67d0338c9ca4ed7f24fc59234ab34eb1db801df9,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-07 07:26:24+00:00,"Merge pull request #26004 from ericmariasis:eric-mariasis-issue-26000

got rid of std prefix"
3f92884520b352a1d27e4fea49d4b9b0a8c18851,ericmariasis,ericmariasis829@gmail.com,2024-08-07 04:17:04+00:00,got rid of std prefix
582a7f32d572e70e41e374d0f10ce2c519d0c0c8,James Choi,chachoi@blackberry.com,2024-08-06 17:25:39+00:00,"Merge pull request #25832 from chachoi-world:4.x

Add support for QNX #25832

Build and test instruction for QNX:
https://github.com/chachoi-world/qnx-ports/blob/main/opencv/README.md

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
d8bcc2c85d639ebc882a3eff5a72b07d6f70dbf3,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-06 14:56:22+00:00,"Merge pull request #25996 from asmorkalov:as/fillPoly_check

Fixed asserts in fillPoly"
1acf722e24b7e6f1c86ba463572cfbc61598ea67,Rostislav Vasilikhin,savuor@gmail.com,2024-08-06 12:04:53+00:00,"Merge pull request #25970 from savuor:rv/hal_pyrdown

pyrDown: offset HAL added, IPP removed #25970

Resolves #25976

### Changes
* HAL added for offset support so that border pixels can be fetched from outside of the image ROI (see `BORDER_ISOLATED` parameter)
* IPP removed since there is `pyrUp` instead of `pyrDown` and there's no easy way to fix this other than rewriting it from scratch
* replaced old C call by modern `cv::pyrDown`

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
9dee2c6e6735230fcea83c3db7f5656df834ae4f,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-08-06 07:40:45+00:00,Fixed asserts in fillPoly.
49459d46e2234363af81d1692511ae8cc0c256f9,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-06 08:40:58+00:00,"Merge pull request #25932 from asmorkalov:as/HAL_cvtColor_aprox

Added xxxApprox overloads for YUV color conversions in HAL and AlgorithmHint to cvtColor #25932

The xxxApprox to implement HAL functions with less bits for arithmetic of FP.

The hint was introduced in #25792 and #25911

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
333054e05ee331a668692fc0b07abd313d894219,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-05 16:33:18+00:00,"Merge pull request #25943 from asmorkalov:as/fisheye_distrort_newk

Added fisheye::distortPoints with non-identity projection matrix"
ea2a3cb264c5912ec8c99e1f2d7177876a04be0d,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-05 12:28:16+00:00,"Merge pull request #25643 from cpoerschke:issue-25635-find-existing-file-tests

replace lena.jpg in find-existing-file tests"
ecbff5a20c18b9bdc4ec4e69200742941ce4dca2,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-05 12:26:31+00:00,"Merge pull request #25786 from plctlab:rvp_3rdparty

3rdparty: NDSRVP - Part 1.5: New Interfaces"
75fca7d9d0e4b7fa796d36d4c4ad98f5d210a9b5,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-07-23 12:42:21+00:00,Added fisheye::distort with non-identity projection matrix.
6ed603e917424e0cb10e3d019706db1b0ff1e8af,Maxim Smolskiy,mithridatus@mail.ru,2024-08-05 10:28:07+00:00,"Merge pull request #25991 from MaximSmolskiy:improve-corners-matching-in-ChessBoardDetector-NeighborsFinder-findCornerNeighbor

Improve corners matching in ChessBoardDetector::NeighborsFinder::findCornerNeighbor #25991

### Pull Request Readiness Checklist

Idea was mentioned in `Section III-B. New Heuristic for Quadrangle Linking` of `Rufli, Martin & Scaramuzza, Davide & Siegwart, Roland. (2008). Automatic Detection of Checkerboards on Blurred and Distorted Images. 2008 IEEE/RSJ International Conference on Intelligent Robots and Systems, IROS. 3121-3126. 10.1109/IROS.2008.4650703` (https://rpg.ifi.uzh.ch/docs/IROS08_scaramuzza_b.pdf):
![Снимок экрана от 2024-08-05 09-51-27](https://github.com/user-attachments/assets/7a090ccc-c24c-4dfb-b0dd-259c8709eb72)
```
* For each candidate pair, focus on the quadrangles they belong to and draw two straight lines passing through the midsections of the respective quadrangle edges (see Fig. 6).
* If the candidate corner and the source corner are on the same side of every of the four straight lines drawn this way (this corresponds to the yellow shaded area in Fig. 6), then the corners are successfully matched.
```

By improving corners matching, we can increase the search radius (`thresh_scale`).

I tested this PR with benchmark
```
python3 objdetect_benchmark.py --configuration=generate_run --board_x=7 --path=res_chessboard --synthetic_object=chessboard
```
PR increases detected chessboards number by `3/7%`:
```
cell_img_size = 100 (default)

before
                                 category  detected chessboard  total detected chessboard  total chessboard  average detected error chessboard
                                      all             0.910417                      13110             14400                           0.599746
Total detected time:  147.50906700000002 sec

after
                                 category  detected chessboard  total detected chessboard  total chessboard  average detected error chessboard
                                      all             0.941667                      13560             14400                           0.596726
Total detected time:  136.68963200000007 sec

----------------------------------------------------------------------------------------------------------------------------------------------

cell_img_size = 10

before
                                 category  detected chessboard  total detected chessboard  total chessboard  average detected error chessboard
                                      all             0.539792                       7773             14400                           4.208237
Total detected time:  2.668964 sec

after
                                 category  detected chessboard  total detected chessboard  total chessboard  average detected error chessboard
                                      all             0.579167                       8340             14400                           4.198448
Total detected time:  2.535998999999999 sec
```

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
ab99f87b6a59cbb4bee8c84338ab4f2f035d284f,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-05 08:52:00+00:00,"Merge pull request #25979 from asmorkalov:as/custom_allocator

Set and check allocator pointer for all cv::Mat instances"
9de2ebbec1c980084c49575f5b27c95e2d0c6d10,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-05 07:58:33+00:00,"Merge pull request #25978 from chacha21:cuda_stdallocator

Adding getStdAllocator() to cv::cuda::GpuMat"
992dc932ee0ff5e703faf090ea347c40b5d23f80,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-05 07:45:11+00:00,"Merge pull request #25987 from AvenSun:fix-namespace

fix compilation errors caused by namespace"
a15cd4b63dba4b1286bfc6b23e4fe99a77d2620e,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-08-01 07:57:19+00:00,Set and check allocator pointer for all cv::Mat instances.
796974cccc5c3e6dfcf6e21583cc7c62fa8e372b,Aven,Aven@ocr.one,2024-08-03 21:04:03+00:00,"fix  compilation errors caused by namespace
related: #25199"
95041f5e65b960143c0053ec21104e6c6f65d9b1,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-02 13:51:26+00:00,"Merge pull request #25983 from stepkamipt:4.x

Fix path to 3rdparty cmake."
340a390ea2a152aadf5866428e1457c51c2ec10b,stepkamipt,stepkamipt@gmail.com,2024-08-02 08:07:36+00:00,"Fix path to 3rdparty cmake.

Current code using CMAKE_SOURCE_DIR and it works well if opencv is standalone CMake project,
but in case of building OpenCV as part of a larger CMake project (e.g. one that includes
opencv and opencv_contrib) this path is incorrect, unlike OpenCV_SOURCE_DIR"
35463e079c60df2d5622c762460dc054b938b305,Junyan721113,llh721113@outlook.com,2024-06-12 08:01:43+00:00,feat: Part 1.5 - New Interfaces
b79b366859ac812e3f2cfb48c8fbcfcd094b4f5e,Alexander Alekhin,alexander.a.alekhin@gmail.com,2024-08-01 20:09:49+00:00,Merge pull request #25930 from opencv-pushbot:gitee/alalek/cmake_try_detect_feature_without_flags
b9b2d551acb4af9f55e8151df7e0e6d7c90fbbde,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-08-01 11:15:40+00:00,"Merge pull request #25975 from asmorkalov:as/bmp_error_check

Improved error handling in image codecs."
f67d4852bf3845febbb28f330aa5365af65195ba,chacha21,pierre@chachatelier.fr,2024-08-01 08:00:31+00:00,Added no-imp placeholder when HAVE_CUDA is false
2db7f8e82764cc4cd26d529155a70499833a0fdf,chacha21,pierre@chachatelier.fr,2024-08-01 07:36:08+00:00,"Adding getStdAllocator() to cv::cuda::GpuMat

To be on par with `cv::Mat`, let's add `cv::cuda::GpuMat::getStdAllocator()`
This is useful anyway, because when a user wants to use custom allocators, he might want to resort to the standard default allocator behaviour, not some other allocator that could have been set by `setDefaultAllocator()`"
93745245a362aea9a57f6c5f767f88ea503985fe,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-07-31 15:05:33+00:00,Improved error handling in image codecs.
2a333a6c86b7fd88bd21fd92e8d828aa6a0b595c,Daniele Affinita,danieleaffinita2000@gmail.com,2024-07-30 11:16:08+00:00,"Merge pull request #25644 from DaniAffCH:blockwise-quantization

[GSoC] dnn: Blockwise quantization support #25644

This PR introduces blockwise quantization in DNN allowing the parsing of ONNX models quantized in blockwise style. In particular it modifies the `Quantize` and `Dequantize` operations. The related PR opencv/opencv_extra#1181 contains the test data.

Additional notes:
- The original quantization issue has been fixed. Previously, for 1D scale and zero-point, the operation applied was  $y = int8(x/s - z)$ instead of $y = int8(x/s + z)$. Note that the operation was already correctly implemented when the scale and zero-point were scalars. The previous implementation failed the ONNX test cases, but now all have passed successfully.  [Reference](https://github.com/onnx/onnx/blob/main/docs/Operators.md#QuantizeLinear)
- the function `block_repeat` broadcasts scale and zero-point to the input shape. It repeats all the elements of a given axis n times. This function generalizes the behavior of `repeat` from the core module which is defined just for 2 axis assuming `Mat` has 2 dimensions. If appropriate and useful, you might consider moving `block_repeat` to the core module.
- Now, the scale and zero-point can be taken as layer inputs. This increases the ONNX layers' coverage and enables us to run the ONNX test cases (previously disabled) being fully compliant with ONNX standards. Since they are now supported, I have enabled the test cases for: `test_dequantizelinear`, `test_dequantizelinear_axis`, `test_dequantizelinear_blocked`, `test_quantizelinear`, `test_quantizelinear_axis`, `test_quantizelinear_blocked` just in CPU backend. All of them pass successfully.
   
### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
89fff355c831038f79316a66ff8bf80f14f91d4b,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-30 05:53:04+00:00,"Merge pull request #25961 from gblikas:gblikas_4.x_ts_js

fix: js/html perf tests"
938b9e4bb7ff26751c558ba3548e0ee53863ff35,Alexander Alekhin,alexander.a.alekhin@gmail.com,2024-07-18 05:37:14+00:00,cmake: try baseline optimization feature check without extra flags first
99672a2691d96f5b4782283aec8f3429c01aefb7,gblikas,gblikas@gmail.com,2024-07-26 20:24:26+00:00,"fix: js perf tests

modules/js/perf/perf_helpfunc.js and target tests, e.g. perf_gaussianBlur.js contained ""const isNodeJs"", leading to re-definition when using associated *.html files."
1ca526dcdb9c30600c70537e279f0c672057a1b9,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-26 11:39:49+00:00,"Merge pull request #25940 from Kumataro:fix25928

python: prefer cv::Mat over cv::UMat in python binding"
65853aa7837daad46ceb9e32b15e8a8fde476170,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-26 08:59:01+00:00,"Merge pull request #25955 from Kumataro:fix25946

core: FileStorage: detect invalid attribute value"
be3c519956296bb9254040a231bd63454d37958c,Kumataro,Kumataro@users.noreply.github.com,2024-07-25 20:55:00+00:00,core: FileStorage: detect invalid attribute value
5b3f33dd11ae42316378de6b3bcf57118ebc19ab,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-25 17:13:38+00:00,"Merge pull request #25952 from alexlyulkov:al/java-orb-test

Added ORB detection test for Java and Android"
0b3dbdd4b3395674fe9d05162ab916b83e683559,Alexander Lyulkov,alexander.lyulkov@opencv.ai,2024-07-25 13:47:41+00:00,Added Java ORB test
eab21b61067385515c77783608f8c374bfe131c6,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-24 14:13:15+00:00,"Merge pull request #25814 from sturkmen72:numFrames

add getFrameCount() member function to BaseImageDecoder"
c5de090964046e203bd3a0c5b7c08a30273e25f3,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-24 13:38:42+00:00,"Merge pull request #25944 from vrabaud:depth_check

Avoid future integer overflow in _OutputArray::create"
160879c100baca7caedc44786cc17de52c2a472d,武士风度的牛,1085968073@qq.com,2024-07-24 12:29:13+00:00,"Merge pull request #25807 from spdfghi:4.x

Search in two directions when try to add new quad in addOuterQuad #25807

In ChessBoardDetector::addOuterQuad, previous code try to connect new quad with inner quad, if possible, but only search for one direction. I have made  three test images, one is normal(a.jpg), one lossed an outer quad(b.jpg), and then i flipped it vertically(c.jpg). Only last one fails. I fixed it by check two directions and row/col.

Here is the test code and images:
```
Mat img;
vector<Point2f> corners;
auto size = cv::Size(6, 6);
img = imread(""D:/tmp/a.jpg"", 0);
std::cout<<cv::findChessboardCorners(img, size, corners)<<""\n"";
std::cout << corners.size() << ""\n"";
img = imread(""D:/tmp/b.jpg"", 0);
std::cout<<cv::findChessboardCorners(img, size, corners)<<""\n"";
std::cout << corners.size() << ""\n"";
img = imread(""D:/tmp/c.jpg"", 0);
std::cout<<cv::findChessboardCorners(img, size, corners)<<""\n"";
std::cout << corners.size() << ""\n"";
```
![a](https://github.com/opencv/opencv/assets/92856207/0dc7f5bf-7637-4333-9a9f-ec4ede790027)
a
![b](https://github.com/opencv/opencv/assets/92856207/39793485-ca0c-44c0-b44d-a593d36c1888)
b
![c](https://github.com/opencv/opencv/assets/92856207/2e7789c8-cfa5-438c-9530-2862a8a3741f)
c"
14f9d71dd0b18627d6d689dcf4bbb06e3209ab87,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-24 07:54:17+00:00,"Merge pull request #25941 from cudawarped:cuda_fix_default_cuda_arch_with_cmp0104

`cuda`: prevent `CMAKE_CUDA_ARCHITECTURES` default from overiding OpenCV architecture search (issue 25920)"
c16927605da799effea827345dbc116086e38891,Vincent Rabaud,vrabaud@google.com,2024-07-24 06:27:07+00:00,"Merge pull request #25938 from vrabaud:charuco

Properly check markers when none are provided. #25938

CharucoDetectorImpl::detectBoard finds temporary markers when none are provided but those are discarded when
charucoDetectorImpl::checkBoard is called.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
e1b57057bf1eed3cb50be1786d592f255f24b4b5,Vincent Rabaud,vrabaud@google.com,2024-07-23 14:22:55+00:00,"Avoid future integer overflow in _OutputArray::create

This fix is useless in 4.x and fixes harmless overflows in 5.x
This belongs to 4.x as it is closer to the intended meaning."
93b607dc72e1d7953b17a58d8fb5f130b05c3d7a,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-23 12:39:18+00:00,"Merge pull request #25942 from asmorkalov:as/hal_report

Report used HAL to test log and xml"
38cfea981f0f8d6d59b214e37e597c7dceac4793,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-07-23 09:03:39+00:00,Report used HAL to test log and xml
44c814e3340151b36343e218ceead1790661b8b5,Rostislav Vasilikhin,savuor@gmail.com,2024-07-23 05:06:15+00:00,"Merge pull request #25936 from savuor:rv/hal_dot

HAL for dot product added #25936

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
012d8534745fb2261943d90bf6026fca2001357a,cudawarped,12133430+cudawarped@users.noreply.github.com,2024-07-22 15:00:36+00:00,cuda: prevent CMAKE_CUDA_ARCHITECTURES default from overiding OpenCV architecture search
c9b57819b1efd8ee667be7408840a3aaa64962a1,cudawarped,12133430+cudawarped@users.noreply.github.com,2024-07-22 14:41:39+00:00,"Merge pull request #25874 from cudawarped:videoio_ffmpeg_fix_encapsulate_ts

videoio: fix cv::VideoWriter with FFmpeg encapsulation timestamps #25874

Fix https://github.com/opencv/opencv/issues/25873 by modifying `cv::VideoWriter` to use provided presentation indices (pts).

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
89dd4ee137459b8dfe2393067e1fb01531c5ca58,Alexander Alekhin,alexander.a.alekhin@gmail.com,2024-07-22 11:57:43+00:00,Merge pull request #25935 from eplankin:icv_update_2021.12
db3654ef51b156feab4f59c13f2ee41ca2ab9a85,Kumataro,Kumataro@users.noreply.github.com,2024-07-21 01:00:29+00:00,python: prefer cv::Mat over cv::UMat in python binding
23b244d3a336111c5205c1514b8ef263fac7d808,Yuantao Feng,yuantao.feng@outlook.com,2024-07-19 13:03:19+00:00,"Merge pull request #25881 from fengyuentau:dnn/cpu/optimize_activations_with_v_exp

dnn: optimize activations with v_exp #25881

Merge with https://github.com/opencv/opencv_extra/pull/1191.

This PR optimizes the following activations:

- [x] Swish
- [x] Mish
- [x] Elu
- [x] Celu
- [x] Selu
- [x] HardSwish

### Performance (Updated on 2024-07-18)

#### AmLogic A311D2 (ARM Cortex A73 + A53)

```
Geometric mean (ms)

            Name of Test              activations activations.patch activations.patch
                                                                              vs
                                                                         activations
                                                                          (x-factor)
Celu::Layer_Elementwise::OCV/CPU        115.859          27.930              4.15
Elu::Layer_Elementwise::OCV/CPU          27.846          27.003              1.03
Gelu::Layer_Elementwise::OCV/CPU         0.657           0.602               1.09
HardSwish::Layer_Elementwise::OCV/CPU    31.885          6.781               4.70
Mish::Layer_Elementwise::OCV/CPU         35.729          32.089              1.11
Selu::Layer_Elementwise::OCV/CPU         61.955          27.850              2.22
Swish::Layer_Elementwise::OCV/CPU        30.819          26.688              1.15
```

#### Apple M1

```
Geometric mean (ms)

               Name of Test                activations activations.patch activations.patch
                                                                                   vs
                                                                              activations
                                                                               (x-factor)
Celu::Layer_Elementwise::OCV/CPU              16.184          2.118               7.64
Celu::Layer_Elementwise::OCV/CPU_FP16         16.280          2.123               7.67
Elu::Layer_Elementwise::OCV/CPU               9.123           1.878               4.86
Elu::Layer_Elementwise::OCV/CPU_FP16          9.085           1.897               4.79
Gelu::Layer_Elementwise::OCV/CPU              0.089           0.081               1.11
Gelu::Layer_Elementwise::OCV/CPU_FP16         0.086           0.074               1.17
HardSwish::Layer_Elementwise::OCV/CPU         1.560           1.555               1.00
HardSwish::Layer_Elementwise::OCV/CPU_FP16    1.536           1.523               1.01
Mish::Layer_Elementwise::OCV/CPU              6.077           2.476               2.45
Mish::Layer_Elementwise::OCV/CPU_FP16         5.990           2.496               2.40
Selu::Layer_Elementwise::OCV/CPU              11.351          1.976               5.74
Selu::Layer_Elementwise::OCV/CPU_FP16         11.533          1.985               5.81
Swish::Layer_Elementwise::OCV/CPU             4.687           1.890               2.48
Swish::Layer_Elementwise::OCV/CPU_FP16        4.715           1.873               2.52
```

#### Intel i7-12700K

```
Geometric mean (ms)

            Name of Test              activations activations.patch activations.patch
                                                                    vs
                                                               activations
                                                                (x-factor)
Celu::Layer_Elementwise::OCV/CPU        17.106       3.560         4.81
Elu::Layer_Elementwise::OCV/CPU          5.064       3.478         1.46
Gelu::Layer_Elementwise::OCV/CPU         0.036       0.035         1.04
HardSwish::Layer_Elementwise::OCV/CPU    2.914       2.893         1.01
Mish::Layer_Elementwise::OCV/CPU         3.820       3.529         1.08
Selu::Layer_Elementwise::OCV/CPU        10.799       3.593         3.01
Swish::Layer_Elementwise::OCV/CPU        3.651       3.473         1.05
```

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
26714f9a346101eaa34bc7bf29c2cadac9f82ab7,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-19 11:42:32+00:00,"Merge pull request #25905 from tintou:tintou/glib-cleanup

highgui: Make GThread mandatory with GTK"
b5ea32158a5fabae3dd8b23e896eb9e623c13ed8,HAN Liutong,liutong2020@iscas.ac.cn,2024-07-19 08:41:42+00:00,"Merge pull request #25883 from hanliutong:rvv-intrin-upgrade

Upgrade RISC-V Vector intrinsic and cleanup the obsolete RVV backend. #25883

This patch upgrade RISC-V Vector intrinsic from `v0.10` to `v0.12`/`v1.0`:
- Update cmake check and options;
- Upgrade RVV implement for Universal Intrinsic;
- Upgrade RVV optimized DNN kernel.
- Cleanup the obsolete RVV backend (`intrin_rvv.hpp`) and compatable header file.

With this patch, RVV backend require Clang 17+ or GCC 14+ (which means `__riscv_v_intrinsic >= 12000`, see https://godbolt.org/z/es7ncETE3)

This patch is test with Clang 17.0.6 (require extra `-DWITH_PNG=OFF` due to ICE), Clang 18.1.8 and GCC 14.1.0 on QEMU and k230 (with `--gtest_filter=""*hal_*""`).

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [ ] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
4dd54bbec92ae399d98b41dcf7a167b2c6aa4c51,_Ayaka,33724737+Octopus136@users.noreply.github.com,2024-07-19 06:08:19+00:00,"Merge pull request #25898 from Octopus136:issue-25853

Add a check for src == dst in ocl warpTransform #25898

As mentioned in #25853, when doing WarpAffine with Mat and UMat respectively, if you force the use of the in-place operation (so that src and dst are passed the same variables), Mat produces the correct results, but UMat produces unexpected results.

Obviously in-place operations are not possible with this transformation. When Mat performs the operation, if dst and src are the same variable, the function inherently makes a copy of src without telling the user. 

https://github.com/opencv/opencv/blob/74b50c7af05c91194469a1f059f971dff00ef889/modules/imgproc/src/imgwarp.cpp#L2831-L2834

So I did the same check in UMat, but I'm not sure if it's appropriate, should we just do a copy operation without telling the user (even if the user thinks he's doing an in-place operation), or should we throw an exception to indicate that we shouldn't pass in two same variables here?

The possible reason for this problem is that there is a create function here, so it gives the developer the false impression that this create function has allocated new memory for dst, however it does not.

https://github.com/opencv/opencv/blob/74b50c7af05c91194469a1f059f971dff00ef889/modules/imgproc/src/imgwarp.cpp#L2607-L2609

Because by the time the check is done here, the function has returned back.

https://github.com/opencv/opencv/blob/74b50c7af05c91194469a1f059f971dff00ef889/modules/core/src/umatrix.cpp#L668-L675

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
a5dacb5bed3008bf9e7bb820f08693fcdfaea852,eplankin,elena.plankina@intel.com,2024-07-18 15:16:19+00:00,Update IPP integration
d892c7b142a0f3c860cd454a4e1cfaaba436c523,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-18 15:12:11+00:00,"Merge pull request #25934 from hanliutong:rvv-clang-toolchain-fix

Fix cmake macro in `riscv64-clang.toolchain.cmake`."
325da2b2f43308693b16cfb3f91e287921ccd244,Andy-SAKN,109071473+Andy-SAKN@users.noreply.github.com,2024-07-18 14:27:00+00:00,"Merge pull request #25907 from Andy-SAKN:Andy-SAKN-add_orbbec

Add tutorial on using Orbbec 3D cameras (UVC) #25907

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
1125755345e05ad278edb75404f7652754cecb72,zihaomu,zihaomu@outlook.com,2024-07-18 14:18:37+00:00,"Merge pull request #25931 from zihaomu:clean_code

code clean #25931

Align code and remove redundant CMake code

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
32d81a8bae785f5f73081dc5dcffa18e06f99f28,Liutong HAN,liutong2020@iscas.ac.cn,2024-07-18 13:47:53+00:00,Fix toolchain.
0020831414301a9fc7e0c868b559510bc5a7c9c9,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-18 08:17:49+00:00,"Merge pull request #25927 from yeatse:fix-swift-name

Resolve Swift method name conflicts by adding missing namespace"
0c2da1dc9b12ba120a6a5cc0f991c7a7757642f2,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-17 16:21:16+00:00,"Merge pull request #25914 from r-barnes:4.x

throw() -> noexcept"
bcce38c05afa8aa72b9a4fcf1cf8ab1b51c90812,Yang Chao,iyeatse@gmail.com,2024-07-17 16:20:17+00:00,fix: resolve Swift method name conflicts by adding missing namespace
d1505693ddcc2c29e71e912f3fc32d2408aeaff7,Richard Barnes,rbarnes@umn.edu,2024-07-15 17:48:02+00:00,throw() -> noexcept
53a5b85d9f6e2a58066f966d901c0e93ea1ebcf0,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-16 05:28:28+00:00,"Merge pull request #25913 from asmorkalov:as/chessboard_debug_logs

Use CV_LOG_DEBUG for debug logging in chessboard detector."
7b176d898bb2085309b481f152a0cbf937d79338,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-15 17:30:49+00:00,"Merge pull request #25912 from asmorkalov:as/round_pair_f64_restore

Restored removed test_round_pair_f64 test after PR 24941"
9ebf3878502fc867948cb798ba893469cea9e9ca,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-15 17:30:24+00:00,"Merge pull request #25911 from asmorkalov:as/HAL_fast_GaussianBlur

Post-merge fixes for algorithm hint API"
da078c4b755267129c83aad9624744b435b0cf3d,Corentin Noël,tintou@noel.tf,2024-07-13 10:40:00+00:00,"highgui: Make GThread mandatory with GTK

The GThread API is available since more than 11 years with GLib, it is now safe
to assume that it is always available."
4842043c6afdd596eabd116d4180520e4392c815,Yoshiki Obinata,27789460+mqcmd196@users.noreply.github.com,2024-07-15 14:06:30+00:00,"Merge pull request #25822 from mqcmd196:gtk3-gl-support

Support OpenGL GTK3 New API #25822

Fixes #20001

GSoC2024 Project

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
c53c2f68446b485e79814388c1a55d2f06591f95,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-07-15 13:11:27+00:00,Use CV_LOG_DEBUG for debug logging in chessboard detector.
e90935e81cd83973af7b5cb15c770a210c565e10,j3knk,96484997+j3knk@users.noreply.github.com,2024-07-15 12:10:08+00:00,"Merge pull request #25824 from j3knk:calib3d/fix_projectpoints

calib3d: fix Rodrigues CV_32F and CV_64F type mismatch in projectPoints #25824

Fixes #25318

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
a6b8ea892bdd619f658c0380a317c11ea206ffdc,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-07-15 08:28:23+00:00,Post-merge fixes for algorithm hint API.
04f9e3cd4f34f2e3eb5459bdfdfbd59a21406c91,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-07-15 09:59:12+00:00,Restored removed test_round_pair_f64 test afetr PR 24941.
81f33103fdaf7efdd0dee593a6344f25e28f4092,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-15 07:07:21+00:00,"Merge pull request #25903 from Kumataro:fixC3767

core: hal: avoid to use _tzcnt_u32 for ARM64EC"
e906f0f3b343a1db6ec7f943389e4d5c2443e093,Kumataro,Kumataro@users.noreply.github.com,2024-07-13 02:16:45+00:00,core: hal: disable _tzcnt_u32 for ARM64EC
15783d65981d8978597c6b60e830e21e964cbdf9,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-12 12:03:33+00:00,"Merge pull request #25792 from asmorkalov:as/HAL_fast_GaussianBlur

Added flag to GaussianBlur for faster but not bit-exact implementation #25792

Rationale:
Current implementation of GaussianBlur is almost always bit-exact. It helps to get predictable results according platforms, but prohibits most of approximations and optimization tricks.

The patch converts `borderType` parameter to more generic `flags` and introduces `GAUSS_ALLOW_APPROXIMATIONS` flag to allow not bit-exact implementation. With the flag IPP and generic HAL implementation are called first. The flag naming and location is a subject for discussion.

Replaces https://github.com/opencv/opencv/pull/22073
Possibly related issue: https://github.com/opencv/opencv/issues/24135

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
3ff97c5580dec29d6f9946bc3eabe41ab6f8f93c,Vincent Rabaud,vrabaud@google.com,2024-07-12 11:41:17+00:00,"Merge pull request #25899 from vrabaud:move_no_except

Mark cv::Mat(Mat&&) as noexcept #25899

This fixes https://github.com/opencv/opencv/issues/25065

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
78195bc3dfe20b96e721ae8b32d0aa3491755e78,lamiayous,124199862+lamiayous@users.noreply.github.com,2024-07-12 08:38:43+00:00,"Merge pull request #25817 from lamiayous:ly/extend_onnxrt_gapi_backend_handle_i32_i64_type

Handling I32/I64 data types in G-API ONNX back-end #25817

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [ ] I agree to contribute to the project under Apache 2 License.
- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [ ] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
c6ace77e21d9db3fcee5953ef36d5ba7ec289995,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-11 09:57:18+00:00,"Merge pull request #25893 from fengyuentau:core/fix_v_erf

core: fix compilation problem with v_erf"
50f1ea5c9c5e718cc70c9a5a10254cf6105699bc,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-11 09:56:56+00:00,"Merge pull request #25897 from richard28039:4.x

Fix the mistake about yolov10 inference step in dnn_yolo.markdown"
dc2ce2b856aac1e66cd90fed0c561f8972fbca28,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-11 05:51:03+00:00,"Merge pull request #25888 from sturkmen72:haveImageReader

Update documentation cv::haveImageReader(), cv::haveImageWriter()"
a9d8d45df435dea202a8e42d4a3f686fae8755a2,richard28039,richard280390@gmail.com,2024-07-10 19:15:52+00:00,fix the mistake
63b9cbc2d0e2d0da67f9cbcdf2677b70c0a09fa3,Suleyman TURKMEN,sturkmen@hotmail.com,2024-07-10 12:24:37+00:00,Update imgcodecs.hpp
7dcc305301e5fc9b74a82c91d7bb9132905708de,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-10 09:40:48+00:00,"Merge pull request #25894 from mshabunin:fix-test-templ-match

imgproc: reduce template sizes in templMatch test"
35ca2f78d66d8187e35430235df1d6c159302597,Aliaksei Urbanski,aliaksei.urbanski@gmail.com,2024-07-10 09:39:30+00:00,"Merge pull request #25880 from Jamim:fix/cuda-no-fp16

Fix CUDA for old GPUs without FP16 support #25880

Fixes #21461

~This is a build-time solution that reflects https://github.com/opencv/opencv/blob/4.10.0/modules/dnn/src/cuda4dnn/init.hpp#L68-L82.~
~We shouldn't add an invalid target while building with `CUDA_ARCH_BIN` < 53.~
_(please see [this discussion](https://github.com/opencv/opencv/pull/25880#discussion_r1668074505))_

This is a run-time solution that basically reverts [these lines](https://github.com/opencv/opencv/commit/d0fe6ad10967fd2b007a4cf83b00d6f8446deb42#diff-757c5ab6ddf2f99cdd09f851e3cf17abff203aff4107d908c7ad3d0466f39604L245-R245).

I've debugged these changes, [coupled with other fixes](https://github.com/gentoo/gentoo/pull/37479), on [Gentoo Linux](https://www.gentoo.org/) and [related tests passed](https://github.com/user-attachments/files/16135391/opencv-4.10.0.20240708-224733.log.gz) on my laptop with `GeForce GTX 960M`.

Alternative solution:
  - #21462

_Best regards!_

### Pull Request Readiness Checklist

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] `n/a` There is accuracy test, performance test and test data in opencv_extra repository, if applicable
- [ ] `n/a` The feature is well documented and sample code can be built with the project CMake"
06b9db6a710f9e43ce91112b09d2915075a749ba,Maksim Shabunin,maksim.shabunin@gmail.com,2024-07-10 08:06:25+00:00,imgproc: reduce template sizes in templMatch test
11fde3bb892b07197cb1483bcf754f098a6251fc,fengyuentau,yuantao.feng@opencv.org.cn,2024-07-10 06:48:45+00:00,fix
b9649435173dba9355164cde5d8a958e93fb9b91,Mironov Arseny,98156294+Fest1veNapkin@users.noreply.github.com,2024-07-09 14:11:23+00:00,"Merge pull request #25607 from Fest1veNapkin:imgproc_approx_bounding_poly

Add a new function that approximates the polygon bounding a convex hull with a certain number of sides #25607

merge PR with <https://github.com/opencv/opencv_extra/pull/1179>

This PR is based on the paper [View Frustum Optimization To Maximize Object’s Image Area](https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=1fbd43f3827fffeb76641a9c5ab5b625eb5a75ba).

# Problem
I needed to reduce the number of vertices of the convex hull so that the additional area was minimal, andall vertices of the original contour enter the new contour.

![image](https://github.com/Fest1veNapkin/opencv/assets/98156294/efac35f6-b8f0-46ec-91e4-60800432620c)

![image](https://github.com/Fest1veNapkin/opencv/assets/98156294/2292d9d7-1c10-49c9-8489-23221b4b28f7)

# Description
Initially in the contour of n vertices, at each stage we consider the intersection points of the lines formed by each adjacent edges. Each of these intersection points will form a triangle with vertices through which lines pass. Let's choose a triangle with the minimum area and merge the two vertices at the intersection point. We continue until there are more vertices than the specified number of sides of the approximated polygon.
![image](https://github.com/Fest1veNapkin/opencv/assets/98156294/b87b21c4-112e-450d-a776-2a120048ca30)

# Complexity:
Using a std::priority_queue or std::set  time complexity is **(O(n\*ln(n))**, memory **O(n)**,
n - number of vertices in convex hull.

count of sides - the number of points by which we must reduce.
![image](https://github.com/Fest1veNapkin/opencv/assets/98156294/31ad5562-a67d-4e3c-bdc2-29f8b52caf88)

## Comment
If epsilon_percentage more 0, algorithm can return more values than _side_.
Algorithm returns OutputArray. If OutputArray.type() equals 0, algorithm returns values with InputArray.type().
New test uses image which are not in opencv_extra, needs to be added.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [ ] I agree to contribute to the project under Apache 2 License.
- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [ ] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
8d935e21843c1085000ecaf1ec46337c7891f651,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-09 07:00:20+00:00,"Merge pull request #25885 from Sourav6971:4.x

Update imgcodecs.hpp"
e962395565f8320743fbba0112b6a30f91636139,Sourav Kumar,120493586+Sourav6971@users.noreply.github.com,2024-07-09 01:23:16+00:00,Update imgcodecs.hpp
e3858cc5a39127d098879f7ebca144a280bff3cb,Yuantao Feng,yuantao.feng@opencv.org.cn,2024-07-08 11:24:36+00:00,"Merge pull request #25147 from fengyuentau:dnn/elementwise_layers/speedup

* added v_erf and implemented gelu acceleration via vectorization

* remove anonymous v_erf and use v_erf from intrin_math

* enable perf for ov and cuda backend"
31b308f8822a2b77aba46b1a93366c2c104e841b,Dmitry Yurov,22917299+DmitryYurov@users.noreply.github.com,2024-07-08 09:36:56+00:00,"Merge pull request #25808 from DmitryYurov:bug-25806-checkerboard-marker-black-tile

Enable checkerboard detection with a central / corner marker on a black tile #25808

This pull request closes the issue #25806.

The issue doesn't require any documentation - it's quite intuitive that the detection result shouldn't depend on the color of the marker's tile.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
a54de7d55eeffedb31a5acf30eb928e97531a72f,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-08 05:37:13+00:00,"Merge pull request #25877 from Kumataro:fix25875

calib3d: doc: enable line breaks in formulas"
0b5b40179cadad6dbf0141a37f51c9a6b6c8b3fc,Kumataro,Kumataro@users.noreply.github.com,2024-07-06 22:15:28+00:00,calib3d: doc: enable line breaks in formulas
d7a237aefc76f841dba64544d09ab6df53097206,Amir Hassan,amir@viel-zu.org,2024-07-05 13:39:01+00:00,"Merge pull request #22836 from kallaballa:opengl_cmake_warning_linux

Explicitly prefer legacy GL in cmake on Linux? #22836

Pertaining Issue: #22835

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
d30b9450c1193c3111287c938c9bec87c3ed9cb0,Yuantao Feng,yuantao.feng@opencv.org.cn,2024-07-05 12:46:01+00:00,"Merge pull request #25872 from fengyuentau:core/v_erf

core: add v_erf #25872

This patch adds v_erf, which is needed by https://github.com/opencv/opencv/pull/25147.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
cdd8395f68ca6735fb76ebc630ec965fa6624125,Suleyman TURKMEN,sturkmen@hotmail.com,2024-07-03 16:55:35+00:00,add getFrameCount()
88b28ee2a0fec46029d6e07a946cc3ee853ab1ab,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-05 08:23:20+00:00,"Merge pull request #25844 from dietmar:dont_rely_on_nb_frames

Don't rely on nb_frames to be correct"
dfbd18e9aa12cd8018e387f7fe191c5ed69fda06,Vincent Rabaud,vrabaud@google.com,2024-07-05 05:53:28+00:00,"Merge pull request #25864 from vrabaud:legacy

Make sure all the lines of a JPEG are read #25864

In case of corrupted JPEG, imread would still return a JPEG of the proper size (as indicated by the header) but with some uninitialized values. I do not have a short reproducer I can add as a test as this was found by our fuzzers.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch"
94b7a2d32025c215d762810fc66b574b5f3545e3,Maksim Shabunin,maksim.shabunin@gmail.com,2024-07-04 13:29:08+00:00,"Merge pull request #25842 from mshabunin:cpp-imgproc-test-4.x

imgproc: remove C-API usage from tests #25842

Final cleanup will be done in 5.x after regular merge.

Some tests have been reworked, some required only slight modifications."
efbc9f0b66fc0689a0b1fa9f6646dde8a8cc5d1a,Abduragim Shtanchaev,44877829+Abdurrahheem@users.noreply.github.com,2024-07-04 13:25:31+00:00,"Merge pull request #25861 from Abdurrahheem:ash/torch-attention-export-fix-4x

Merge pull request #25861 from Abdurrahheem:ash/torch-attention-export-fix-4x

Support for Unflatten operation requred by Attention layer - 4.x #25861

### Pull Request Readiness Checklist

All test data and models for PR are located [#1190](https://github.com/opencv/opencv_extra/pull/1190)

This PR fixes issue reised when importing batched  vanilla `Attention` layer from `PyTorch` via ONNX. Currently batched version of `Attention` layer in PyTorch [has unflatten operation inside](https://github.com/pytorch/pytorch/blob/e3b3431c4203e9eeead48f96d4afd462f0b81de5/torch/nn/functional.py#L5500C17-L5500C31). `unflatten` operation causes issue in `reshape` layer (see the Reshape_2 in the graph below) due to incorrect output of `slice` layer. This PR particularly fixes `slice` and `concat` layers to handle `unflatten` operation. 


<img width=""673"" alt=""image"" src=""https://github.com/opencv/opencv/assets/44877829/5b612b31-657a-47f1-83a4-0ac35a950abd"">


See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
9f5139b5756afe39b13f60a2670eafabfaf30415,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-04 13:20:51+00:00,"Merge pull request #25865 from asmorkalov:as/gtk_2_opengl_fix

Hacked gtkglext search in cmake"
20e72b0b30b671d577886134fb8c987548f479d9,alexlyulkov,alex.lyulkov@gmail.com,2024-07-04 10:26:37+00:00,"Merge pull request #25856 from alexlyulkov:al/android-optional-kotlin

Fixed kotlin requirement in Android build.gradle #25856

Now OpenCV Android SDK doesn't always require kotlin plugin. Kotlin code is compiled only if the application uses kotlin plugin.

Fixes #24663

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
5510718381f8a35f2beb6c488b2ae1d8501cf0fc,Yuantao Feng,yuantao.feng@opencv.org.cn,2024-07-04 05:33:20+00:00,"Merge pull request #25810 from fengyuentau:python/fix_parsing_3d_mat_in_dnn

python: attempts to fix 3d mat parsing problem for dnn #25810

Fixes https://github.com/opencv/opencv/issues/25762 https://github.com/opencv/opencv/issues/23242
Relates https://github.com/opencv/opencv/issues/25763 https://github.com/opencv/opencv/issues/19091

Although `cv.Mat` has already been introduced to workaround this problem, people do not know it and it kind of leads to confusion with `numpy.array`. This patch adds a ""switch"" to turn off the auto multichannel feature when the API is from cv::dnn::Net (more specifically, `setInput`) and the parameter is of type `Mat`. This patch only leads to changes of three places in `pyopencv_generated_types_content.h`:

```.diff
static PyObject* pyopencv_cv_dnn_dnn_Net_setInput(PyObject* self, PyObject* py_args, PyObject* kw)
{
...
- pyopencv_to_safe(pyobj_blob, blob, ArgInfo(""blob"", 0)) &&
+ pyopencv_to_safe(pyobj_blob, blob, ArgInfo(""blob"", 8)) &&
...
}

// I guess we also need to change this as one-channel blob is expected for param
static PyObject* pyopencv_cv_dnn_dnn_Net_setParam(PyObject* self, PyObject* py_args, PyObject* kw)
{
...
- pyopencv_to_safe(pyobj_blob, blob, ArgInfo(""blob"", 0)) )
+ pyopencv_to_safe(pyobj_blob, blob, ArgInfo(""blob"", 8)) )
...
- pyopencv_to_safe(pyobj_blob, blob, ArgInfo(""blob"", 0)) )
+ pyopencv_to_safe(pyobj_blob, blob, ArgInfo(""blob"", 8)) )
...
}
```

Others are unchanged, e.g. `dnn_SegmentationModel` and stuff like that.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
e644ab0b400430ca04b441791469ccfb1787d3ba,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-04 05:30:08+00:00,"Merge pull request #25858 from asmorkalov:as/kleidicv_on

Enable KleidiCV for Android aarch64 by default."
e28c6eb3b64a21e0239d556de9dce1620cb9a3bd,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-07-03 16:22:06+00:00,Fixed gtkglext search in cmake.
99c0a96a2ff5ca671268fdafe2db8773fa224af9,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-07-03 10:41:07+00:00,Enable KleidiCV for Android aarch64 by default.
53f51275e451a48b7f3e8150b11fe096b2d4324b,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-03 09:42:29+00:00,"Merge pull request #25857 from asmorkalov:as/yolov9_harrowing_conversion

Fixed narrowing conversion warning with MSVC compiler."
25fb55601bf3e6bff9559acdbdae78426ff17aa2,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-07-03 09:10:31+00:00,Fixed narrowing conversion warning with MSVC compiler.
aac8bc877abdadc79668f40c64f610a2c45bd317,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-03 08:24:36+00:00,"Merge pull request #25799 from asmorkalov:as/HAL_GaussianBlurBinomial_Carotene

Use Carotene implementation of TEGRA_GaussianBlurBinomial 3x3 and 5x5 on ARM"
bef6c110a4958406400781e5d7139f6993889a80,Wanli,wanli.zhong.1999@gmail.com,2024-07-03 07:59:44+00:00,"Merge pull request #25781 from WanliZhong:v_log

Add support for v_log (Natural Logarithm) #25781

This PR aims to implement `v_log(v_float16 x)`, `v_log(v_float32 x)` and `v_log(v_float64 x)`. 
Merged after https://github.com/opencv/opencv/pull/24941

TODO:
- [x] double and half float precision
- [x] tests for them
- [x] doc to explain the implementation

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
934e6899f87badc50145c2cef5941d8422ac8e0f,zihaomu,zihaomu@outlook.com,2024-07-03 07:58:25+00:00,"Merge pull request #25809 from zihaomu:imread_rgb_flag

imgcodecs: Add rgb flag for imread and imdecode #25809

Try to `imread` images by RGB to save R-B swapping costs.

## How to use it?
```
img_rgb = cv2.imread(""PATH"", IMREAD_COLOR_RGB) # OpenCV decode the image by RGB format.
```

## TODO
- [x] Fix the broken code
- [x] Add imread rgb test
- [x] Speed test of rgb mode.

## Performance test

| file name | IMREAD_COLOR  | IMREAD_COLOR_RGB |
| --------- | ------ | --------- |
| jpg01     | 284 ms | 277 ms    |
| jpg02     | 376 ms | 366 ms    |
| png01     | 62 ms  | 60 ms     |
| Png02     | 97 ms  | 94 ms     |

Test with [image_test.zip](https://github.com/user-attachments/files/15982949/image_test.zip)
```.cpp
string img_path = ""/Users/mzh/work/data/image_test/png02.png"";
int loop = 20;

TickMeter t;

double t0 = 10000;
for (int i = 0; i < loop; i++)
{
    t.reset();
    t.start();
    img_bgr = imread(img_path, IMREAD_COLOR);
    t.stop();

    if (t.getTimeMilli() < t0) t0 = t.getTimeMilli();
}

std::cout<<""bgr time = ""<<t0<<std::endl;

t0 = 10000;
for (int i = 0; i < loop; i++)
{
    t.reset();
    t.start();
    img_rgb = imread(img_path, IMREAD_COLOR_RGB);
    t.stop();
    if (t.getTimeMilli() < t0) t0 = t.getTimeMilli();
}
std::cout<<""rgb time = ""<<t0<<std::endl;
``` 
### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
a7fd9446cf5deddb9394cad35a60164c245f6b98,Yuantao Feng,yuantao.feng@opencv.org.cn,2024-07-03 07:09:05+00:00,"Merge pull request #25630 from fengyuentau:nary-multi-thread

dnn: parallelize nary elementwise forward implementation & enable related conformance tests #25630

This PR introduces the following changes:

- [x] Parallelize binary forward impl
- [x] Parallelize ternary forward impl (Where)
- [x] Parallelize nary (Operator that can take >=1 operands)
- [x] Enable conformance tests if workable

## Performance

### i7-12700K, RAM 64GB, Ubuntu 22.04

```
Geometric mean (ms)

                Name of Test                     opencv        opencv        opencv
                                                  perf          perf          perf
                                              core.x64.0606 core.x64.0606 core.x64.0606
                                                                               vs
                                                                             opencv
                                                                              perf
                                                                          core.x64.0606
                                                                           (x-factor)
NCHW_C_sum::Layer_NaryEltwise::OCV/CPU           16.116        11.161         1.44
NCHW_NCHW_add::Layer_NaryEltwise::OCV/CPU        17.469        11.446         1.53
NCHW_NCHW_div::Layer_NaryEltwise::OCV/CPU        17.531        11.469         1.53
NCHW_NCHW_equal::Layer_NaryEltwise::OCV/CPU      28.653        13.682         2.09
NCHW_NCHW_greater::Layer_NaryEltwise::OCV/CPU    21.899        13.422         1.63
NCHW_NCHW_less::Layer_NaryEltwise::OCV/CPU       21.738        13.185         1.65
NCHW_NCHW_max::Layer_NaryEltwise::OCV/CPU        16.172        11.473         1.41
NCHW_NCHW_mean::Layer_NaryEltwise::OCV/CPU       16.309        11.565         1.41
NCHW_NCHW_min::Layer_NaryEltwise::OCV/CPU        16.166        11.454         1.41
NCHW_NCHW_mul::Layer_NaryEltwise::OCV/CPU        16.157        11.443         1.41
NCHW_NCHW_pow::Layer_NaryEltwise::OCV/CPU        163.459       15.234         10.73
NCHW_NCHW_ref_div::Layer_NaryEltwise::OCV/CPU    10.880        10.868         1.00
NCHW_NCHW_ref_max::Layer_NaryEltwise::OCV/CPU    10.947        11.058         0.99
NCHW_NCHW_ref_min::Layer_NaryEltwise::OCV/CPU    10.948        10.910         1.00
NCHW_NCHW_ref_mul::Layer_NaryEltwise::OCV/CPU    10.874        10.871         1.00
NCHW_NCHW_ref_sum::Layer_NaryEltwise::OCV/CPU    10.971        10.920         1.00
NCHW_NCHW_sub::Layer_NaryEltwise::OCV/CPU        17.546        11.462         1.53
NCHW_NCHW_sum::Layer_NaryEltwise::OCV/CPU        16.175        11.475         1.41
NHWC_C::Layer_NaryEltwise::OCV/CPU               11.339        11.333         1.00
NHWC_H::Layer_NaryEltwise::OCV/CPU               16.154        11.102         1.46
```

### Apple M1, RAM 16GB, macOS 14.4.1

```
Geometric mean (ms)

                Name of Test                     opencv          opencv             opencv      
                                                  perf            perf               perf       
                                              core.m1.0606 core.m1.0606.patch core.m1.0606.patch
                                                                                      vs        
                                                                                    opencv      
                                                                                     perf       
                                                                                 core.m1.0606   
                                                                                  (x-factor)    
NCHW_C_sum::Layer_NaryEltwise::OCV/CPU           28.418          3.768               7.54       
NCHW_NCHW_add::Layer_NaryEltwise::OCV/CPU        6.942           5.679               1.22       
NCHW_NCHW_div::Layer_NaryEltwise::OCV/CPU        5.822           5.653               1.03       
NCHW_NCHW_equal::Layer_NaryEltwise::OCV/CPU      5.751           5.628               1.02       
NCHW_NCHW_greater::Layer_NaryEltwise::OCV/CPU    5.797           5.599               1.04       
NCHW_NCHW_less::Layer_NaryEltwise::OCV/CPU       7.272           5.578               1.30       
NCHW_NCHW_max::Layer_NaryEltwise::OCV/CPU        5.777           5.562               1.04       
NCHW_NCHW_mean::Layer_NaryEltwise::OCV/CPU       5.819           5.559               1.05       
NCHW_NCHW_min::Layer_NaryEltwise::OCV/CPU        5.830           5.574               1.05       
NCHW_NCHW_mul::Layer_NaryEltwise::OCV/CPU        5.759           5.567               1.03       
NCHW_NCHW_pow::Layer_NaryEltwise::OCV/CPU       342.260          74.655              4.58       
NCHW_NCHW_ref_div::Layer_NaryEltwise::OCV/CPU    8.338           8.280               1.01       
NCHW_NCHW_ref_max::Layer_NaryEltwise::OCV/CPU    8.359           8.309               1.01       
NCHW_NCHW_ref_min::Layer_NaryEltwise::OCV/CPU    8.412           8.295               1.01       
NCHW_NCHW_ref_mul::Layer_NaryEltwise::OCV/CPU    8.380           8.297               1.01       
NCHW_NCHW_ref_sum::Layer_NaryEltwise::OCV/CPU    8.356           8.323               1.00       
NCHW_NCHW_sub::Layer_NaryEltwise::OCV/CPU        6.818           5.561               1.23       
NCHW_NCHW_sum::Layer_NaryEltwise::OCV/CPU        5.805           5.570               1.04       
NHWC_C::Layer_NaryEltwise::OCV/CPU               3.834           4.817               0.80       
NHWC_H::Layer_NaryEltwise::OCV/CPU               28.402          3.771               7.53
```

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
a8d13739196e54d14d423ed9f94dbb4bba8adf2b,Abduragim Shtanchaev,44877829+Abdurrahheem@users.noreply.github.com,2024-07-02 15:26:34+00:00,"Merge pull request #25794 from Abdurrahheem:ash/yolov10-support

Add sample support of YOLOv9 and YOLOv10 in OpenCV #25794

This PR adds sample support of  [`YOLOv9`](https://github.com/WongKinYiu/yolov9) and [`YOLOv10`](https://github.com/THU-MIG/yolov10/tree/main)) in OpenCV. Models for this test are located in this [PR](https://github.com/opencv/opencv_extra/pull/1186). 

**Running YOLOv10 using OpenCV.** 
1. In oder to run `YOLOv10` one needs to cut off postporcessing with dynamic shapes from torch and then convert it to ONNX. If someone is looking for ready solution, there is [this forked branch](https://github.com/Abdurrahheem/yolov10/tree/ash/opencv-export) from official YOLOv10.  Particularty follow this proceduce. 

```bash
git clone git@github.com:Abdurrahheem/yolov10.git
conda create -n yolov10 python=3.9
conda activate yolov10
pip install -r requirements.txt
python export_opencv.py --model=<model-name> --imgsz=<input-img-size>
```
By default `model=""yolov10s""` and `imgsz=(480,640)`. This will generate file `yolov10s.onnx`, which can be use for inference in OpenCV

2. For inference part on OpenCV.  one can use `yolo_detector.cpp` [sample](https://github.com/opencv/opencv/blob/4.x/samples/dnn/yolo_detector.cpp). If you have followed above exporting procedure, then you can use following command to run the model. 

``` bash
build opencv from source 
cd build 
./bin/example_dnn_yolo_detector --model=<path-to-yolov10s.onnx-file> --yolo=yolov10 --width=640 --height=480 --input=<path-to-image> --scale=0.003921568627 --padvalue=114
```
If you do not specify `--input` argument, OpenCV will grab first camera that is avaliable on your platform. 
For more deatils on how to run the `yolo_detector.cpp` file see this [guide](https://docs.opencv.org/4.x/da/d9d/tutorial_dnn_yolo.html#autotoc_md443) 


**Running YOLOv9 using OpenCV**

1. Export model following [official guide](https://github.com/WongKinYiu/yolov9)of the YOLOv9 repository. Particularly you can do following for converting.

```bash
git clone https://github.com/WongKinYiu/yolov9.git
cd yolov9
conda create -n yolov9 python=3.9
conda activate yolov9
pip install -r requirements.txt
wget https://github.com/WongKinYiu/yolov9/releases/download/v0.1/yolov9-t-converted.pt
python export.py --weights=./yolov9-t-converted.pt --include=onnx --img-size=(480,640) 
```

This will generate <yolov9-t-converted.onnx> file.

2.  Inference on OpenCV.

```bash
build opencv from source 
cd build 
./bin/example_dnn_yolo_detector --model=<path-to-yolov9-t-converted.onnx> --yolo=yolov9 --width=640 --height=480 --scale=0.003921568627 --padvalue=114 --path=<path-to-image>
```

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
939cb58cd65ce4e7b007537cc88193d9a2c76807,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-02 11:02:42+00:00,"Merge pull request #25845 from kaingwade:orbbecsdk_mac_off

Set using Orbbec SDK on MacOS OFF by default."
2799c74d50372bdf1b7a5258e5f53c45edbd662a,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-06-20 14:22:36+00:00,Use Carotene implementation of TEGRA_GaussianBlurBinomial 3x3 and 5x5 on ARM.
6e1864e3fccde783626921e5776c5fc5edd56c74,Wanli,wanli.zhong.1999@gmail.com,2024-07-02 09:32:49+00:00,"Merge pull request #24941 from WanliZhong:v_exp

Add support for v_exp (exponential) #24941

This PR aims to implement `v_exp(v_float16 x)`, `v_exp(v_float32 x)` and `v_exp(v_float64 x)`.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
883faf88711a035cc5fafe48eaa34ec8db14d29f,kaingwade,jiawu83@gmail.com,2024-07-02 09:23:20+00:00,Set using Orbbec SDK on MacOS OFF by default.
75339a5528f380498632b1d595e45e8284f65a7a,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-02 07:26:56+00:00,"Merge pull request #25800 from xndcn:patch-2

photo: doc: Fix window range for fastNlMeansDenoisingMulti"
35d9e8ef5ceae1087c2a40be821abc4a41c7d170,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-02 07:05:04+00:00,"Merge pull request #25841 from asmorkalov:as/cudnn9_version_check

Fixed CuDNN runtime version check for CuDNN 9+."
fd5efabdd9b0cfade1ce6aa9db7b46b581b794d4,Dietmar Schabus,dschabus@veritone.com,2024-07-02 04:45:05+00:00,Don't rely on nb_frames to be correct
3d74d646d8c4c48e400e650fef9463f174414b96,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-07-01 14:33:24+00:00,Fixed CuDNN runtime version check for CuDNN 9+.
39a7b3d1869d31df92029503b9a8670071eac596,WU Jia,35290826+kaingwade@users.noreply.github.com,2024-07-01 07:55:35+00:00,"Merge pull request #25813 from kaingwade:orbbec-astra

Update the tutorial of using Orbbec Astra cameras #25813

This PR is the backport of Orbbec OpenNI-based Astra camera related changes from #25410 to the 4.x branch, which includes updating the tutorial of Orbbec Astra cameras, renaming `orbbec_astra.cpp`.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
930af15f470754eb7e7810b25aa4aa3a624d4e40,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-01 07:34:36+00:00,"Merge pull request #25834 from thiru31:4.x

Fix: compilation Issue on ARM64 (msys2 clangarm)"
34ed88d7fbde457dfc441acca9d29d44fbcf614e,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-01 07:30:23+00:00,"Merge pull request #25836 from dan-masek:fix_win32_topmost_toggle

Fix #25833: The correct way to disable top-most state is with HWND_NOTOPMOST, not HWND_TOP."
25609ef5fdc578ecf19d2f9579f828be70547f20,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-01 07:11:27+00:00,"Merge pull request #25838 from tyler92:fix-fd-leak

Fix file descriptor leak in HDR decoder"
996ed0a2eb3d74c8045ed4674c54dc4bd75d79cf,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-07-01 06:51:07+00:00,"Merge pull request #25829 from asmorkalov:as/force_legal_requirements

Force contributors to define Apache 2.0 license for the new PRs."
ce1d840adfe68504fd9b35f1568286e1911599c9,Thirumalai Nagalingam,81082960+thiru31@users.noreply.github.com,2024-06-29 06:28:48+00:00,"Fix: compilation Issue on ARM64 (msys2 clangarm)

Added a definition for M_PI in the code to resolve a compilation error encountered when building OpenCV on the MSYS2 environment. The M_PI constant was not defined, causing the compilation to fail."
bbf65a166e027f079835920f117db5725d3ec030,Mikhail Khachayants,mkhachaiants@gmail.com,2024-06-30 15:43:04+00:00,Fix file descriptor leak in HDR decoder
1e5407a9ba571c8aedceaf0c2897f915dd98d925,Dan Mašek,dan.masek@gmail.com,2024-06-29 19:39:49+00:00,"Fix #25833: The correct way to disable top-most state is with HWND_NOTOPMOST, not HWND_TOP."
b7c9221b805c948debde54d1339aca339310f61c,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-06-28 13:54:14+00:00,Force contributors to define Apache 2.0 license for the new PRs.
be00247ca05288d9be1f4a75dfd757146bc570c4,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-28 13:51:15+00:00,"Merge pull request #25820 from asmorkalov:as/HAL_non_strict_equalizeHist

Relax equalizeHist test for some HAL implementations"
855f6cfdd44346b9fcb37f8b6c4b6b645c643823,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-28 11:54:15+00:00,"Merge pull request #25827 from asmorkalov:as/exclude_ios_platform_header

Exclude cap_ios.h from installation where it's not needed"
310169490af0861683f66687961cebdae929528a,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-06-28 10:02:59+00:00,Exclude cap_ios.h from installation where it's not needed.
aab7239f38638db5ee8baafaaaac604c71a6c92c,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-28 11:01:29+00:00,"Merge pull request #25826 from asmorkalov:as/clean_download_models_deps

Drop redundant dependency from download_models.py"
4500eb937f662ec273d61dc90d83560d6e52a54d,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-06-28 07:45:52+00:00,Drop redundant dependency from download_models.py
786726719fbb82dce6d549c935ac3940b6f1e3fe,Maxim Milashchenko,67949029+MaximMilashchenko@users.noreply.github.com,2024-06-28 06:00:16+00:00,"Merge pull request #25793 from MaximMilashchenko:hal_rvv

Fixed build error hal_rvv_071 #25793

Fixed bug with enabling vector header when vector extension is disabled (RVV=OFF) in hal_rvv_071"
284a79446af1ec685129ccbe641ed60458c539f7,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-28 05:56:37+00:00,"Merge pull request #25816 from FantasqueX:remove-unused-brow-1

Remove unused brow variable"
ee2b0f9d635437954da9c08c05800adeb68fbe67,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-06-27 05:21:41+00:00,Relax equalizeHist test for some HAL implementations.
445022682e98e996dd2139557d6c62d14811b246,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-27 16:11:05+00:00,"Merge pull request #25789 from asmorkalov:as/HAL_meanStdDev_tails

Fill mean and stdDev tails with zeros for HAL branch in meanStdDev #25789

as it's done for other branches.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
204d62ae12a1bda7c92721cb957c97909cc2c93e,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-27 09:58:51+00:00,"Merge pull request #25815 from FantasqueX:remove-unused-variable-1

Remove unused variables in rgb2hsv_b simd"
efa4d9176a16ad30081a184124b25a8029ea788d,kozinove,evgeniy.kozinov@gmail.com,2024-06-26 12:31:19+00:00,"Merge pull request #25661 from itlab-vision:framebuffer

Highgui backend on top of Framebuffer #25661

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [ x] I agree to contribute to the project under Apache 2 License.
- [ x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [ x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ x] The feature is well documented and sample code can be built with the project CMake

Environment variables used:
OPENCV_UI_BACKEND - you need to add the value “FB”
OPENCV_UI_PRIORITY_FB - requires priority indication
OPENCV_HIGHGUI_FB_MODE={FB|XVFB|EMU} - mode of using Framebuffer (default ""FB"")
- FB - Linux Framebuffer
- XVFB - virtual Framebuffer
- EMU - emulation (images are not displayed)
OPENCV_HIGHGUI_FB_DEVICE (FRAMEBUFFER) - path to the Framebuffer file (default ""/dev/fb0"").

Examples of using:

sudo OPENCV_UI_BACKEND=FB ./opencv_test_highgui
sudo OPENCV_UI_PRIORITY_FB=1111 ./opencv_test_highgui
OPENCV_UI_BACKEND=FB OPENCV_HIGHGUI_FB_MODE=EMU ./opencv_test_highgui
sudo OPENCV_UI_BACKEND=FB OPENCV_HIGHGUI_FB_MODE=FB ./opencv_test_highgui

export DISPLAY=:99
Xvfb $DISPLAY -screen 0 1024x768x24 -fbdir /tmp/ -f /tmp/user.xvfb.auth&
sudo -u sipeed XAUTHORITY=/tmp/user.xvfb.auth x11vnc -display $DISPLAY -listen localhost&
DISPLAY=:0 gvncviewer localhost&

FRAMEBUFFER=/tmp/Xvfb_screen0 OPENCV_UI_BACKEND=FB OPENCV_HIGHGUI_FB_MODE=XVFB ./opencv_test_highgui"
2179186a51efae902030f5e31c873b0ede96a60a,Letu Ren,fantasquex@gmail.com,2024-06-26 11:07:44+00:00,Remove unused variables in rgb2hsv_b simd
76a1d26bcda5dd9c871d147e573d1270a02e3d54,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-25 10:26:28+00:00,"Merge pull request #25805 from TFiFiE:patch-1

Replace use of ""eval()"" with ""getattr()""."
11c69bb1717e2e0f37b2c25c4741aa4b18538788,richard28039,89371302+richard28039@users.noreply.github.com,2024-06-24 07:28:38+00:00,"Merge pull request #25775 from richard28039:4.x

Add yolov8l.onnx to samples #25775

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake

Hello, I noticed that the /samples/dnn/models.yml said it should be used for all yolov8 models, but the YOLOv8l is not included in the file, so I added it to the file, thanks.
![image](https://github.com/opencv/opencv/assets/89371302/7a7b0090-ef4c-478d-8f24-7d99260fe0c9)"
8be2056cff7df2a953e9919912aef4e0eb6334bf,TFiFiE,TFiFiE@users.noreply.github.com,2024-06-22 15:27:16+00:00,"Replace use of ""eval()"" with ""getattr()""."
2028998e00ab94fa8e2e9d3d888cc2d769d25027,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-22 15:39:54+00:00,"Merge pull request #25803 from Kumataro/fix25802

cmake: support 10+ minor version(10,11,...)"
d8c7debe5298887789cd513674cf601c6d3dffbc,Kumataro,Kumataro@users.noreply.github.com,2024-06-22 03:23:25+00:00,"cmake: support 10+ minor version(10,11,...)"
3f13ce797b89b4bc83a3caddc682ea2158c3f32c,Yuantao Feng,yuantao.feng@outlook.com,2024-06-21 16:28:22+00:00,"Merge pull request #25779 from fengyuentau:dnn/fix_onnx_depthtospace

dnn: add DepthToSpace and SpaceToDepth #25779

We are working on updating WeChat QRCode module. One of the new models is a fully convolutional model and hence it should be able to run with different input shapes. However,  it has an operator `DepthToSpace`, which is parsed as a subgraph of `Reshape -> Permute -> Reshape` with a fixed shape getting during parsing. The subgraph itself is not a problem, but the true problem is the subgraph with a fixed input and output shape regardless input changes. This does not allow the model to run with different input shapes.

Solution is to add a dedicated layer for DepthtoSpace and SpaceToDepth.

Backend support:

- [x] CPU
- [x] CUDA
- [x] OpenCL
- [x] OpenVINO
- [x] CANN
- [x] TIMVX
-  ~Vulkan~ (missing fundamental tools, like permutation and reshape)

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
acd16e384fe6253fb082afe33539ede6506a98e1,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-21 13:51:30+00:00,"Merge pull request #25773 from eplankin:eplankin/fix_layout

fix for IPP"
5cfa44d2a21717dbf70af1e40048f37e66917cb0,xndcn,xndchn@gmail.com,2024-06-21 13:04:22+00:00,photo: doc: Fix window range for fastNlMeansDenoisingMulti
5dc1b39e4c9dfb3339e0b910f7d824a02474ceed,Ujjayant Kadian,118752727+ujjayant-kadian@users.noreply.github.com,2024-06-21 11:34:26+00:00,"Merge pull request #25791 from ujjayant-kadian:uk/extend-gapi-onnx-params-arbitrary-session-options

Extending G-API onnx::Params to pass arbitrary session options #25791

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [ ] I agree to contribute to the project under Apache 2 License.
- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [ ] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
7ef42d7706d627f55fff9879794ee9d68af2a264,Simon Kämpe,simon.kampe@gmail.com,2024-06-20 17:05:06+00:00,"Merge pull request #25751 from simonkampe:fix-eigen-rowmajor

Add missing cv2eigen overload #25751

Fixes #16606

Add overloads to cv2eigen to handle eigen matrices of type
Eigen::Matrix<Tp_, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor>

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
57984e689b4001f5f15fe4adf8b33ef1b4a6950a,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-20 07:27:15+00:00,"Merge pull request #25788 from asmorkalov:as/bilateralFilter_test

Extended bilateralFilter test to cover more branches"
0cba7020a1a6c6411fd06780a2aa932dbf9a9c14,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-20 05:59:48+00:00,"Merge pull request #25787 from asmorkalov:as/lut_fp16

Added LUT for FP16 and accuracy test"
a102b24285de7abc982582a63ed72e027cea87cf,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-06-19 11:23:53+00:00,Added LUT for FP16 and accuracy test.
e7108f48ab4c10f215006e57f2b101459da11bac,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-06-19 12:29:07+00:00,Extended bilateralFilter test to cover more branches.
d1b643a05a70a21355f4a9d3761de58f4d690b7b,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-19 05:13:34+00:00,"Merge pull request #25780 from asmorkalov:as/gapi_arm_overflow

Fixed input buffer read overflow in vectorized G-API convertTo implementation"
766f3f5fc41729ca8f050f042f940f27b93b4dfd,Rostislav Vasilikhin,savuor@gmail.com,2024-06-18 15:15:41+00:00,"Merge pull request #25746 from savuor:rv/hwasan_flag_release

Android SDK build script: HWAsan flags added for release mode #25746

A quick fix for #25718

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
553c111c5aa3ec9e706930d228b76159553b697f,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-06-18 12:44:26+00:00,Fixed input buffer read overflow in vectorized G-API convertTo implementation.
e3884a9ea88d32bb561dc8fc15017e49a3a4373e,Yuantao Feng,yuantao.feng@opencv.org.cn,2024-06-18 09:48:28+00:00,"Merge pull request #25771 from fengyuentau:vittrack_black_input

video: fix vittrack in the case where crop size grows until out-of-memory when the input is black #25771

Fixes https://github.com/opencv/opencv/issues/25760

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
0fac5d52bceea3509b2bb26797eb086ceb1f5350,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-18 09:47:01+00:00,"Merge pull request #25778 from asmorkalov:as/svgfig_update

Svgfig library update to version 1.0.1 as it uses BSD-3 license."
60819979d4f69fb003d0915eede816582e2a1662,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-06-18 07:38:57+00:00,Svgfig library update to version 1.0.1 as it uses BSD-3 license.
b9d2ecb72f4d79870b10d19631145928dbcf7e68,Letu Ren,fantasquex@gmail.com,2024-06-17 10:50:53+00:00,Remove unused brow variable
860b688cdd35bc089fea9f812b4c9fb0ecd09bbb,eplankin,elena.plankina@intel.com,2024-06-17 10:25:49+00:00,Enable build with both old and new layouts of IPP
24907f35a32b75d9c5b34a203b44327ba53f86f4,Dmitry Kurtaev,dmitry.kurtaev@gmail.com,2024-06-17 09:46:10+00:00,"Merge pull request #25757 from dkurt:d.kurtaev/opencv_js_tests_old_emsdk

Use onRuntimeInitialized with OpenCV.js Node tests #25757

### Pull Request Readiness Checklist

tests: https://github.com/opencv/ci-gha-workflow/pull/174

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
4bf95ac2df822db8608c94d891f5edf8c549a03f,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-16 15:18:03+00:00,"Merge pull request #25602 from asmorkalov:as/gstreamer_alpha_channel

Handle BGRA streams in GStreamer backend"
0a12c7d9dea2d90216b92649beceb0022191dc75,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-16 14:07:01+00:00,"Merge pull request #25725 from asmorkalov:as/intersectConvexConvex_fix

Fixed result buffer overflow in intersectConvexConvex_ for non-convex input"
7ff531b8ab57df6a63a2524f3a911663a3eb5457,Rostislav Vasilikhin,savuor@gmail.com,2024-06-15 09:44:36+00:00,"Merge pull request #25759 from savuor:rv/equalizeHist_tests

Accuracy tests for equalizeHist() added #25759

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
88c6c7d9f71eedffdaaf3ac16ba55530ba652a25,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-17 08:21:23+00:00,Handle BGRA sterams in GStreamer backend
a03b81316782ae30038b288fd3568993fa1e3538,Dmitry Kurtaev,dmitry.kurtaev@gmail.com,2024-06-11 09:01:51+00:00,"Merge pull request #25732 from dkurt:opencv_js_tests_update

Fix OpenCV.js tests #25732

### Pull Request Readiness Checklist

* Firefox tests passed

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
8e9307074c7ce6f15a98d444bb2313a5c7627ecd,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-11 08:16:23+00:00,"Merge pull request #25738 from rlexmann:imgproc_fix_divSpectrums

Fix arithmetics in CV_32F branch of divSpectrums()"
2629688d117dbf23a744263d191d49c85813c406,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-11 07:49:14+00:00,"Merge pull request #25706 from cudawarped:fix_cuda_first_python_dep

`cuda`: Add missing python CUDA dependency when CUDA is a first class language"
3ea7ed9ebf926d53e2813ce2bde585b208aae167,Rostislav Vasilikhin,savuor@gmail.com,2024-06-11 07:12:38+00:00,"Merge pull request #25718 from savuor:rv/hwasan_flag

Android SDK build script: HWAsan support added #25718

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
6623c62f56bb072d7d5ed90921991646ed4324c0,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-06-06 08:37:31+00:00,Fixed result buffer overflow in intersectConvexConvex_ for non-convex input.
e1dba2c6d28c21cf0661005cd961a670e46375c2,Robert Lexmann,rlexmann@gmail.com,2024-06-10 13:47:29+00:00,Perform arithmetics in CV_32F branch of divSpectrums() with doubles to prevent infs/NaNs (+ corresponding test).
bdf986ee519b01b0f451d1a3e71866d5027c0a47,Pierre Chatelier,chacha21@users.noreply.github.com,2024-06-10 08:09:25+00:00,"Merge pull request #25726 from chacha21:remap_relative_doc

Relates to #24603

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [X] I agree to contribute to the project under Apache 2 License.
- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [X] The PR is proposed to the proper branch
- [X] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
cc6f85e1bab6942acf107e4cacf813347f0552c1,Maxim Smolskiy,mithridatus@mail.ru,2024-06-10 06:42:56+00:00,"Merge pull request #25427 from MaximSmolskiy:make-finding-corner-neighbor-symmetrical-in-ChessBoardDetector-findQuadNeighbors

Make finding corner neighbor symmetrical in ChessBoardDetector::findQuadNeighbors #25427

### Pull Request Readiness Checklist

The basic idea of finding pair of corners neighbors is to find best candidate for first corner and check if first corner quite good candidate for its best candidate. And we test first corner for its best candidate less than best candidate for first corner.

Idea of changes is to make finding corner neighbor symmetrical - find best candidate for first corner, find best candidate for second corner and match them as pair iff they are both best candidates for each other.

Additional advantage - it simplifies code and removes some code duplication.

I tested this PR with benchmark
```
python3 objdetect_benchmark.py --configuration=generate_run --board_x=7 --path=res_chessboard --synthetic_object=chessboard
```

There are minor changes in results
```
cell_img_size = 100 (default)

before

                                 category  detected chessboard  total detected chessboard  total chessboard  average detected error chessboard
                          _none_none_blur             1.000000                        360               360                           0.630345
                    _none_none_gaussNoise             0.833333                        300               360                           0.623405
                          _none_none_none             1.000000                        360               360                           0.631517
                    _none_none_strongBlur             1.000000                        360               360                           0.630316
                   _none_undistorted_blur             1.000000                        360               360                           0.671232
             _none_undistorted_gaussNoise             1.000000                        360               360                           0.672619
                   _none_undistorted_none             1.000000                        360               360                           0.673669
             _none_undistorted_strongBlur             1.000000                        360               360                           0.671257
                   _perspective_none_blur             1.000000                       1080              1080                           0.588694
             _perspective_none_gaussNoise             0.805556                        870              1080                           0.599312
                   _perspective_none_none             1.000000                       1080              1080                           0.591063
             _perspective_none_strongBlur             1.000000                       1080              1080                           0.588604
            _perspective_undistorted_blur             1.000000                       1080              1080                           0.622081
      _perspective_undistorted_gaussNoise             1.000000                       1080              1080                           0.625704
            _perspective_undistorted_none             1.000000                       1080              1080                           0.624191
      _perspective_undistorted_strongBlur             1.000000                       1080              1080                           0.621618
             _strongPerspective_none_blur             1.000000                        360               360                           0.482934
       _strongPerspective_none_gaussNoise             0.166667                         60               360                           0.391551
             _strongPerspective_none_none             1.000000                        360               360                           0.480290
       _strongPerspective_none_strongBlur             0.333333                        120               360                           0.469080
      _strongPerspective_undistorted_blur             1.000000                        360               360                           0.503458
_strongPerspective_undistorted_gaussNoise             0.250000                         90               360                           0.448713
      _strongPerspective_undistorted_none             1.000000                        360               360                           0.504412
_strongPerspective_undistorted_strongBlur             0.166667                         60               360                           0.473791
                                      all             0.904167                      13020             14400                           0.600512
Total detected time:  139.65614900000008 sec

after

                                 category  detected chessboard  total detected chessboard  total chessboard  average detected error chessboard
                          _none_none_blur             1.000000                        360               360                           0.630345
                    _none_none_gaussNoise             0.750000                        270               360                           0.636279
                          _none_none_none             1.000000                        360               360                           0.631517
                    _none_none_strongBlur             1.000000                        360               360                           0.630316
                   _none_undistorted_blur             1.000000                        360               360                           0.671232
             _none_undistorted_gaussNoise             1.000000                        360               360                           0.672619
                   _none_undistorted_none             1.000000                        360               360                           0.673669
             _none_undistorted_strongBlur             1.000000                        360               360                           0.671257
                   _perspective_none_blur             1.000000                       1080              1080                           0.588694
             _perspective_none_gaussNoise             0.888889                        960              1080                           0.594106
                   _perspective_none_none             1.000000                       1080              1080                           0.591064
             _perspective_none_strongBlur             1.000000                       1080              1080                           0.588604
            _perspective_undistorted_blur             1.000000                       1080              1080                           0.622081
      _perspective_undistorted_gaussNoise             1.000000                       1080              1080                           0.625703
            _perspective_undistorted_none             1.000000                       1080              1080                           0.624191
      _perspective_undistorted_strongBlur             1.000000                       1080              1080                           0.621618
             _strongPerspective_none_blur             1.000000                        360               360                           0.482934
       _strongPerspective_none_gaussNoise             0.166667                         60               360                           0.391551
             _strongPerspective_none_none             1.000000                        360               360                           0.480290
       _strongPerspective_none_strongBlur             0.333333                        120               360                           0.469080
      _strongPerspective_undistorted_blur             1.000000                        360               360                           0.503458
_strongPerspective_undistorted_gaussNoise             0.333333                        120               360                           0.422259
      _strongPerspective_undistorted_none             1.000000                        360               360                           0.504412
_strongPerspective_undistorted_strongBlur             0.166667                         60               360                           0.473791
                                      all             0.910417                      13110             14400                           0.599746
Total detected time:  142.40333700000005 sec

----------------------------------------------------------------------------------------------------------------------------------------------

cell_img_size = 10

before

                                 category  detected chessboard  total detected chessboard  total chessboard  average detected error chessboard
                          _none_none_blur             0.991667                        357               360                           4.905091
                    _none_none_gaussNoise             0.750000                        270               360                           5.215633
                          _none_none_none             1.000000                        360               360                           4.943304
                    _none_none_strongBlur             0.916667                        330               360                           3.806217
                   _none_undistorted_blur             0.994444                        358               360                           5.220915
             _none_undistorted_gaussNoise             0.997222                        359               360                           4.542443
                   _none_undistorted_none             0.997222                        359               360                           4.340208
             _none_undistorted_strongBlur             0.161111                         58               360                           5.024331
                   _perspective_none_blur             0.629630                        680              1080                           4.825401
             _perspective_none_gaussNoise             0.966667                       1044              1080                           3.895425
                   _perspective_none_none             0.971296                       1049              1080                           3.920378
             _perspective_none_strongBlur             0.000000                          0              1080                                NaN
            _perspective_undistorted_blur             0.583333                        630              1080                           4.594335
      _perspective_undistorted_gaussNoise             0.999074                       1079              1080                           3.553195
            _perspective_undistorted_none             0.750000                        810              1080                           3.604110
      _perspective_undistorted_strongBlur             0.000000                          0              1080                                NaN
             _strongPerspective_none_blur             0.000000                          0               360                                NaN
       _strongPerspective_none_gaussNoise             0.000000                          0               360                                NaN
             _strongPerspective_none_none             0.083333                         30               360                           2.382460
       _strongPerspective_none_strongBlur             0.000000                          0               360                                NaN
      _strongPerspective_undistorted_blur             0.000000                          0               360                                NaN
_strongPerspective_undistorted_gaussNoise             0.000000                          0               360                                NaN
      _strongPerspective_undistorted_none             0.000000                          0               360                                NaN
_strongPerspective_undistorted_strongBlur             0.000000                          0               360                                NaN
                                      all             0.539792                       7773             14400                           4.209964
Total detected time:  2.6968930000000015 sec

after

                                 category  detected chessboard  total detected chessboard  total chessboard  average detected error chessboard
                          _none_none_blur             0.991667                        357               360                           4.905091
                    _none_none_gaussNoise             0.750000                        270               360                           5.215633
                          _none_none_none             1.000000                        360               360                           4.943304
                    _none_none_strongBlur             0.916667                        330               360                           3.806217
                   _none_undistorted_blur             0.994444                        358               360                           5.220915
             _none_undistorted_gaussNoise             0.997222                        359               360                           4.542443
                   _none_undistorted_none             0.997222                        359               360                           4.340208
             _none_undistorted_strongBlur             0.161111                         58               360                           5.024331
                   _perspective_none_blur             0.629630                        680              1080                           4.825401
             _perspective_none_gaussNoise             0.966667                       1044              1080                           3.895425
                   _perspective_none_none             0.999074                       1079              1080                           3.865684
             _perspective_none_strongBlur             0.000000                          0              1080                                NaN
            _perspective_undistorted_blur             0.583333                        630              1080                           4.594335
      _perspective_undistorted_gaussNoise             0.999074                       1079              1080                           3.553195
            _perspective_undistorted_none             0.750000                        810              1080                           3.604110
      _perspective_undistorted_strongBlur             0.000000                          0              1080                                NaN
             _strongPerspective_none_blur             0.000000                          0               360                                NaN
       _strongPerspective_none_gaussNoise             0.000000                          0               360                                NaN
             _strongPerspective_none_none             0.000000                          0               360                                NaN
       _strongPerspective_none_strongBlur             0.000000                          0               360                                NaN
      _strongPerspective_undistorted_blur             0.000000                          0               360                                NaN
_strongPerspective_undistorted_gaussNoise             0.000000                          0               360                                NaN
      _strongPerspective_undistorted_none             0.000000                          0               360                                NaN
_strongPerspective_undistorted_strongBlur             0.000000                          0               360                                NaN
                                      all             0.539792                       7773             14400                           4.208308
Total detected time:  2.7706419999999983 sec
```

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
3282954c2ea8d5873b8d50aff09d7b4a43a64c38,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-07 17:41:11+00:00,"Merge pull request #25723 from mshabunin:fix-ts-rng

test: use cv::theRNG instead of own generator"
3700f9e1e932ca1aaa15db70534cb78b6e44ce05,Dmitry Kurtaev,dmitry.kurtaev@gmail.com,2024-06-07 17:39:44+00:00,"Merge pull request #25709 from dkurt:wrap_addLayer

* Wrap dnn addLayer
* Add typing stubs"
ef3303716efe65a5cd53368dfcbed7c272d56d31,Maksim Shabunin,maksim.shabunin@gmail.com,2024-06-06 14:29:34+00:00,test: use cv::theRNG instead of own generator
bef5a8768004c3d9b5eeb742446afe7d4e3e8145,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-06 17:01:33+00:00,"Merge pull request #25722 from AleksandrPanov:update_testSeveralBoardsWithCustomIds

updated testSeveralBoardsWithCustomIds to enable in 5.x"
adcb0703965d2835eb76d040ae0a5e0fa151566b,Maxim Milashchenko,67949029+MaximMilashchenko@users.noreply.github.com,2024-06-06 12:31:59+00:00,"Merge pull request #25307 from MaximMilashchenko:halrvv071

* added hal for cv_hal_cvtBGRtoBGR rvv 0.7.1"
cbc08514fde2002ea8aaf87145f021d7df20ba26,Alexander Panov,alexander.panov@xperience.ai,2024-06-06 11:22:58+00:00,updated testSeveralBoardsWithCustomIds to enable in 5.x
cbf3b1187d9192d64511c2af01fb2aa2310b069d,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-06 10:36:00+00:00,"Merge pull request #25720 from VadimLevin:dev/vlevin/floodFill-optional-mask

fix: mark floodFill mask as optional in Python typing stubs"
0d1ed49d2a1221994358eccbf90b4be2b8f70b67,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-06 09:50:30+00:00,"Merge pull request #25703 from mshabunin:fix-imread-arg

imgproc: fixed imread with output image argument"
a5d9c29b121c85968e10d523a6baae46c59e5e16,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-06 09:48:20+00:00,"Merge pull request #25716 from alexlyulkov:al/mediandk-fix

Added potential fix for Android H264 Encoding Bug"
5dd7b5f0e5f639c6d477166cd1a8e204a7a91cb4,Vadim Levin,vadim.levin@xperience.ai,2024-06-06 08:51:10+00:00,fix: mark floodFill mask as optional in Python typing stubs
99f32f17b481a7ab387c3f4f177b343dad5d1e64,Alexander Lyulkov,alexander.lyulkov@opencv.ai,2024-06-05 16:17:49+00:00,Added potential fix for Android H264 Encoding Bug
b77c74b6fc79f6dca2da0fb5694ba57037310caf,Maksim Shabunin,maksim.shabunin@gmail.com,2024-06-04 11:44:39+00:00,"imgproc: fixed imread with output image argument, minor refactoring, fixes in HDR"
9c05b27ba0619f28ee15b42c309500b6f0958cc1,cudawarped,12133430+cudawarped@users.noreply.github.com,2024-06-04 15:50:06+00:00,cuda: Add missing python CUDA dependency when CUDA is a first class language
92b588f30bd29751be6dcb08321b047731e9878f,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-04 10:01:21+00:00,"Merge pull request #25702 from asmorkalov:as/gapi_disable_steaming_again

Disable more G-API streaming test due to unstability."
2bb8b2b173774b302a4af7f7978a14be5d26d54c,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-06-04 08:07:22+00:00,Disable more G-API streaming test due to unstability.
d8f0838fa35b879e24196feafbf9dd1d683f0af0,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-06-04 08:03:31+00:00,"Merge pull request #25701 from keanep:I25700

Update cv::FaceRecognizerSF class documentation"
3f26664e8d5a2c2788bf8b52671d2340de93d489,Patrick Keane,keanep@gatech.edu,2024-06-03 21:29:41+00:00,ISSUE-25700 update cv::FaceRecognizerSF class documentation
337c183b9db4cfd5358b09ec8a610f449e3b8e00,Alexander Alekhin,alexander.a.alekhin@gmail.com,2024-06-02 18:24:06+00:00,Merge tag '4.10.0'
71d3237a093b60a27601c20e9ee6c3e52154e8b1,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-06-02 11:41:07+00:00,Release 4.10.0
a7e53aa1846ada1c4de6986a0d02bd7c740d2eec,Rostislav Vasilikhin,savuor@gmail.com,2024-06-02 11:28:06+00:00,"Merge pull request #25671 from savuor:rv/arithm_extend_tests

Tests added for mixed type arithmetic operations #25671

### Changes
* added accuracy tests for mixed type arithmetic operations
    _Note: div-by-zero values are removed from checking since the result is implementation-defined in common case_
* added perf tests for the same cases
* fixed a typo in `getMulExtTab()` function that lead to dead code

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
1bd5ca1ebe3279d5492f95f6c080475ef03fd74d,Kumataro,Kumataro@users.noreply.github.com,2024-06-02 11:14:04+00:00,"Merge pull request #25686 from Kumataro:fix25674

Suppress build warnings for GCC14 #25686

Close #25674

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
1db6a8a1f33786880706426313d72725f5f7bf99,Vincent Rabaud,vrabaud@google.com,2024-05-31 17:51:58+00:00,"Merge pull request #25665 from vrabaud:jacobian

Fix Homography computation. #25665

The bug was introduced in https://github.com/opencv/opencv/pull/25308

I am sorry I do not have a proper test.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
98b8825031f19f47b1e33a9b9c062208f8d4acb5,CNOCycle,24318472+CNOCycle@users.noreply.github.com,2024-05-31 16:31:21+00:00,"Merge pull request #25613 from CNOCycle:tflite/ops

Support Global_Pool_2D ops in .tflite model #25613

### Pull Request Readiness Checklist

**Merge with extra**: https://github.com/opencv/opencv_extra/pull/1180

This PR adds support for `GlobalAveragePooling2D` and `GlobalMaxPool2D` on the TFlite backend. When the k`eep_dims` option is enabled, the output is a 2D tensor, necessitating the inclusion of an additional flatten layer. Additionally, the names of these layers have been updated to match the output tensor names generated by `generate.py` from the opencv_extra repository.

- [X] I agree to contribute to the project under Apache 2 License.
- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [X] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [X] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [X] The feature is well documented and sample code can be built with the project CMake"
29f91a08d53cf46c2b9183a879c098695ca42c08,Maksim Shabunin,maksim.shabunin@gmail.com,2024-05-31 16:28:03+00:00,"Merge pull request #25680 from mshabunin:fix-approx-2

Reverted contour approximation behavior #25680

Related issue #25663 - revert new function behavior despite it returning different result than the old one (reverts PR  #25672).
Also added Coverity issue fix."
08107957d87bfb4b0f43c337130821e011d9dcd3,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-31 16:24:26+00:00,"Merge pull request #25682 from fengyuentau:calib3d/lapack_fix_calib3d

calib3d: fix data type for ilp64 lapack"
ca035e6dae6c55a936928296979421cf7db86adf,fengyuentau,yuantao.feng@opencv.org.cn,2024-05-31 14:40:23+00:00,fix type for ilp64 api
472eba324af899e192c30970fe8dda98332a0f63,Alexander Panov,alexander.panov@xperience.ai,2024-05-31 14:03:24+00:00,"Merge pull request #25673 from AleksandrPanov:fix_charuco_board_markers

fixed marker generation in charuco board #25673

When generating  Charuco board markers in `generateImage()`, a problem occurs as in https://github.com/opencv/opencv/issues/24806, https://github.com/opencv/opencv/pull/24873:

In low resolution:
![charucoImg_before_fix2](https://github.com/opencv/opencv/assets/22337800/aab7b443-2d2a-4287-b869-708ac5976ea5)
In medium resolution:
![charucoImg_before_fix](https://github.com/opencv/opencv/assets/22337800/8c21ae42-d9c8-4cb5-9fcc-7814dfc07b80)

This PR fixed this problems:
![charucoImg_after_fix2](https://github.com/opencv/opencv/assets/22337800/93256dbb-8544-46eb-be78-844234e42ca9)
![charucoImg_after_fix](https://github.com/opencv/opencv/assets/22337800/f4d6794e-bee9-4ce4-8f9b-67a40800cbe5)

The test checks the inner and outer borders of the Aruco markers. In the outer border of Aruco marker, all pixels should be white. In the inner border of Aruco marker, all pixels should be black.
![image](https://github.com/opencv/opencv/assets/22337800/010a9c64-e03c-4239-9ac9-2cda9170793b)


### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
dcce2b8b2412dedb35f1ba238ffe40d68019d3ac,Ujjayant Kadian,118752727+ujjayant-kadian@users.noreply.github.com,2024-05-31 14:01:46+00:00,"Merge pull request #25662 from ujjayant-kadian:uk/port-gapi-onnxrt-backend-into-v2-api

Port G-API ONNXRT backend into V2 API #25662

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [ ] I agree to contribute to the project under Apache 2 License.
- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [ ] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
d7f04a9d33d9c7d7c4d829fe6a5e55955d158e3a,Abduragim Shtanchaev,44877829+Abdurrahheem@users.noreply.github.com,2024-05-31 10:13:36+00:00,"Merge pull request #25660 from Abdurrahheem:ash/fix-slice-empty-input

Slice layer parser fix to support empty input case #25660

This PR fixes Slice Layer's parser to handle empty input cases (cases with initializer)
It fixed the issue rased in #24838

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
f4ebf7c0a6b2ee845a395ae3dac59927eb862894,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-31 08:06:59+00:00,"Merge pull request #25679 from asmorkalov:as/HAL_min_max_idx_fix

Fixed offset computation for ND case in MinMaxIdx HAL."
9ed1d6730f8f742efcee0282f5d4c3e58e36f1e3,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-31 07:09:34+00:00,Fixed offset computation for ND case in MinMaxIdx HAL.
7e9ef4db86cd403a8817832c8e558ef82c17733b,Yuantao Feng,yuantao.feng@opencv.org.cn,2024-05-30 14:03:07+00:00,"Merge pull request #25625 from fengyuentau:core/deploy_fix_lapack_ilp64

core: deployment compatibility for old mac after Accelerate New LAPACK fix #25625

Attempt to fix https://github.com/opencv/opencv/pull/24804#discussion_r1609957747

We may need to explicitly add build option `-DCMAKE_OSX_DEPLOYMENT_TARGET=12.0` or environment variable (`export MACOSX_DEPLOYMENT_TARGET=12.0`) for mac builds (python package most probably) on builders with new macOS (>= 13.3).

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
3e3ee106fb8ccd003aa2c9a943a2340b066537bc,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-30 12:47:31+00:00,"Merge pull request #25658 from asmorkalov:as/variadic_tuple

Added branch with variadic version of Trust tuple"
2624929ec66ae66333311d88ba26aff43675d78c,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-30 11:13:26+00:00,"Merge pull request #25672 from mshabunin:fix-approx

imgproc: fix contour approximation, added test"
79af357cf44214abde34c2f1ac79916849d179ce,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-30 09:41:39+00:00,"Merge pull request #25668 from vrabaud:legacy

Have the findContours_legacy overload call findContours_legacy."
8709115d9a34912d4ee485442d072113951467f6,Maksim Shabunin,maksim.shabunin@gmail.com,2024-05-29 09:54:18+00:00,"imgproc: fix contour approximation, added test"
e7bf07786dff7535e6ba2e9c8ecd297de1ae6051,Vincent Rabaud,vrabaud@google.com,2024-05-29 14:41:32+00:00,Have the findContours_legacy overload call findContours_legacy.
d9421ac148f3ad4878b3a75c58da58c24f19ed01,Junyan721113,llh721113@outlook.com,2024-05-28 11:25:53+00:00,"Merge pull request #25167 from plctlab:rvp_3rdparty

3rdparty: NDSRVP - A New 3rdparty Library with Optimizations Based on RISC-V P Extension v0.5.2 - Part 1: Basic Functions #25167

# Summary

### Previous context
From PR #24556: 

>> * As you wrote, the P-extension differs from RVV thus can not be easily implemented via Universal Intrinsics mechanism, but there is another HAL mechanism for lower-level CPU optimizations which is used by the [Carotene](https://github.com/opencv/opencv/tree/4.x/3rdparty/carotene) library on ARM platforms. I suggest moving all non-dnn code to similar third-party component. For example, FAST algorithm should allow such optimization-shortcut: see https://github.com/opencv/opencv/blob/4.x/modules/features2d/src/hal_replacement.hpp
>>   Reference documentation is here:
>>   
>>   * https://docs.opencv.org/4.x/d1/d1b/group__core__hal__interface.html
>>   * https://docs.opencv.org/4.x/dd/d8b/group__imgproc__hal__interface.html
>>   * https://docs.opencv.org/4.x/db/d47/group__features2d__hal__interface.html
>>   * Carotene library is turned on here: https://github.com/opencv/opencv/blob/8bbf08f0de9c387c12afefdb05af7780d989e4c3/CMakeLists.txt#L906-L911

> As a test outside of this PR, A 3rdparty component called ndsrvp is created, containing one of the non-dnn code (integral_SIMD), and it works very well.
> All the non-dnn code in this PR have been removed, currently this PR can be focused on dnn optinizations.
> This HAL mechanism is quite suitable for rvp optimizations, all the non-dnn code is expected to be moved into ndsrvp soon.

### Progress

#### Part 1 (This PR)

- [Core](https://docs.opencv.org/4.x/d1/d1b/group__core__hal__interface.html)
- [x] Element-wise add and subtract
- [x] Element-wise minimum or maximum
- [x] Element-wise absolute difference
- [x] Bitwise logical operations
- [x] Element-wise compare
- [ImgProc](https://docs.opencv.org/4.x/dd/d8b/group__imgproc__hal__interface.html)
- [x] Integral
- [x] Threshold
- [x] WarpAffine
- [x] WarpPerspective
- [Features2D](https://docs.opencv.org/4.x/db/d47/group__features2d__hal__interface.html)

#### Part 2 (Next PR)

**Rough Estimate. Todo List May Change.**

- [Core](https://docs.opencv.org/4.x/d1/d1b/group__core__hal__interface.html)
- [ImgProc](https://docs.opencv.org/4.x/dd/d8b/group__imgproc__hal__interface.html)
- smaller remap HAL interface
- AdaptiveThreshold
- BoxFilter
- Canny
- Convert
- Filter
- GaussianBlur
- MedianBlur
- Morph
- Pyrdown
- Resize
- Scharr
- SepFilter
- Sobel
- [Features2D](https://docs.opencv.org/4.x/db/d47/group__features2d__hal__interface.html)
- FAST

### Performance Tests

The optimization does not contain floating point opreations.

**Absolute Difference**

Geometric mean (ms)

|Name of Test|opencv perf core Absdiff|opencv perf core Absdiff|opencv perf core Absdiff vs opencv perf core Absdiff (x-factor)|
|---|:-:|:-:|:-:|
|Absdiff::OCL_AbsDiffFixture::(640x480, 8UC1)|23.104|5.972|3.87|
|Absdiff::OCL_AbsDiffFixture::(640x480, 32FC1)|39.500|40.830|0.97|
|Absdiff::OCL_AbsDiffFixture::(640x480, 8UC3)|69.155|15.051|4.59|
|Absdiff::OCL_AbsDiffFixture::(640x480, 32FC3)|118.715|120.509|0.99|
|Absdiff::OCL_AbsDiffFixture::(640x480, 8UC4)|93.001|19.770|4.70|
|Absdiff::OCL_AbsDiffFixture::(640x480, 32FC4)|161.136|160.791|1.00|
|Absdiff::OCL_AbsDiffFixture::(1280x720, 8UC1)|69.211|15.140|4.57|
|Absdiff::OCL_AbsDiffFixture::(1280x720, 32FC1)|118.762|119.263|1.00|
|Absdiff::OCL_AbsDiffFixture::(1280x720, 8UC3)|212.414|44.692|4.75|
|Absdiff::OCL_AbsDiffFixture::(1280x720, 32FC3)|367.512|366.569|1.00|
|Absdiff::OCL_AbsDiffFixture::(1280x720, 8UC4)|285.337|59.708|4.78|
|Absdiff::OCL_AbsDiffFixture::(1280x720, 32FC4)|490.395|491.118|1.00|
|Absdiff::OCL_AbsDiffFixture::(1920x1080, 8UC1)|158.827|33.462|4.75|
|Absdiff::OCL_AbsDiffFixture::(1920x1080, 32FC1)|273.503|273.668|1.00|
|Absdiff::OCL_AbsDiffFixture::(1920x1080, 8UC3)|484.175|100.520|4.82|
|Absdiff::OCL_AbsDiffFixture::(1920x1080, 32FC3)|828.758|829.689|1.00|
|Absdiff::OCL_AbsDiffFixture::(1920x1080, 8UC4)|648.592|137.195|4.73|
|Absdiff::OCL_AbsDiffFixture::(1920x1080, 32FC4)|1116.755|1109.587|1.01|
|Absdiff::OCL_AbsDiffFixture::(3840x2160, 8UC1)|648.715|134.875|4.81|
|Absdiff::OCL_AbsDiffFixture::(3840x2160, 32FC1)|1115.939|1113.818|1.00|
|Absdiff::OCL_AbsDiffFixture::(3840x2160, 8UC3)|1944.791|413.420|4.70|
|Absdiff::OCL_AbsDiffFixture::(3840x2160, 32FC3)|3354.193|3324.672|1.01|
|Absdiff::OCL_AbsDiffFixture::(3840x2160, 8UC4)|2594.585|553.486|4.69|
|Absdiff::OCL_AbsDiffFixture::(3840x2160, 32FC4)|4473.543|4438.453|1.01|

**Bitwise Operation**

Geometric mean (ms)

|Name of Test|opencv perf core Bit|opencv perf core Bit|opencv perf core Bit vs opencv perf core Bit (x-factor)|
|---|:-:|:-:|:-:|
|Bitwise_and::OCL_BitwiseAndFixture::(640x480, 8UC1)|22.542|4.971|4.53|
|Bitwise_and::OCL_BitwiseAndFixture::(640x480, 32FC1)|90.210|19.917|4.53|
|Bitwise_and::OCL_BitwiseAndFixture::(640x480, 8UC3)|68.429|15.037|4.55|
|Bitwise_and::OCL_BitwiseAndFixture::(640x480, 32FC3)|280.168|59.239|4.73|
|Bitwise_and::OCL_BitwiseAndFixture::(640x480, 8UC4)|90.565|19.735|4.59|
|Bitwise_and::OCL_BitwiseAndFixture::(640x480, 32FC4)|374.695|79.257|4.73|
|Bitwise_and::OCL_BitwiseAndFixture::(1280x720, 8UC1)|67.824|14.873|4.56|
|Bitwise_and::OCL_BitwiseAndFixture::(1280x720, 32FC1)|279.514|59.232|4.72|
|Bitwise_and::OCL_BitwiseAndFixture::(1280x720, 8UC3)|208.337|44.234|4.71|
|Bitwise_and::OCL_BitwiseAndFixture::(1280x720, 32FC3)|851.211|182.522|4.66|
|Bitwise_and::OCL_BitwiseAndFixture::(1280x720, 8UC4)|279.529|59.095|4.73|
|Bitwise_and::OCL_BitwiseAndFixture::(1280x720, 32FC4)|1132.065|244.877|4.62|
|Bitwise_and::OCL_BitwiseAndFixture::(1920x1080, 8UC1)|155.685|33.078|4.71|
|Bitwise_and::OCL_BitwiseAndFixture::(1920x1080, 32FC1)|635.253|137.482|4.62|
|Bitwise_and::OCL_BitwiseAndFixture::(1920x1080, 8UC3)|474.494|100.166|4.74|
|Bitwise_and::OCL_BitwiseAndFixture::(1920x1080, 32FC3)|1907.340|412.841|4.62|
|Bitwise_and::OCL_BitwiseAndFixture::(1920x1080, 8UC4)|635.538|134.544|4.72|
|Bitwise_and::OCL_BitwiseAndFixture::(1920x1080, 32FC4)|2552.666|556.397|4.59|
|Bitwise_and::OCL_BitwiseAndFixture::(3840x2160, 8UC1)|634.736|136.355|4.66|
|Bitwise_and::OCL_BitwiseAndFixture::(3840x2160, 32FC1)|2548.283|561.827|4.54|
|Bitwise_and::OCL_BitwiseAndFixture::(3840x2160, 8UC3)|1911.454|421.571|4.53|
|Bitwise_and::OCL_BitwiseAndFixture::(3840x2160, 32FC3)|7663.803|1677.289|4.57|
|Bitwise_and::OCL_BitwiseAndFixture::(3840x2160, 8UC4)|2543.983|562.780|4.52|
|Bitwise_and::OCL_BitwiseAndFixture::(3840x2160, 32FC4)|10211.693|2237.393|4.56|
|Bitwise_not::OCL_BitwiseNotFixture::(640x480, 8UC1)|22.341|4.811|4.64|
|Bitwise_not::OCL_BitwiseNotFixture::(640x480, 32FC1)|89.975|19.288|4.66|
|Bitwise_not::OCL_BitwiseNotFixture::(640x480, 8UC3)|67.237|14.643|4.59|
|Bitwise_not::OCL_BitwiseNotFixture::(640x480, 32FC3)|276.324|58.609|4.71|
|Bitwise_not::OCL_BitwiseNotFixture::(640x480, 8UC4)|89.587|19.554|4.58|
|Bitwise_not::OCL_BitwiseNotFixture::(640x480, 32FC4)|370.986|77.136|4.81|
|Bitwise_not::OCL_BitwiseNotFixture::(1280x720, 8UC1)|67.227|14.541|4.62|
|Bitwise_not::OCL_BitwiseNotFixture::(1280x720, 32FC1)|276.357|58.076|4.76|
|Bitwise_not::OCL_BitwiseNotFixture::(1280x720, 8UC3)|206.752|43.376|4.77|
|Bitwise_not::OCL_BitwiseNotFixture::(1280x720, 32FC3)|841.638|177.787|4.73|
|Bitwise_not::OCL_BitwiseNotFixture::(1280x720, 8UC4)|276.773|57.784|4.79|
|Bitwise_not::OCL_BitwiseNotFixture::(1280x720, 32FC4)|1127.740|237.472|4.75|
|Bitwise_not::OCL_BitwiseNotFixture::(1920x1080, 8UC1)|153.808|32.531|4.73|
|Bitwise_not::OCL_BitwiseNotFixture::(1920x1080, 32FC1)|627.765|129.990|4.83|
|Bitwise_not::OCL_BitwiseNotFixture::(1920x1080, 8UC3)|469.799|98.249|4.78|
|Bitwise_not::OCL_BitwiseNotFixture::(1920x1080, 32FC3)|1893.591|403.694|4.69|
|Bitwise_not::OCL_BitwiseNotFixture::(1920x1080, 8UC4)|627.724|129.962|4.83|
|Bitwise_not::OCL_BitwiseNotFixture::(1920x1080, 32FC4)|2529.967|540.744|4.68|
|Bitwise_not::OCL_BitwiseNotFixture::(3840x2160, 8UC1)|628.089|130.277|4.82|
|Bitwise_not::OCL_BitwiseNotFixture::(3840x2160, 32FC1)|2521.817|540.146|4.67|
|Bitwise_not::OCL_BitwiseNotFixture::(3840x2160, 8UC3)|1905.004|404.704|4.71|
|Bitwise_not::OCL_BitwiseNotFixture::(3840x2160, 32FC3)|7567.971|1627.898|4.65|
|Bitwise_not::OCL_BitwiseNotFixture::(3840x2160, 8UC4)|2531.476|540.181|4.69|
|Bitwise_not::OCL_BitwiseNotFixture::(3840x2160, 32FC4)|10075.594|2181.654|4.62|
|Bitwise_or::OCL_BitwiseOrFixture::(640x480, 8UC1)|22.566|5.076|4.45|
|Bitwise_or::OCL_BitwiseOrFixture::(640x480, 32FC1)|90.391|19.928|4.54|
|Bitwise_or::OCL_BitwiseOrFixture::(640x480, 8UC3)|67.758|14.740|4.60|
|Bitwise_or::OCL_BitwiseOrFixture::(640x480, 32FC3)|279.253|59.844|4.67|
|Bitwise_or::OCL_BitwiseOrFixture::(640x480, 8UC4)|90.296|19.802|4.56|
|Bitwise_or::OCL_BitwiseOrFixture::(640x480, 32FC4)|373.972|79.815|4.69|
|Bitwise_or::OCL_BitwiseOrFixture::(1280x720, 8UC1)|67.815|14.865|4.56|
|Bitwise_or::OCL_BitwiseOrFixture::(1280x720, 32FC1)|279.398|60.054|4.65|
|Bitwise_or::OCL_BitwiseOrFixture::(1280x720, 8UC3)|208.643|45.043|4.63|
|Bitwise_or::OCL_BitwiseOrFixture::(1280x720, 32FC3)|850.042|180.985|4.70|
|Bitwise_or::OCL_BitwiseOrFixture::(1280x720, 8UC4)|279.363|60.385|4.63|
|Bitwise_or::OCL_BitwiseOrFixture::(1280x720, 32FC4)|1134.858|243.062|4.67|
|Bitwise_or::OCL_BitwiseOrFixture::(1920x1080, 8UC1)|155.212|33.155|4.68|
|Bitwise_or::OCL_BitwiseOrFixture::(1920x1080, 32FC1)|634.985|134.911|4.71|
|Bitwise_or::OCL_BitwiseOrFixture::(1920x1080, 8UC3)|474.648|100.407|4.73|
|Bitwise_or::OCL_BitwiseOrFixture::(1920x1080, 32FC3)|1912.049|414.184|4.62|
|Bitwise_or::OCL_BitwiseOrFixture::(1920x1080, 8UC4)|635.252|132.587|4.79|
|Bitwise_or::OCL_BitwiseOrFixture::(1920x1080, 32FC4)|2544.471|560.737|4.54|
|Bitwise_or::OCL_BitwiseOrFixture::(3840x2160, 8UC1)|634.574|134.966|4.70|
|Bitwise_or::OCL_BitwiseOrFixture::(3840x2160, 32FC1)|2545.129|561.498|4.53|
|Bitwise_or::OCL_BitwiseOrFixture::(3840x2160, 8UC3)|1910.900|419.365|4.56|
|Bitwise_or::OCL_BitwiseOrFixture::(3840x2160, 32FC3)|7662.603|1685.812|4.55|
|Bitwise_or::OCL_BitwiseOrFixture::(3840x2160, 8UC4)|2548.971|560.787|4.55|
|Bitwise_or::OCL_BitwiseOrFixture::(3840x2160, 32FC4)|10201.407|2237.552|4.56|
|Bitwise_xor::OCL_BitwiseXorFixture::(640x480, 8UC1)|22.718|4.961|4.58|
|Bitwise_xor::OCL_BitwiseXorFixture::(640x480, 32FC1)|91.496|19.831|4.61|
|Bitwise_xor::OCL_BitwiseXorFixture::(640x480, 8UC3)|67.910|15.151|4.48|
|Bitwise_xor::OCL_BitwiseXorFixture::(640x480, 32FC3)|279.612|59.792|4.68|
|Bitwise_xor::OCL_BitwiseXorFixture::(640x480, 8UC4)|91.073|19.853|4.59|
|Bitwise_xor::OCL_BitwiseXorFixture::(640x480, 32FC4)|374.641|79.155|4.73|
|Bitwise_xor::OCL_BitwiseXorFixture::(1280x720, 8UC1)|67.704|15.008|4.51|
|Bitwise_xor::OCL_BitwiseXorFixture::(1280x720, 32FC1)|279.229|60.088|4.65|
|Bitwise_xor::OCL_BitwiseXorFixture::(1280x720, 8UC3)|208.156|44.426|4.69|
|Bitwise_xor::OCL_BitwiseXorFixture::(1280x720, 32FC3)|849.501|180.848|4.70|
|Bitwise_xor::OCL_BitwiseXorFixture::(1280x720, 8UC4)|279.642|59.728|4.68|
|Bitwise_xor::OCL_BitwiseXorFixture::(1280x720, 32FC4)|1129.826|242.880|4.65|
|Bitwise_xor::OCL_BitwiseXorFixture::(1920x1080, 8UC1)|155.585|33.354|4.66|
|Bitwise_xor::OCL_BitwiseXorFixture::(1920x1080, 32FC1)|634.090|134.995|4.70|
|Bitwise_xor::OCL_BitwiseXorFixture::(1920x1080, 8UC3)|474.931|99.598|4.77|
|Bitwise_xor::OCL_BitwiseXorFixture::(1920x1080, 32FC3)|1910.519|413.138|4.62|
|Bitwise_xor::OCL_BitwiseXorFixture::(1920x1080, 8UC4)|635.026|135.155|4.70|
|Bitwise_xor::OCL_BitwiseXorFixture::(1920x1080, 32FC4)|2560.167|560.838|4.56|
|Bitwise_xor::OCL_BitwiseXorFixture::(3840x2160, 8UC1)|634.893|134.883|4.71|
|Bitwise_xor::OCL_BitwiseXorFixture::(3840x2160, 32FC1)|2548.166|560.831|4.54|
|Bitwise_xor::OCL_BitwiseXorFixture::(3840x2160, 8UC3)|1911.392|419.816|4.55|
|Bitwise_xor::OCL_BitwiseXorFixture::(3840x2160, 32FC3)|7646.634|1677.988|4.56|
|Bitwise_xor::OCL_BitwiseXorFixture::(3840x2160, 8UC4)|2560.637|560.805|4.57|
|Bitwise_xor::OCL_BitwiseXorFixture::(3840x2160, 32FC4)|10227.044|2249.458|4.55|

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
1668203a1c6474b8368e27c55abc10ae7f17c841,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-28 06:55:22+00:00,Added branch with variadic version of Trust tuple
05e48605a0aea00d3a89b9ab5e25cdf89568aa28,Danial Javady,122740063+ZelboK@users.noreply.github.com,2024-05-28 06:54:08+00:00,"Merge pull request #25412 from ZelboK:update-cudnn-to-9

Refactor DNN module to build with cudnn 9 #25412

A lot of APIs that are currently being used in the dnn module have been removed in cudnn 9. They were deprecated in 8. 
This PR updates said code accordingly to the newer API.

Some key notes:
1) This is my first PR. I am new to openCV. 
2) `opencv_test_core` tests pass
3) On a 3080, cuda 12.4(should be irrelevant since I didn't build the `opencv_modules`, gcc 11.4, WSL 2. 
4) For brevity I will avoid including macro code that will allow for older versions of cudnn to build.

I was unable to get the tests working for `opencv_test_dnn` and `opencv_perf_dnn`. The errors I get are of the following: 
```
 OpenCV tests: Can't find required data file: dnn/onnx/conformance/node/test_reduce_prod_default_axes_keepdims_example/model.onnx in function 'findData'
"" thrown in the test body.
```
So before I spend more time investigating I was hoping to get a maintainer to point me in the right direction here. I would like to run these tests and confirm things are working as intended. I may have missed some details.


### Pull Request Readiness Checklist

relevant issue
(https://github.com/opencv/opencv/issues/24983

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [ ] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
b6593517c4d2cd9f3d9e176e82ce43e6d0085e3e,Kumataro,Kumataro@users.noreply.github.com,2024-05-27 14:33:43+00:00,"Merge pull request #25647 from Kumataro:fix25646

imgcodecs: support IMWRITE_JPEG_LUMA/CHROMA_QUALITY with internal libjpeg-turbo #25647

Close #25646

- increase JPEG_LIB_VERSION for internal libjpeg-turbo from 62 to 70
- add log when using IMWRITE_JPEG_LUMA/CHROMA_QUALITY with JPEG_LIB_VERSION<70
- add document IMWRITE_JPEG_LUMA/CHROMA_QUALITY requests JPEG_LIB_VERSION >= 70

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
c5976f78659a836cc6f747083f7ee5b465d2db18,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-27 12:55:07+00:00,"Merge pull request #25641 from vrabaud:lsh

Prevent signed integer overflow in LshTable"
f1890e384b535160c850b4b788ee4e2e52133be4,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-27 10:32:08+00:00,"Merge pull request #25650 from sturkmen72:libjpeg-turbo

minor cosmetic changes"
8955a2757783a5f08bc8539b143f6b91af459351,Suleyman TURKMEN,sturkmen@hotmail.com,2024-05-26 19:50:47+00:00,minor cosmetic changes
1fa96b161ff2525f446d829db06b6eb59850cdc4,Rostislav Vasilikhin,savuor@gmail.com,2024-05-25 10:12:03+00:00,"Merge pull request #25616 from savuor:rv/yuv_docs

YUV codes for cvtColor: descriptions added #25616

This PR contains descriptions for various RGB <-> YUV color conversion codes as well as detailed comments in the source code.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
d97df262f6d25971e05c19731179996041f9e07f,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-25 10:03:12+00:00,"Merge pull request #25623 from asmorkalov:as/jpegturbo_3.0.3

Libjpeg-turbo update to version 3.0.3 #25623

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
7b31cc731416c66993ca90636d31e9a6447f03e5,John Stechschulte,john.l.stechschulte@gmail.com,2024-05-25 08:28:13+00:00,"Merge pull request #24897 from JStech:fix-handeye

Fix handeye #24897

Fixes to the hand-eye calibration methods, from #24871.

The Tsai method is sensitive to poses separated by small rotations, so I filter those out.

The Horaud and Daniilidis methods use quaternions (and dual quaternions), where $q$ and $-q$ represent the same transform.
However, these methods depend on the gripper motion and camera motion having the same sign for the real part.
The fix was simply to multiply the (dual) quaternions by -1 if their real part is negative.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] ~~The feature is well documented and sample code can be built with the project CMake~~ N/A"
cc49aee04e36b01f3b775863b7b5c633f06b41b9,Rostislav Vasilikhin,savuor@gmail.com,2024-05-25 08:25:50+00:00,"Merge pull request #25634 from savuor:rv/boxfilter_tests

Tests for cvSmooth -> tests for boxFilter #25634

fixes #25448

### Motivation
The obsolete function `cvSmooth` has two modes in which it calls `cv::boxFilter()` inside with and without normalization.
This function is covered by tests exactly for that modes.
This means that by replacing `cvSmooth` call by `cv::boxFilter()` we will leave the coverage untouched (but more obvious) and remove that obsolete function from tests.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
b267f1791c6901addd97570a222995b93934ac6f,Rostislav Vasilikhin,savuor@gmail.com,2024-05-25 08:23:31+00:00,"Merge pull request #25633 from savuor:rv/rotate_tests

Tests for cv::rotate() added #25633

fixes #25449

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
f17b122512326ca51b07c2ba23bb174b4273a6df,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-25 08:10:13+00:00,"Merge pull request #25638 from bebuch:patch-2

Support VS 2022 17.1x.y in OpenCVDetectCXXCompiler.cmake"
8b2783e9ffe3b6a5f9a84b34cc72da0c71d41a3a,Christine Poerschke,6458642+cpoerschke@users.noreply.github.com,2024-05-25 07:53:33+00:00,replace lena.jpg in find-existing-file tests
7e3f6875c166ffe92fc214c17bd8100d59b29a0e,Vincent Rabaud,vrabaud@google.com,2024-05-24 21:45:53+00:00,"Prevent signed integer overflow in LshTable

This change keeps everything as size_t and the expression is valid
because maxk_block > 0 in hte loop."
ba28b7d6dfe5d4927fc5db46afeffdc3ba46b05b,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-24 17:49:57+00:00,"Merge pull request #25636 from FantasqueX:use-left-arrow-1

Use leftarrow in color conversion Doc"
f85818ba6f9031c450475a7453dee0acce31a881,Benjamin Buch,bebuch@users.noreply.github.com,2024-05-24 09:10:09+00:00,"Support VS 2022 17.1x.y in OpenCVDetectCXXCompiler.cmake

With 17.10.0 the MSVC toolset was set to 19.40.x which breaks the compatibility test in the OpenCV's CMake Config files."
28c3000f6229756590429a2104edbd1b734ff713,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-24 07:28:16+00:00,"Merge pull request #25629 from arobase-che:fix-opencv.js-compilation-memory-init-file

Fix the compilation of OpenCV.js by deleting the option --memory-init-file of em++"
6bee2facf3e3def81fb140ba5650cf62a8e938f3,Letu Ren,fantasquex@gmail.com,2024-05-24 06:56:50+00:00,Use leftarrow in color conversion Doc
f1aef892bfe7b30255050275fdb80d2ec108a9a4,Alexander Alekhin,alexander.a.alekhin@gmail.com,2024-05-23 16:54:29+00:00,Merge pull request #25619 from opencv-pushbot:gitee/alalek/update_ffmpeg_4.x
f5793d26b7f362f8accefbaa7a241b4a5e0e2c5b,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-23 15:24:37+00:00,"Merge pull request #25632 from bebuch:patch-1

Support VS 2022 17.1x.y"
de3eb0ec5f0e27b74ea070ebc34ac4901119f583,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-23 14:52:43+00:00,"Merge pull request #25626 from asmorkalov:as/HAL_lut_size

Fixed width and height order in HAL call for LUT"
4824354e4673a58d8620975ce98bb93d13cf7220,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-23 14:14:01+00:00,"Merge pull request #25631 from asmorkalov:as/png_build_fix

Fixed CMake Missing variable is: CMAKE_ASM_COMPILE_OBJECT in PNG build #25631

Error message with `-DBUILD_PNG=ON` on ARM64:
```
-- Configuring done
CMake Error: Error required internal CMake variable not set, cmake may not be built correctly.
Missing variable is:
CMAKE_ASM_COMPILE_OBJECT
-- Generating done
CMake Generate step failed.  Build files cannot be regenerated correctly.
```

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
6fb3f6333150a777e835fc7c48e49750591bf7fe,Benjamin Buch,bebuch@users.noreply.github.com,2024-05-23 14:05:19+00:00,"Support VS 2022 17.1x.y

With 17.10.0 the MSVC toolset was set to 19.40.x which breaks the compatibility test in the OpenCV's CMake Config files."
16b5096ed079d34296aa22277766ee85f403b2de,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-23 13:55:44+00:00,"Merge pull request #25618 from asmorkalov:as/kleidicv_0.1.0

KleidiCV HAL update to version 0.1.0. #25618

Original integration PR: https://github.com/opencv/opencv/pull/25443

Force the library for testing with CI

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
9f1559595bc476099e448d931a6744065152945a,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-23 09:51:16+00:00,"Merge pull request #25627 from vrabaud:tiff

Disambiguate cv::format"
f8ad6eb71bd4b615b1311efc9c2c9620fbfec6fc,ache,ache@ache.one,2024-05-23 08:59:09+00:00,Delete option --memory-init-file of em++
500207785ad8e8327a68dffe1edc8549c589e3b7,Vincent Rabaud,vrabaud@google.com,2024-05-23 08:41:03+00:00,"Disambiguate cv::format

Otherwise, this test does not compile with C++20, which includes
std::format."
f85014534f2126b0878e0658c547f9cbce0e0de7,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-23 07:30:33+00:00,Fixed width and height order in HAL call for LUT.
f2c48e5e9787850840535de33527da3c3a9d0e6a,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-22 19:24:13+00:00,"Merge pull request #25622 from lackhole:remove-unicode-character

Replace non-ascii character in comment"
e765c9f9c84437b0d3d3457e7b7f4aa358b7e0c1,Suleyman TURKMEN,sturkmen@hotmail.com,2024-05-22 12:45:10+00:00,"Merge pull request #25580 from sturkmen72:libpng_1_6_43

3rdparty: update libpng 1.6.43 #25580

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
28d029c15863ada0d0db3d41b64c00e9887399ab,lackhole,cosgenio@gmail.com,2024-05-22 11:01:54+00:00,Replace non-ascii character
5696413bbc4594da7df758df8af82ed78ac9326f,Alexander Alekhin,alexander.a.alekhin@gmail.com,2024-05-22 08:53:39+00:00,ffmpeg/4.x: update FFmpeg wrapper 2024.05
8393885a39dac1e650bf5d0aaff84c04ad8bcdd3,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-21 13:58:41+00:00,"Merge pull request #25615 from asmorkalov:update_version_4.10.0-pre

 pre: OpenCV 4.10.0 (version++)"
49f80cb3c42a91a8baa966b38664bdae4296db22,Yuantao Feng,yuantao.feng@opencv.org.cn,2024-05-21 13:58:16+00:00,"Merge pull request #24804 from fengyuentau:fix_lapack_warnings

core: try to solve warnings caused by Apple's new LAPACK interface #24804

Resolves https://github.com/opencv/opencv/issues/24660

Apple's BLAS documentation: https://developer.apple.com/documentation/accelerate/blas?language=objc

New interface since macOS >= 13.3, iOS >= 16.4.

Todo:

- [x] Detect macOS version.
- [x] ~Detect iOS versions (major and minor version).~ No calling of Accelerate New LAPACK on iOS.
- [x] Solve calling `cblas_cgemm` and `cblas_zgemm`.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
e52540162fe40a341fc468b90049139b3523a87d,HAN Liutong,liutong2020@iscas.ac.cn,2024-05-21 11:10:19+00:00,"Merge pull request #25586 from hanliutong:rvv-64f

Fix v_round and enable unit tests for scalable universal intrinsic 64F type. #25586

This may be a legacy issue from the previous PR #24325. I don't quite remember why the float 64 part of the unit test was not enabled at that time.

Whatever, this patch enables the unit tests for scalable 64F type , and makes the necessary modifications to the RVV backend to make the tests pass.

This patch is compiled by GCC 14 and LLVM 17 &18, and tested on QEMU and k230.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [ ] I agree to contribute to the project under Apache 2 License.
- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [ ] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
0b39a51be8777de8e9a7c47d58d8cc596afa4f9b,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-21 08:33:30+00:00, pre: OpenCV 4.10.0 (version++).
c71d4952733a0e1dd1f88ac87066c802f1119d97,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-20 16:57:07+00:00,"Merge pull request #25611 from asmorkalov:as/openjpeg_2.5.2

OpenJPEG update to 2.5.2."
40faced6c18baa6fbc7c1fbd409d59d6ddecc74f,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-20 10:44:43+00:00,OpenJPEG update to 2.5.2.
23ba63b0bea0fbf71d3a38836ae92d9ee9d0b532,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-20 10:19:05+00:00,"Merge pull request #25574 from savuor:rv/hal_sub8x32f

HAL for sub8x32f added"
d95ff3ac040245567da1fde60c528e457899b29d,Rostislav Vasilikhin,rostislav.vasilikhin@opencv.ai,2024-05-12 23:56:35+00:00,HAL for sub8x32f added
69af621ef63a508ab9d1abbfa259a6876622e71e,Rostislav Vasilikhin,savuor@gmail.com,2024-05-20 07:43:18+00:00,"Merge pull request #25506 from savuor:rv/hal_mul16

HAL mul8x8to16 added #25506

Fixes #25034

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
83e32c4d37a8ddee41e7ecf5c9b42c6caa970a1d,Rostislav Vasilikhin,savuor@gmail.com,2024-05-20 07:42:17+00:00,"Merge pull request #25511 from savuor:rv/hal_projectpoints

HAL for projectPoints() added #25511

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
e05ad56f6e7fa6dfcb8bc9962db9234a093679e8,Cristian Dobre,69245609+cristidbr-adapta@users.noreply.github.com,2024-05-20 06:53:22+00:00,"Merge pull request #24903 from cristidbr-adapta:feature-barcode-detector-parameters

Feature barcode detector parameters #24903

Attempt to solve #24902 without changing the default detector behaviour. 
Megre with extra: https://github.com/opencv/opencv_extra/pull/1150

**Introduces new parameters and methods to `cv::barcode::BarcodeDetector`**.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
6350bfbf79562f257b58843b31e88a3245ee31a4,Maksim Shabunin,maksim.shabunin@gmail.com,2024-05-17 12:01:05+00:00,"Merge pull request #25564 from mshabunin:cleanup-imgproc-2

imgproc: C-API cleanup, drawContours refactor #25564

Changes:
* moved several macros from types_c.h to cvdef.h (assuming we will continue using them)
* removed some cases of C-API usage in _imgproc_ module (`CV_TERMCRIT_*` and `CV_CMP_*`)
* refactored `drawContours` to use C++ API instead of calling `cvDrawContours` + test for filled contours with holes (case with non-filled contours is simpler and is covered in some other tests)

#### Note:
There is one case where old drawContours behavior doesn't match the new one - when `contourIdx == -1` (means ""draw all contours"") and `maxLevel == 0` (means draw only selected contours, but not what is inside).

From the docs:
> **contourIdx**	Parameter indicating a contour to draw. If it is negative, all the contours are drawn.

> **maxLevel**	Maximal level for drawn contours. If it is 0, only the specified contour is drawn. If it is 1, the function draws the contour(s) and all the nested contours. If it is 2, the function draws the contours, all the nested contours, all the nested-to-nested contours, and so on. This parameter is only taken into account when there is hierarchy available.


Old behavior - only one first contour is drawn:
![actual_screenshot_08 05 2024](https://github.com/opencv/opencv/assets/3304494/d0ae1d64-ddad-46bb-8acc-6f696874f71b)
a
New behavior (also expected by the test) - all contours are drawn:
![expected_screenshot_08 05 2024](https://github.com/opencv/opencv/assets/3304494/57ccd980-9dde-4006-90ee-19d6ce76912a)"
8aa129dce1d3cae5857db30c166b40e50751003b,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-17 09:55:51+00:00,"Merge pull request #25603 from asmorkalov:as/skip_vulkan_concat

Skip Test_Caffe_layers.Concat with Vulkan due to sporadic failures"
5f509e2ec1e70c08671285e8b9497b95f0bb5773,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-17 08:44:20+00:00,Skip Test_Caffe_layers.Concat with Vulkan due to sporadic failures.
5e7887897a0e74afe76f37b6604ac865e8016ddb,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-17 08:37:12+00:00,"Merge pull request #25525 from sturkmen72:png-spng-test

improvements on tests of imagecodecs module"
bc0618b688bde681a8caa8619a55766fc9e6a32f,Yuantao Feng,yuantao.feng@opencv.org.cn,2024-05-17 08:07:05+00:00,"Merge pull request #25582 from fengyuentau:dnn/dump_pbtxt

Current net exporter `dump` and `dumpToFile` exports the network structure (and its params) to a .dot file which works with `graphviz`. This is hard to use and not friendly to new user. What's worse, the produced picture is not looking pretty.
dnn: better net exporter that works with netron #25582

This PR introduces new exporter `dumpToPbtxt` and uses this new exporter by default with environment variable `OPENCV_DNN_NETWORK_DUMP`. It mimics the string output of a onnx model but modified with dnn-specific changes, see below for an example.

![image](https://github.com/opencv/opencv/assets/17219438/0644bed1-da71-4019-8466-88390698e4df)

## Usage

Call `cv::dnn::Net::dumpToPbtxt`:

```cpp
TEST(DumpNet, dumpToPbtxt) {
    std::string path = ""/path/to/model.onnx"";
    auto net = readNet(path);

    Mat input(std::vector<int>{1, 3, 640, 480}, CV_32F);
    net.setInput(input);

    net.dumpToPbtxt(""yunet.pbtxt"");
}
```

Set `export OPENCV_DNN_NETWORK_DUMP=1`

```cpp
TEST(DumpNet, env) {
    std::string path = ""/path/to/model.onnx"";
    auto net = readNet(path);

    Mat input(std::vector<int>{1, 3, 640, 480}, CV_32F);
    net.setInput(input);

    net.forward();
}
```

---

Note:
- `pbtxt` is registered as one of the ONNX model suffix in netron. So you can see `module: ai.onnx` and such in the model.
- We can get the string output of an ONNX model with the following script

```python
import onnx
net = onnx.load(""/path/to/model.onnx"")
net_str = str(net)
file = open(""/path/to/model.pbtxt"", ""w"")
file.write(net_str)
file.close()
```

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
00440477826a0e7bceaeeaede8351eada5caf38c,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-17 07:48:40+00:00,"Merge pull request #25598 from asmorkalov:as/tables_range_check_core

Check range for type-dependant function tables #25598

Address https://github.com/opencv/opencv/issues/24703

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
41f08988b4c9756bd528bb6cd0cca0ce104b4edb,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-16 15:43:36+00:00,"Merge pull request #25585 from FantasqueX:add-policy-0148

set policy 0148 explicitly"
f2d6527a4b429c79a05d6e78dbd6ac6f0cb004f7,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-16 14:03:44+00:00,"Merge pull request #25596 from asmorkalov:as/ci_ubuntu24.04

Added Ubuntu 24.04 to regular CI."
d29ad2fb719227d2647466b65a928eac6a907c13,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-16 12:29:06+00:00,"Merge pull request #25443 from asmorkalov:as/kleidicv_hal

Integrate ARM KleidiCV as OpenCV HAL #25443

The library source code with license: https://gitlab.arm.com/kleidi/kleidicv/

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
5f3a505a2da2b71c1bdd2ddbd9eb9ba62bf17f5a,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-16 08:17:35+00:00,Added Ubuntu 24.04 to regular CI.
78ed6de518b60a2e40c74b86ebd76203998d5b50,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-16 05:46:56+00:00,"Merge pull request #25594 from LaurentBerger:I25587

typo"
7d6b6161ccde3f1da9e653f2be4897b6e40b91b9,Suleyman TURKMEN,sturkmen@hotmail.com,2024-05-15 19:24:21+00:00,Update imgcodecs tests
7713c84465b1bbfea112d87ad61312b190a1505d,CNOCycle,24318472+CNOCycle@users.noreply.github.com,2024-05-15 17:07:25+00:00,"Merge pull request #25297 from CNOCycle:tflite/transpose

Support Transpose op in TFlite #25297

**Merge with extra**: https://github.com/opencv/opencv_extra/pull/1168

The purpose of this PR is to introduce support for the Transpose op in TFlite format and to add a shape comparison between the output tensors and the references. In some occasional cases, the shape of the output tensor is `[1,4,1,1]`, while the shape of the reference tensor is `[1,4]`. Consequently, the norm check incorrectly reports that the test has passed, as the residual is zero.

Below is a Python script for generating testing data. The generated data can be integrated into the repo `opencv_extra`.

```python
import numpy as np
import tensorflow as tf

PREFIX_TFL = '/path/to/opencv_extra/testdata/dnn/tflite/'

def generator(input_tensor, model, saved_name):

    # convert keras model to .tflite format
    converter = tf.lite.TFLiteConverter.from_keras_model(model)
    #converter.optimizations = [tf.lite.Optimize.DEFAULT]
    converter.optimizations = [None]
    tflite_model = converter.convert()
    with open(f'{PREFIX_TFL}/{saved_name}.tflite', 'wb') as f:
        f.write(tflite_model)

    # save the input tensor to .npy
    if input_tensor.ndim == 4:
        opencv_tensor = np.transpose(input_tensor, (0,3,1,2))
    else:
        opencv_tensor = input_tensor
    opencv_tensor = np.copy(opencv_tensor, order='C').astype(np.float32)
    np.save(f'{PREFIX_TFL}/{saved_name}_inp.npy', opencv_tensor)

    # generate output tenosr and save it to .npy
    mat_out = model(input_tensor).numpy()
    mat_out = np.copy(mat_out, order='C').astype(np.float32)
    if mat_out.ndim == 4:
        mat_out = np.transpose(mat_out, (0,3,1,2))
    interpreter = tf.lite.Interpreter(model_content=tflite_model)
    out_name = interpreter.get_output_details()[0]['name']
    np.save(f'{PREFIX_TFL}/{saved_name}_out_{out_name}.npy', mat_out)

def build_transpose():

    model_name = ""keras_permute""
    mat_in = np.array([[[1,2,3], [4,5,6]]], dtype=np.float32)

    model = tf.keras.Sequential()
    model.add(tf.keras.Input(shape=(2,3)))
    model.add(tf.keras.layers.Permute((2,1)))
    model.summary()

    generator(mat_in, model, model_name)

if __name__ == '__main__':
    build_transpose()
```

### Pull Request Readiness Checklist

- [x] I agree to contribute to the project under Apache 2 License.
- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [X] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [X] The feature is well documented and sample code can be built with the project CMake"
50091091673588a1625683b2868e8c79e3f3e6be,unknown,3591626+LaurentBerger@users.noreply.github.com,2024-05-15 14:16:07+00:00,typo
76d9f7aaeb8c9ba8aea80bdb155b60c78da1e309,Laurent Berger,laurent.berger@univ-lemans.fr,2024-05-15 14:08:52+00:00,"Merge pull request #25591 from LaurentBerger:I25589

Remove dnn::layer::allocate in doc #25591

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work #25589 
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
68581e7b4af44e374de99117ad886c4273c64714,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-15 13:41:13+00:00,"Merge pull request #25592 from asmorkalov:as/gapi_disable_steaming_again

Disable more streaming test in G-API due to instability."
c034c46e6945fa20cf192868628a01d58dae243b,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-15 12:41:23+00:00,Disable more streaming test in G-API due to instability.
4d4def2d36e85557c7e57bd678f46a3cb5b8f26b,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-15 11:56:00+00:00,"Merge pull request #25590 from asmorkalov:as/restore_highgui_test

Restored and extended Highgui test logic for small windows."
2e07ec1f8723a7f489b2671bf69cdc1d25f8f948,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-15 09:47:22+00:00,Restored and extended Highgui test logic for small windows.
47a6ffb73c5f921a6a5941568258fcd2b0825d3b,Kumataro,Kumataro@users.noreply.github.com,2024-05-15 08:00:46+00:00,"Merge pull request #25561 from Kumataro:fix25560

highgui: wayland: expand image width if title bar cannot be shown

Close #25560

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
03507e06b40450244a0489abba8e989d9b337d18,alexlyulkov,alex.lyulkov@gmail.com,2024-05-14 14:41:19+00:00,"Merge pull request #25518 from alexlyulkov:al/fixed-gemm-openvino

Fixed OpenVINO gemm layer #25518

Fixed OpenVINO gemm layer
The problem was that our layer didn't properly handle all the possible gemm options in OpenVINO mode
Fixes #25472

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
7fc8a490f8554939cd44e644075c45facde13757,Letu Ren,fantasquex@gmail.com,2024-05-14 14:22:05+00:00,"set policy 0148 explicitly

Currently, there is an warning when CMake >= 3.27,
CMake Warning (dev) at cmake/OpenCVUtils.cmake:144 (find_package):
  Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules
  are removed.  Run ""cmake --help-policy CMP0148"" for policy details.  Use
  the cmake_policy command to set the policy and suppress this warning.

This patch sets policy 0148 explicitly to suppress the warning."
f4e5438401f59386fc2962e2e3521b817797f331,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-14 14:19:41+00:00,"Merge pull request #25566 from asmorkalov:as/moments_documentation

Synchornized cv::moments documentation with actual implementation."
02ad8c284f3f3c50360526a5292af1e74da531a9,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-14 14:16:26+00:00,"Merge pull request #25577 from FantasqueX:fix-zlib-ng-version-parse-1

Fix zlib-ng version parse"
58e007e18340a1908e13a0071df641c87fdcbee8,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-14 13:43:02+00:00,"Merge pull request #25583 from mshabunin:fix-emd-32bit

imgproc: fix allocation issue in EMD"
1614b8df4e41aba2c368d936f9a5de6a07658a00,Maksim Shabunin,maksim.shabunin@gmail.com,2024-05-14 09:45:14+00:00,imgproc: fix allocation issue in EMD
3c7e94b27594c8bdfdd9a9541da5f1580246279c,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-13 12:24:03+00:00,"Merge pull request #25576 from mshabunin:fix-env-doc

doc: fix env change method in the environment reference"
023d80549299d60d164807663b93d4418540c05b,Letu Ren,fantasquex@gmail.com,2024-05-13 11:32:00+00:00,"Fix zlib-ng version parse

Currently, zlib-ng version is 'zlib ver #define ZLIB_VERSION ""1.3.0.zlib-ng""'. Because ocv_parse_header_version only accepts dot and numbers and doesn't accepts 1.3.0.zlib-ng. This patch changes ocv_parse_header_version to accept all characters between parentheses."
8dc9ff5624fafc4bde69b108ce6e4a468ae3a294,Kumataro,Kumataro@users.noreply.github.com,2024-05-13 11:26:24+00:00,"Merge pull request #25551 from Kumataro:fix25550

highgui: wayland: fix to pass highgui test #25551

Close #25550

- optimize Mat to XRGB8888 conversion with OpenCV functions
  - extend to support CV_8S/16U/16S/32F/64F
  - extend to support 1/4 channels
- fix to update value timing
 - initilize slider_ value if value is not nullptr.
 - Update user-ptr value and call on_change() function if cv_wl_trackbar::draw() is not called.
- Update usage of WAYLAND/XDG macro to avoid reference undefined macro.
- Update documents

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
78c9793d5b30ac3faaeed8cc633d2661016870de,Maksim Shabunin,maksim.shabunin@gmail.com,2024-05-13 11:16:31+00:00,doc: fix env change method in the environment reference
1d9a4120fa7dbeab6316c255d283c16cd006a35e,Rostislav Vasilikhin,savuor@gmail.com,2024-05-09 05:37:55+00:00,"Merge pull request #25565 from savuor:rv/hal_eq_hist

Merge pull request #25565 from savuor/rv/hal_eq_hist

HAL for equalizeHist() added #25565

fixes #25530

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
55eebe81c3bd8a7145a329efc5aaaa423da23098,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-09 05:30:36+00:00,Synchornized cv::moments documentation with actual implementation.
1f1ba7e40276043fe363102d34a0781920ff29f3,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-08 15:57:02+00:00,"Merge pull request #25563 from asmorkalov:as/HAL_min_max_idx

Transform offset to indeces for MatND in minMaxIdx HAL #25563

Address comments in https://github.com/opencv/opencv/pull/25553

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
5bd64e09a360e9fa342fbd951a3635f065bc478e,Rostislav Vasilikhin,savuor@gmail.com,2024-05-08 14:45:08+00:00,"Merge pull request #25554 from savuor:rv/hal_lut

Merge pull request #25554 from savuor:rv/hal_lut

HAL for LUT added #25554

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
faa259ab344f247c88bd9c4259f77aff3a27aa49,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-07 17:46:17+00:00,"Merge pull request #25553 from asmorkalov:as/HAL_min_max_idx

Fix HAL interface for hal_ni_minMaxIdx #25553

Fixes https://github.com/opencv/opencv/issues/25540

The original implementation call HAL with the same parameters independently from amount of channels. The patch uses HAL correctly for the case cn > 1.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
a9e489f149e24c52edcaaa40c12e7e2adff5d305,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-07 16:38:06+00:00,"Merge pull request #25558 from asmorkalov:as/moments_sanity

Tune sanity threshold in Moments performance test for Android aarch64"
392fd4edd1cde889b65b5cf5b886ec3d950d139c,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-07 15:24:43+00:00,Tune sanity threshold in Moments performance test for Android aarch64.
ba65d2eb0d83e6c9567a2534f8994cd4484a1635,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-07 06:01:50+00:00,"Merge pull request #25549 from mshabunin:fix-cap-images-noise

videoio: decreased log level for failed backends in capture and writer open"
8bc90a4bff803e2fa1b74325f25c20d8cdd81afe,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-07 05:58:07+00:00,"Merge pull request #25484 from mshabunin:bounding-rect-alignment

imgproc: improved test for boundingRect"
71271614263facf6daa4e90e549fd42a6869f01e,Maksim Shabunin,maksim.shabunin@gmail.com,2024-05-06 17:43:52+00:00,videoio: decreased log level for failed backends in VideoCapture and VideoWriter open
26a5730f0d36f547a6eaf39b1e15786ea3f0d039,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-06 08:08:18+00:00,"Merge pull request #25542 from mshabunin:fix-disable-diagram

doc: disable inheritance graphs"
a4486c0e20950785371cbd74bd5231c15ae71bc2,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-06 05:39:00+00:00,"Merge pull request #25541 from mshabunin:fix-numpy2x-test

python: adapt test to NumPy 2.x"
70d333d3368809500da029e3f1b07b3e27231409,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-06 05:19:43+00:00,"Merge pull request #25483 from asmorkalov:as/HAL_meanStdDev

HAL API for meanStdDev"
c43957cbece8e8fcad32077488edaf99e9ad63c3,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-06 05:16:51+00:00,"Merge pull request #25538 from asmorkalov:as/resnet_optional

Made fcn-resnet50-12.onnx model optional."
4081a309bf88ac49325cee944e7d20ba76b8d26a,Maksim Shabunin,maksim.shabunin@gmail.com,2024-05-03 19:09:33+00:00,doc: disabled inheritance graphs
a8df49f1704e3079c07fde237bad73163f3e4ff9,Maksim Shabunin,maksim.shabunin@gmail.com,2024-05-03 19:09:19+00:00,doc: fixed modern Javadoc issue
c4ce94232b79781059b6c93ae714f1b5473775f5,Maksim Shabunin,maksim.shabunin@gmail.com,2024-04-24 12:23:57+00:00,imgproc: fixed alignment issue and improved test for boundingRect
af4531b3789d959b802c39b1753beb0f32dd63fc,Maksim Shabunin,maksim.shabunin@gmail.com,2024-05-03 17:10:41+00:00,python: adapt test to NumPy 2.x
b94cb5bc68b77d38d30c3b81c185f3fdcdcc9ea9,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-03 09:51:57+00:00,HAL interface for meanStdDev.
d8e18f4576654492c78125bafdf5179692aa44ad,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-03 13:14:22+00:00,Made fcn-resnet50-12.onnx model optional.
75f3f0fac8c48c37a6ec4ff1d4c54ddd09ee32de,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-03 11:44:31+00:00,"Merge pull request #25526 from NlSEMONO:patch-1

Fixed a typo in text_detection.cpp"
ac9a858377a51512d9ebf12d89153b024abb7c73,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-03 10:16:56+00:00,"Merge pull request #25524 from alexlyulkov:al/openvino-layers

Added more OpenVINO layers to dnn"
6e5a53c37a6fd9327b708542a22b84e98d6499ee,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-03 09:34:51+00:00,"Merge pull request #25532 from asmorkalov:as/HAL_moments_bug

Fix moments integration to OpenCV HAL"
d9555dbdd1802ee78c104372f6f03f69f9b951fc,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-03 09:33:36+00:00,"Merge pull request #25535 from asmorkalov:as/convertfp16_imgcodecs

Got rid of deprecated convertFp16 in imgcodecs module."
c539cfd31a69218c4840ba23906dc026d14879fb,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-03 08:13:13+00:00,"Merge pull request #25435 from WanliZhong:fcn2onnx

change fcn8s-heavy-pascal tests from caffe to onnx"
9fe5615f2fe6aa7a3f0f676d7bbd5229d3ade087,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-03 08:05:08+00:00,Got rid of deprecated convertFp16 in imgcodecs module.
6bf758ecc497bb532dfd1722d87aacf1bd530138,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-03 07:55:25+00:00,"Merge pull request #24782 from FantasqueX:4.x-zlib-ng

Add zlib-ng as an alternative zlib implementation"
02c3132f02ea063dd4a8e60ab65002e6ea41a715,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-03 05:40:43+00:00,Fix moments integration to OpenCV HAL.
7ea4364c63aa8ecde844fc45ff61d2f60c746c17,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-03 05:01:14+00:00,"Merge pull request #25528 from asmorkalov:as/python_hdr_parser_fix

Fixed SyntaxWarning: invalid escape sequence '\w' in header parser."
bc95f27e56d89e486c25e76db0573b610bee6496,Rostislav Vasilikhin,savuor@gmail.com,2024-05-02 17:50:08+00:00,"Merge pull request #25509 from savuor:rv/hal_otsu

HAL added for Otsu threshold #25509

fixes #25393

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
5aaa570fefaf22c4e8537288d85feec16cae9480,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-05-02 17:38:23+00:00,Fixed SyntaxWarning: invalid escape sequence '\w' in header parser.
ed47cce1c54b743c6851b3c514ba1ff821108dd8,Wanli,wanli.zhong.1999@gmail.com,2024-04-17 15:38:46+00:00,change fcn8s-heavy-pascal tests from caffe to onnx
c999cb3c5e4ca8e5e5600ff16e7c3130db6cde57,NlSEMONO,86743730+NlSEMONO@users.noreply.github.com,2024-05-02 15:38:18+00:00,Update text_detection.cpp
ce642e994deebea7c2484a68027703d71b21b3ef,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-02 11:41:14+00:00,"Merge pull request #25510 from Kumataro:fix25497

highgui: wayland: support imshow() without pre-calling namedWindow()"
1c9efbd4bed6983b4cfbbb872e259455c7833882,Kumataro,Kumataro@users.noreply.github.com,2024-05-02 11:40:27+00:00,"Merge pull request #25523 from Kumataro:fix25522

videoio: obsensor: remove OB_EXT_CMD10 to suppress warning #25523

Close #25522

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
f3f29fa62cdc18f0655aace0b75ed65bef6536bb,Alexander Lyulkov,alexander.lyulkov@opencv.ai,2024-05-02 11:37:40+00:00,Added more OpenVINO layers to dnn
b5cf4f1483cb3a3884bbec08f289ba8f7b582b91,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-01 18:03:00+00:00,"Merge pull request #25514 from xndcn:patch-1

Fix doc about uniform parameter for imgproc calcBackProject function"
1f6f092a9d2ba139b825a0dee47a78b0cf6f0319,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-05-01 07:06:44+00:00,"Merge pull request #25513 from zihaomu:fix_25498

fix statckblur big kernel case"
22de887c00664a88b7877b2611dbb9e73f05a339,zihaomu,zihaomu@outlook.com,2024-04-30 10:07:21+00:00,fix statckblur big kernel case
e3fc850ec226d61ad16a85fe4cb8b2376f62beff,xndcn,xndchn@gmail.com,2024-04-30 08:58:51+00:00,"Fix doc about uniform parameter for imgproc calcBackProject function

It is said ""see above"" because calcBackProject is listed under calcHist function in source file, while it is listed before due to the lexicographic ordering."
cbf71c380f5e593263ab9bdc9119fb8d81c30de1,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-30 08:45:03+00:00,"Merge pull request #25502 from Kumataro:fix25501

highgui: wayland: reduce cpu usage for cv::waitKey()"
716826cccd68bcadaf824e2a60fd1e8c33e12fdf,Kumataro,Kumataro@users.noreply.github.com,2024-04-30 01:01:32+00:00,highgui: wayland: support imshow() without pre-calling namedWindow()
2a2ff5525720d110c9c462cd46e0e0655c7fb0fa,Kumataro,Kumataro@users.noreply.github.com,2024-04-29 15:58:29+00:00,"Merge pull request #25496 from Kumataro:fix25495

highgui: wayland: show ""NO"" status if dependency is missing #25496

Close #25495

- [doc] Add document to enable Wayland highgui-backend in ubuntu 24.04.
- [build] Show ""NO"" status instead of version if dependency library is missing.
- [build] Fix to find Wayland EGL.
- [fix] Add some callback stub functions to suppress build warning.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [ ] I agree to contribute to the project under Apache 2 License.
- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [ ] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
b1e01970ef07c90d407b5c6147c16aeb3d39c7d7,Dmitry Kurtaev,dmitry.kurtaev@gmail.com,2024-04-29 11:35:14+00:00,"Merge pull request #25308 from dkurt:not_normalized_findHomography

Not-normalized output from findHomography #25308

### Pull Request Readiness Checklist

resolves https://github.com/opencv/opencv/issues/25133
resolves https://github.com/opencv/opencv/issues/4834
resolves https://github.com/opencv/opencv/issues/22166
resolves https://github.com/opencv/opencv/issues/18592

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
6682270b4c6c6182ad84c356ea00753221a636d1,Kumataro,Kumataro@users.noreply.github.com,2024-04-28 09:39:19+00:00,highgui: wayland: reduce cpu usage for cv::waitKey()
12e2cc9502bc51bb01ed3fdd2f39ce1533c8236e,Rostislav Vasilikhin,savuor@gmail.com,2024-04-27 11:38:44+00:00,"Merge pull request #25491 from savuor:rv/hal_norm_hamming

HAL for Hamming norm added #25491

fixes #25474

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
357b9abaef117665bd2471c495846320aa8877cc,Rostislav Vasilikhin,savuor@gmail.com,2024-04-27 11:33:13+00:00,"Merge pull request #25450 from savuor:rv/svd_perf

Perf tests for SVD and solve() created #25450

fixes #25336

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
8af76698edde60ba475a76a14d56bacc2c022e4b,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-27 10:13:52+00:00,"Merge pull request #25493 from vrabaud:tiff

Replace static numpy allocator by function containing static."
8f7e55a60b40a7f4c0ffcae677d2073a22765e71,Vincent Rabaud,vrabaud@google.com,2024-04-26 08:43:03+00:00,"Replace static numpy allocator by function containing static.

That enables the numpy code to be its own library, in case
some users want to (e.g. CLIF library)."
2cd330486ec4597eab49c1575fc4a6603f205a6a,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-26 08:14:18+00:00,"Merge pull request #25490 from asmorkalov:as/HAL_moments

Added moments interface to HAL."
d0978cea3909dce1eb4e72aa069e8a8d745c04e5,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-04-25 13:42:48+00:00,Added moments interface to HAL.
7b58ffebd0b52072fa38fcaa7da547c66ef3c4e6,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-25 08:23:55+00:00,"Merge pull request #25486 from asmorkalov:as/gapi_warning_fix

Fixed build warnings introduced in #24938"
2225b257cfd41a957a2fcfea6f757b09c1d67d11,inkredibl,inkredibl@gmail.com,2024-04-25 08:05:16+00:00,"Merge pull request #25488 from inkredibl:doc-fix-findEssentialMat

Fix documentation for findEssentialMat to reflect how it actually works. #25488

Documentation for findEssentialMat() incorrectly states that the method uses the same cameraMatrix for both lists of points even though there are two cameraMatrix and distCoeffs.

Checked the code and it does the right thing i.e. uses cameraMatrix1, distCoeffs1 for points1 and cameraMatrix2, distCoeffs2 for points2.

Updated the documentation for the method to clarify what it does. The code itself is not changed."
7bad12c33ba1dbd4fcd02998a58cb6b5e7edffc3,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-04-24 14:24:00+00:00,Fixed build warnings introduced in #24938
ebea65777f30e0090807d410b8ab878517795a32,Daria Mityagina,daria.mityagina@intel.com,2024-04-24 13:25:00+00:00,"Merge pull request #24938 from DariaMityagina:icv/dm/add-media-frame-support-to-govbackend

G-API OV backend requires cv::MediaFrame #24938

### Pull Request Readiness Checklist

**Background_subtraction demo G-API issue. Update:**

Porting to API20 resulted in an error (both for CPU and NPU):
```
[ERROR] OpenCV(4.9.0-dev) /home/runner/work/open_model_zoo/open_model_zoo/cache/opencv/modules/gapi/src/backends/ov/govbackend.cpp:813: error: (-215: assertion not done ) cv::util::holds_alternative<cv::GMatDesc>(input_meta) in function 'cfgPreProcessing'
```

Adding cv::MediaFrame support to govbackend resulted in the following (tested with CPU):
<img width=""941"" alt=""image"" src=""https://github.com/opencv/opencv/assets/52502732/3a003d61-bda7-4b1e-9117-3410cda1ba32"">

### TODO

- [ ] **As part of the review process [this comment](https://github.com/opencv/opencv/pull/24938#discussion_r1487694043) was addressed which make it impossible to run the demo. I will bring those changes back in a separate PR [support `PartialShape`]**

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
7e56908306934d6e1c337e27a8473d6ea86a8623,Maksim Shabunin,maksim.shabunin@gmail.com,2024-04-24 11:28:31+00:00,"Merge pull request #25469 from mshabunin:cpp-emd

imgproc: refactor EMD to reduce C-API usage #25469

- added more tests for EMD
- refactored to remove CvArr
- used BufferArea for memory allocations
- renamed functions and variables and formatted the code
- kept legacy functions intact in separate header"
5b0843728ebd96196dbeef31cfa81c37f04234d5,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-22 13:38:00+00:00,"Merge pull request #25453 from Kumataro:fix25452

imgcodecs: jpeg: refactoring for JpegEncoder"
616a913fa2abf499be0d7279aab5f534c3b83d9d,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-22 13:03:33+00:00,"Merge pull request #25468 from WanliZhong:change_js_ocvFaceDet_sample

Replace opencv_face_detector with YuNet in js_face_recognition sample"
50b6edc9ba8157570a7b147f31b2ea36260c2021,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-22 08:43:25+00:00,"Merge pull request #25321 from dkurt:skip_gapi_test

Skip InferList.TestStreamingInfer"
ae85e516c03d78a1befa5001c6918dfb42529511,LuukvandenBent,94459309+LuukvandenBent@users.noreply.github.com,2024-04-22 08:12:29+00:00,"Merge pull request #25423 from LuukvandenBent:CalibrateHandEyeDatatypeFix

Calibrate hand eye datatype fix #25423

Fix for issue https://github.com/opencv/opencv/issues/25421.

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
096ccd410b57089c4545de6ad759e7622014b5a1,Wanli,wanli.zhong.1999@gmail.com,2024-04-22 07:59:54+00:00,change js_face_recognition sample with yunet
3f8b56ec499b5eab68873e9d92d04e724cf86bf0,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-22 06:55:14+00:00,"Merge pull request #25459 from Kumataro:investigate_tiff_test

imgcodecs: tiff: test: ASSERT_NO_THROW() for imwrite/imread"
fb2af90daacc0dc3123741fd6371f5aa943ee935,Laurent Berger,laurent.berger@univ-lemans.fr,2024-04-19 10:38:17+00:00,"Merge pull request #25354 from LaurentBerger:uiname

Add cv::currentUIFramework #25354

issue https://github.com/opencv/opencv/issues/25329

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [ ] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
26798e1f7c90b556eee5b7efbe695c7e93439b02,Kumataro,Kumataro@users.noreply.github.com,2024-04-19 10:20:05+00:00,imgcodecs: tiff: test: ASSERT_NO_THROW() for imwrite/imread
fc5eb101bfcb16fa21e1f648f0b47f8a68fb4895,Vincent Rabaud,vrabaud@google.com,2024-04-19 10:00:27+00:00,"Merge pull request #25447 from vrabaud:tiff

Remove unnecessary FIXIT section in grfmt_tiff.cpp #25447

No int64/uint64 is used in the code anymore.

grfmt_tiff.hpp includes the tiff.h header inside of the tiff_dummy_namespace declaration. One implication of this is that all namespaced declarations made in tiff.h become qualified with tiff_dummy_namespace::.

Because tiff.h includes standard library headers, the std namespace declarations are converted to tiff_dummy_namespace::std declarations.

Subsequently, grfmt_tiff.hpp declares using namespace tiff_dummy_namespace;.

This can lead to an ambiguity error during the resolution of the std namespace.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work"
882f46e1d30c30db1b53d0eca4f188a7f8cc30a9,JunX,junchen0102@gmail.com,2024-04-19 08:55:17+00:00,"Merge pull request #25317 from junxnone:ipp_202110

Fix for IPP 2021.10 with OneAPI 2024 #25317

fixes #25270

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
5da17a4b03b9b9cac92ccadd5fda249523dfdd79,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-19 08:36:31+00:00,"Merge pull request #25454 from fengyuentau:fix_core_gemm_acc

core: fix `Core_GEMM.accuracy` failure on recent macOS"
a604304e87d9fa0bb44448212ed8abe89836013d,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-19 07:12:16+00:00,"Merge pull request #25430 from asmorkalov:as/FaceDetectorYN_js

Added FaceDetectorYN to OpenCV JS API"
4ef5986d4de9657ca6e86703d474d20789d739ca,fengyuentau,yuantao.feng@opencv.org.cn,2024-04-19 06:24:26+00:00,remove manual unrolling that causes problem
fb194a4582d3df6fa01bd7c07025bcec6e0636eb,Kumataro,Kumataro@users.noreply.github.com,2024-04-19 06:06:28+00:00,imgcodecs: jpeg: refactoring for JpegEncoder
c577b2440643bf98942cfd8c49478c545c3fa56b,Kumataro,Kumataro@users.noreply.github.com,2024-04-18 15:11:07+00:00,"Merge pull request #25445 from Kumataro:fix25403

apps: createsamples: fix comment to remove last backslash #25445

Close #25403

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
a1e4444fb5ce9ee3d4afa80073e49dcc7ed6c6dd,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-18 06:33:49+00:00,"Merge pull request #25439 from mshabunin:cpp-contours-5-back

imgproc: sync boundingRect function with 5.x"
d77dbbe7a0c791deaf7f9c612cbfaa36a5e55b0c,Maksim Shabunin,maksim.shabunin@gmail.com,2024-04-17 11:49:28+00:00,imgproc: sync boundingRect function with 5.x
b8ec9492b4c0cd3899e328b643a10a5e9f347cf0,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-17 14:13:41+00:00,"Merge pull request #25432 from vrabaud:webp_1.4.0

Bump libwebp to v1.4.0"
c317a3ee89e79b6c26ad5c4406e56998723f2f92,Vincent Rabaud,vrabaud@google.com,2024-04-17 13:58:10+00:00,"Merge pull request #25419 from vrabaud:ffmpeg

Fix race condition in InternalFFMpegRegister initialization. #25419

initLogger_ does not check if the logger has been initizalized before and it might initialize it several times from different threads, racing with other threads that are logging.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work"
85673afb47941c4c833c18ee8dd3921435b132e5,Vincent Rabaud,vrabaud@google.com,2024-04-17 12:36:44+00:00,Bump libwebp to v1.4.0
05a54b1405bdd7ef5d7cf3d3215332cac50f0416,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-17 11:24:17+00:00,"Merge pull request #25397 from asmorkalov:as/HAL_GaussianBlur_bit_exact

Added HAL function for popular bit-exact branch of GaussianBlur with sigma=0"
f9e95678700c8bf8b3e484a548b9856e40995ffb,Maksim Shabunin,maksim.shabunin@gmail.com,2024-04-17 11:19:05+00:00,"Merge pull request #25424 from mshabunin:fix-features2d-test

features2d: reduce accuracy test avg memory consumption #25424

**Merge with contrib**: https://github.com/opencv/opencv_contrib/pull/3722

I've observed high memory consumption in the `opencv_test_features2d` (x86_64, Ubuntu 22.04, Debug):

![image](https://github.com/opencv/opencv/assets/3304494/419d65d9-d727-4d1e-bdec-dbde6681c188)
It's always more than 180 MiB with peak at 535 MiB

This was caused by pointers to the algorithm object instances stored in the tests parameters. I've replaced them with factory functions/lambdas with the following result:

![image](https://github.com/opencv/opencv/assets/3304494/bd4ff0ea-3db4-4ab8-8e6d-192a3826e99c)
Now peak is at 355 MiB and permanent consumption level is ~ 1-2 MiB


**Note:** current peak is caused by KAZE features allocating 8x image size utility buffers. Not sure if we can or should do anything about it: https://github.com/opencv/opencv/blob/66fb5021e9253e3decab376d00322eaf2b279c89/modules/features2d/src/kaze/KAZEFeatures.cpp#L61-L68"
577ad0a5ad15b4af642a1ddba289283f470759a5,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-17 11:14:21+00:00,"Merge pull request #25399 from asmorkalov:as/HAL_remap

New HAL API for remap"
3cc83c7610e12b79349c4ae5e5d833a4c6bedd81,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-04-17 09:59:49+00:00,Added FaceDetectorYN to OpenCV JS API.
37ca0308a773a6504d3fceeb1efe6bf3c014a414,Linaname,30354029+Linaname@users.noreply.github.com,2024-04-17 08:26:56+00:00,"Merge pull request #25402 from Linaname:4.x

Handle top and left border masked pixels correctly in inpaint method #25402

Fixes #25389

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
a4b4808d9d6a21d67489aba181999c1ba6331d34,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-04-11 12:57:42+00:00,New HAL API for remap
f643964c6863dcbcdc83029c611b76cf9224a49b,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-04-11 12:11:02+00:00,Added HAL function for popular bit-exact branch of GaussianBlur with sigma=0.
f9dd20eb07210f4759889f667fc8fc1ad90f55da,alexlyulkov,alex.lyulkov@gmail.com,2024-04-17 06:38:21+00:00,"Merge pull request #25414 from alexlyulkov:al/range-fixed

Fixed ONNX range layer #25414

Partially address https://github.com/opencv/opencv/issues/25363
Fixed ONNX range layer. It should support any input type.
Added tests (extra [PR](https://github.com/opencv/opencv_extra/pull/1170))

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
66fb5021e9253e3decab376d00322eaf2b279c89,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-16 09:16:35+00:00,"Merge pull request #25413 from Linaname:#25404

Correct inpainting floating point values with Telea's algorithm"
e2621f128e85af2a008fcd1f694349cfa3bb1d3a,Alexander Panov,alexander.panov@xperience.ai,2024-04-16 09:14:33+00:00,"Merge pull request #25378 from AleksandrPanov:move_charuco_tutorial

Move Charuco/Calib tutorials and samples to main repo #25378

Merge with https://github.com/opencv/opencv_contrib/pull/3708

Move Charuco/Calib tutorials and samples to main repo:

- [x] update/fix charuco_detection.markdown and samples
- [x] update/fix charuco_diamond_detection.markdown and samples
- [x] update/fix aruco_calibration.markdown and samples
- [x] update/fix aruco_faq.markdown
- [x] move tutorials, samples and tests to main repo
- [x] remove old tutorials, samples and tests from contrib


### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
4fb05419166c0af12c46dfb1da126887e68d83bb,Alexander Alekhin,alexander.a.alekhin@gmail.com,2024-04-15 11:51:36+00:00,Merge remote-tracking branch 'upstream/3.4' into merge-3.4
c622ffd95f7c933972216947a8b5d4a78c5b89e1,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-15 11:37:41+00:00,"Merge pull request #25365 from MaximSmolskiy:take-first-suitable-neighbor-in-ChessBoardDetector-findQuadNeighbors

Take first suitable neighbor in ChessBoardDetector::findQuadNeighbors"
02a74f2e8898a36d8a3025f8504d9b62aee5ead4,eplankin,elena.plankina@intel.com,2024-04-15 10:03:44+00:00,"Merge pull request #25377 from eplankin:3.4

* Update IPP integration

* Updated packages and hashes"
0eef34a670bc1b5e815df4c4eac23d1ffe96467c,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-15 06:06:14+00:00,"Merge pull request #25407 from Kumataro:fix25401

imgproc: doc: fix arrow symbols in header"
dfb6069ad9857472a4b7b2d605b6a462f0b6884f,mikhail.shtennikov,mikhail.shtennikov@myoffice.team,2024-04-14 21:59:58+00:00,Inpainting floating point values with Telea's algorithm gives unexpected results
66ab0bee7a19f23ae1d5e19884ca75b7cacf3629,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-13 08:10:36+00:00,"Merge pull request #25388 from asmorkalov:as/jpeg-turbo-diagnostics

Fixed jpeg-turbo diagnostics and build options in default configuration."
0bd066ee5857197f172d82806917f0f9005ae30b,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-13 08:06:58+00:00,"Merge pull request #25406 from VadimLevin:dev/vlevin/numpy-array-typing-constraints

feat: use numeric dtype for MatLike instead of generic"
002d0542ddff6f9cecd6e21b32764857d03443d8,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-13 08:01:48+00:00,"Merge pull request #25405 from VadimLevin:dev/vlevin/ios-framework-privacy-info

feat: add PrivacyInfo file to iOS framework"
2eb9e915d9862417d72caedee3f9a3983084761b,Kumataro,Kumataro@users.noreply.github.com,2024-04-12 21:14:49+00:00,imgproc: doc: fix arrow symbols in header
079e615fbd81325e8916ad2c18f0b234d5907e0e,Vadim Levin,vadim.levin@xperience.ai,2024-04-12 11:11:43+00:00,feat: add PrivacyInfo file to iOS framework
caa09aca368066011bdf4f2adbffa935ffe60912,Vadim Levin,vadim.levin@xperience.ai,2024-04-12 12:10:59+00:00,feat: use numeric dtype for MatLike instead of generic
ecbfc1bfd8d77e3dc5f3e0d981ce952e06c5f7e1,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-12 08:05:34+00:00,"Merge pull request #25395 from susumu-iino:fix-dnn-plugin-build-win32

Fix dnn plugin build win32"
06c1c7b5cb114a4192aab1f3a73c1444e5747647,Alexander Alekhin,alexander.a.alekhin@gmail.com,2024-04-11 15:34:48+00:00,Merge pull request #25396 from mshabunin:test-tag-contours
c081efe3c67c128ec23976ed743bd4e4567bdbc0,Maksim Shabunin,maksim.shabunin@gmail.com,2024-04-11 11:37:32+00:00,imgproc: add 512mb tag for FindContours.accuracy test
197626a5bf6e6347122937fe44a204474c73b7ac,Yuantao Feng,yuantao.feng@opencv.org.cn,2024-04-11 11:02:44+00:00,"Merge pull request #25387 from fengyuentau:complete-float16_t-renaming

Rename remaining float16_t for future proof #25387

Resolves comment: https://github.com/opencv/opencv/pull/25217#discussion_r1547733187.

`std::float16_t` and `std::bfloat16_t` are introduced since c++23: https://en.cppreference.com/w/cpp/types/floating-point.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
2c5b296ab2f970a2fff4ef519f412c1ec9920056,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-11 06:15:15+00:00,"Merge pull request #25343 from asmorkalov:as/HAL_bilaterialFilter

HAL interface for bilaterialFilter"
17c7f76da3a8e880734e2f3628e43e0ae80dabe8,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-04-05 09:50:21+00:00,HALL interface for bilaterialFilter.
a10e33979af62812ea4e495c454cd2792f49212f,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-11 05:34:49+00:00,"Merge pull request #25391 from Kumataro:refix25073

core: persistence: use hfloat instead of float16_t"
d22d0bd49c34db40999efe23dda37959e01877ff,Kumataro,Kumataro@users.noreply.github.com,2024-04-10 20:09:34+00:00,core: persistence: use hfloat instead of float16_t
9813ea2b7ae117e64ed9d86281151ba34fa16dc8,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-10 13:50:38+00:00,"Merge pull request #25306 from utibenkei:fix_build_of_dynamic_framework_for_visionos

fix build of dynamic framework for visionos"
bbd905933407a0c66a71588c65b6e868a09e09da,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-04-10 13:19:59+00:00,Fixed jpeg-turbo diagnostics and build options in default configuration.
b14ea194666eab746a6596de29bdf758373da00a,Kumataro,Kumataro@users.noreply.github.com,2024-04-10 12:17:15+00:00,"Merge pull request #25351 from Kumataro:fix25073_format_g

core: persistence: output reals as human-friendly expression. #25351

Close #25073
Related https://github.com/opencv/opencv/pull/25087

This patch is need to merge same time with https://github.com/opencv/opencv_contrib/pull/3714

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake"
cf3a130be6db28b61180232d2c50ef9cd3908f4b,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-10 09:48:12+00:00,"Merge pull request #25385 from asmorkalov:as/new_contours_cleanup

Removed old C API usage in new findContours implementation"
5bad694b7f48f1bf0041541e801faeaedcf195c0,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-04-10 08:19:55+00:00,Removed old C API usage in new findContours implementation.
d0ec39206a20c124f91a508fe95884ffc931fbcc,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-10 07:44:05+00:00,"Merge pull request #25383 from asmorkalov:as/win32_arm_ci

Added experimental build for Windows ARM64 to CI."
cf3e90ab91b1e01c0f685ff1b0d2ee8fb71b7f94,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-04-10 07:26:34+00:00,Added experimental build for Windows ARM64 to CI.
369760116e2e8b60b90905f4e5602bcbd51e130e,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-10 06:50:30+00:00,"Merge pull request #25375 from asmorkalov:as/win32_arm_warning

Supress build warnings on Win32 for ARM"
9ced486497a5f94116bb54ddcb421679322adf7d,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-10 06:21:08+00:00,"Merge pull request #25381 from gmatheu:v4.x_js_markdown_typo

Fixing code example on js image display documentation"
b3e863fee4df6882d9152e8a41ddb0d09a3e4bdc,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-10 05:39:18+00:00,"Merge pull request #25380 from mshabunin:fix-calib-tests

calib3d: increased AP3P test threshold for RISC-V platform"
148b2ec3e000bc1cc943cc69c4ea0ee287b8cb7a,Maksim Shabunin,maksim.shabunin@gmail.com,2024-04-09 20:47:30+00:00,calib3d: increased AP3P test threshold for RISC-V platform
cb339ac6d1d90d96920a61608e9d1d34bb388ef6,Gonzalo Matheu,gonzalommj@gmail.com,2024-04-09 19:06:08+00:00,"Fixing code example on 
js_image_display markdown"
f37924796f5e07d14b9011400573a48343a22d26,Maksim Shabunin,maksim.shabunin@gmail.com,2024-04-09 14:44:36+00:00,"Merge pull request #25364 from mshabunin:fix-unaligned-filter

imgproc: fix unaligned memory access in filters and Gaussian blur #25364

* filter/SIMD: removed parts which casted 8u pointers to int causing unaligned memory access on RISC-V platform.
* GaussianBlur/fixed_point: replaced casts from s16 to u32 with union operations

Performance comparison:
- [x] check performance on x86_64 - (4 threads, `-DCPU_BASELINE=AVX2`, GCC 11.4, Ubuntu 22) - [report_imgproc_x86_64.ods](https://github.com/opencv/opencv/files/14904702/report_x86_64.ods)
- [x] check performance on AArch64 - (4 cores of RK3588, GCC 11.4 aarch64, Raspbian) - [report_imgproc_aarch64.ods](https://github.com/opencv/opencv/files/14908437/report_aarch64.ods)

Note: for some reason my performance results are quite unstable, unaffected functions show speedups and slowdowns in many cases. Filter2D and GaussianBlur seem to be OK.

Slightly related PR: https://github.com/opencv/ci-gha-workflow/pull/165"
953581a92a0b168769298d0002ed46b108b6056a,Alessandro de Oliveira Faria (A.K.A.CABELO),cabelo@opensuse.org,2024-04-09 13:56:07+00:00,"Merge pull request #25357 from cabelo:yolov8m

Added and tested yolov8m model. #25357

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [X] I agree to contribute to the project under Apache 2 License.
- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [X] The PR is proposed to the proper branch
- [X] There is a reference to the original bug report and related work
- [X] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [X] The feature is well documented and sample code can be built with the project CMake

Below is evidence of the test:
![yolov8m](https://github.com/opencv/opencv/assets/675645/f9bfe2c6-fe4a-42fc-93a6-17e4da5c9bb5)"
e4677fbf64ef2272010aae2514c68e28cc02adcc,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-09 13:04:02+00:00,"Merge pull request #25361 from hanliutong:rvv-f32

Further optimize fastDepthwiseConv for RISC-V Vector."
4221ae1d643a86e3d0574c9e70867d3b209f49ed,Alexander Smorkalov,alexander.smorkalov@xperience.ai,2024-04-09 09:57:23+00:00,Supress build warnings on Win32 for ARM.
b0d905864d6af8fef33ab30e102aa3cfcb329fe0,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-09 08:51:00+00:00,"Merge pull request #25371 from alexlyulkov:al/adaptive-threshold-tests

Added tests for adaptiveThreshold and sepFilter2D"
a25132986a32f9f99c49758bbb17be838728007c,Maksim Shabunin,maksim.shabunin@gmail.com,2024-04-09 06:37:49+00:00,"Merge pull request #25146 from mshabunin:cpp-contours

Reworked findContours to reduce C-API usage #25146

What is done:
* rewritten `findContours` and `icvApproximateChainTC89` using C++ data structures
* extracted LINK_RUNS mode to separate new public functions - `findContoursLinkRuns` (it uses completely different algorithm)
* ~added new public `cv::approximateChainTC89`~ - **:x: decided to hide it**
* enabled chain code output (method = 0, no public enum value for this in C++ yet)
* kept old function as `findContours_old` (exported, but not exposed to user)
* added more tests for findContours (`test_contours_new.cpp`), some tests compare results of old function with new one. Following tests have been added:
  * contours of random rectangle
  * contours of many small (1-2px) blobs
  * contours of random noise
  * backport of old accuracy test
  * separate test for LINK RUNS variant

What is left to be done (can be done now or later):
* improve tests: 
  * some tests have limited verification (e.g. only verify contour sizes)
  * perhaps reference data can be collected and stored
  * maybe more test variants can be added (?)
* add enum value for chain code output and a method of returning starting points (e.g. first 8 elements of returned `vector<uchar>` can represent 2 int point coordinates)
* add documentation for new functions - **:heavy_check_mark: DONE**
* check and improve performance (my experiment showed 0.7x-1.1x some time ago)
* remove old functions completely (?)
* change contour return order (BFS) or allow to select it (?)
* return result tree as-is (?) (new data structures should be exposed, bindings should adapt)"
e5d530abaeb12ae5aca342c70dea090fd22c8474,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-09 06:03:13+00:00,"Merge pull request #25342 from asmorkalov:as/HAL_transpose

HAL interface for transpose2d."
e55cf444ccec499e655a401923293b9a627c4bef,Alexander Smorkalov,2536374+asmorkalov@users.noreply.github.com,2024-04-08 15:58:41+00:00,"Merge pull request #25372 from CNOCycle:tflite/ShapeChecker

Add a shape checker for tflite models"
8ed52cb5647c73c767843a975a47867c7d34b1fe,Kumataro,Kumataro@users.noreply.github.com,2024-04-08 15:47:58+00:00,"Merge pull request #25356 from Kumataro:fix25345

core: doc: add note for countNonZero, hasNonZero and findNonZero #25356

Close #25345 

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [x] There is a reference to the original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake"
e63690a2d9b0fb50c687b239f2d699436b442447,ecchen,ec697@andestech.com,2024-04-06 13:55:17+00:00,Add a shape checker for tflite models
